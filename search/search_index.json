{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home Assistant Octopus Energy","text":""},{"location":"#features","title":"Features","text":"<p>Below are the main features of the integration</p> <ul> <li>Electricity and gas meter support including consumption data and rate information</li> <li>Custom sensor support to target cheapest rates</li> <li>Custom sensor support for tracking costs of other entities</li> <li>Custom sensor support for comparing to other tariffs</li> <li>Octopus Home mini support</li> <li>Octopus Home Pro support (Experimental)</li> <li>Intelligent tariff settings support</li> <li>Saving sessions support</li> <li>Wheel of fortune support</li> <li>Greener days support</li> <li>Heat Pump support</li> </ul>"},{"location":"#how-to-install","title":"How to install","text":"<p>There are multiple ways of installing the integration. Once you've installed the integration, you'll need to setup your account before you can use the integration.</p>"},{"location":"#hacs","title":"HACS","text":"<p>This integration can be installed directly via HACS. To install:</p> <ul> <li>Add the repository to your HACS installation</li> <li>Click <code>Download</code></li> </ul>"},{"location":"#manual","title":"Manual","text":"<p>You should take the latest published release. The current state of <code>develop</code> will be in flux and therefore possibly subject to change.</p> <p>To install, place the contents of <code>custom_components</code> into the <code>&lt;config directory&gt;/custom_components</code> folder of your Home Assistant installation. Once installed, don't forget to restart your home assistant instance for the integration to be picked up.</p>"},{"location":"#how-to-setup","title":"How to setup","text":"<p>Please follow the setup guide to setup your initial account. This guide details the configuration, along with the entities that will be available to you.</p>"},{"location":"#entities","title":"Entities","text":""},{"location":"#electricity-entities","title":"Electricity Entities","text":"<p>Full list of electricity entities.</p>"},{"location":"#gas-entities","title":"Gas Entities","text":"<p>Full list of gas entities.</p>"},{"location":"#home-mini","title":"Home Mini","text":"<p>If you are lucky enough to own an Octopus Home Mini (you can request one via this link), you can now receive this data within Home Assistant. When setting up (or editing) your account within Home Assistant, you will need to check the box next to <code>I have a Home Mini</code>. This will gain electricity entities and gas entities which can be added to the energy dashboard.</p> <p>Info</p> <p>You will only have the same data exposed in the integration that is available within the Octopus app. There has been reports of gas not appearing within the Octopus app (and integration) straight away, so you might have to wait a few days for this to appear. Once it's available within the Octopus app, if you reload the integration (or restart Home Assistant) then the entities should become available.</p> <p>Warning</p> <p>Export sensors are not provided as the data is not available.</p>"},{"location":"#home-pro","title":"Home Pro","text":"<p>If you are lucky enough to own an Octopus Home Pro (note that is is no longer possible to obtain one), you can now receive this data within Home Assistant. When setting up (or editing) your account within Home Assistant, you will need to configure your Home Pro. This will gain electricity entities and gas entities which can be added to the energy dashboard.</p> <p>Info</p> <p>You will only have the same data exposed in the integration that is available within the Octopus app. There has been reports of gas not appearing within the Octopus app (and integration) straight away, so you might have to wait a few days for this to appear. Once it's available within the Octopus app, if you reload the integration (or restart Home Assistant) then the entities should become available.</p> <p>Warning</p> <p>Export sensors are not provided as the data is not available.</p>"},{"location":"#intelligent","title":"Intelligent","text":"<p>If you are on the intelligent tariff, then you'll get a few additional entities when you install the integration. </p> <p>List of intelligent entities.</p> <p>Warning</p> <p>If you switch to the intelligent tariff after you have installed the integration, you will need to reload the integration or restart your Home Assistant instance.</p>"},{"location":"#octoplus","title":"Octoplus","text":"<p>To support Octopus Energy's octoplus programme. Full list of octoplus entites.</p>"},{"location":"#wheel-of-fortune","title":"Wheel of Fortune","text":"<p>To support the wheel of fortune that is awarded every month to customers. Full list of wheel of fortune entites.</p>"},{"location":"#greenness-forecast","title":"Greenness Forecast","text":"<p>To support Octopus Energy's greener days. Full list of greenness forecast entities.</p>"},{"location":"#heat-pumps","title":"Heat Pumps","text":"<p>To support heat pumps connected to Octopus Energy, like the Cosy 6. Full list of heat pump entities.</p>"},{"location":"#target-rate-sensors","title":"Target Rate Sensors","text":"<p>These sensors calculate the lowest continuous or intermittent rates within a 24 hour period or on a rolling basis and turn on when these periods are active. If you are targeting an export meter, then the sensors will calculate the highest continuous or intermittent rates within a 24 hour period or on a rolling basis and turn on when these periods are active.</p> <p>These sensors can then be used in automations to turn on/off devices that save you (and the planet) energy and money. You can go through this flow as many times as you need target rate sensors.</p> <p>Please follow the setup guides for either standard target rate or rolling target rate sensors.</p>"},{"location":"#cost-tracker-sensors","title":"Cost Tracker Sensors","text":"<p>These sensors track the consumption of other existing sensors and provide a daily cost of those sensors.</p> <p>Please follow the setup guide.</p>"},{"location":"#tariff-comparison-sensors","title":"Tariff Comparison Sensors","text":"<p>These sensors compare the cost of the previous consumption to another tariff to see if you're on the best tariff.</p> <p>Please follow the setup guide.</p>"},{"location":"#events","title":"Events","text":"<p>This integration raises several events, which can be used for various tasks like automations. For more information, please see the events docs.</p>"},{"location":"#services","title":"Services","text":"<p>This integration includes several services. Please review them in the services doc.</p>"},{"location":"#energy-dashboard","title":"Energy Dashboard","text":"<p>The core sensors have been designed to work with the energy dashboard. Please see the energy dashboard guide for instructions on how to set this up.</p>"},{"location":"#blueprints","title":"Blueprints","text":"<p>A selection of blueprints are available to help get you up and running quickly with the integration.</p>"},{"location":"#community-contributions","title":"Community Contributions","text":"<p>A collection of community contributions can be found on the community contributions page.</p>"},{"location":"#faq","title":"FAQ","text":"<p>Before raising anything, please read through the faq. If you have questions, then you can raise a discussion. If you have found a bug or have a feature request please raise it using the appropriate report template.</p>"},{"location":"#sponsorship","title":"Sponsorship","text":"<p>Please see the sponsorship page for more information.</p>"},{"location":"blueprints/","title":"Blueprints","text":"<p>Blueprints are an excellent way to get you up and running with the integration quickly. They can also be used as a guide for setting up new automations which you can tailor to your needs. </p>"},{"location":"blueprints/#rates","title":"Rates","text":""},{"location":"blueprints/#alert-when-rates-change","title":"Alert when rates change","text":"<p>Install blueprint | Source</p> <p>This blueprint will raise a persistent notification within HA when a rate updates.</p>"},{"location":"blueprints/#consumption","title":"Consumption","text":""},{"location":"blueprints/#alert-when-gas-anomaly-detected","title":"Alert when gas anomaly detected","text":"<p>Install blueprint | Source</p> <p>This blueprint will fire a configured action when the consumption has 24 hours worth of records and all thirty minute periods exceed the configured threshold. This can be used to alert you to potential gas leaks.</p> <p>Warning</p> <p>Like everything else with this integration, this is provided as is and should be used as a guide and early warning sign. It will only trigger if all data is available. If triggered, you should use your own judgment to determine if the warning is legitimate.</p>"},{"location":"blueprints/#alert-when-consumption-data-is-late","title":"Alert when consumption data is late","text":"<p>Install blueprint | Source</p> <p>This blueprint will fire a configured action when the latest available consumption data is x hours old, where x is configured via the blueprint.</p>"},{"location":"blueprints/#octoplus","title":"Octoplus","text":""},{"location":"blueprints/#automatically-join-saving-sessions","title":"Automatically join saving sessions","text":"<p>Install blueprint | Source</p> <p>This blueprint will trigger when a new saving session has been discovered, join it, and send a notification alerting you to when it will start.</p> <p>If you wish to customise how the notification is delivered, you should install this blueprint (source)</p>"},{"location":"blueprints/#automatically-redeem-octoplus-points-for-account-credit","title":"Automatically redeem Octoplus points for account credit","text":"<p>Install blueprint | Source</p> <p>This blueprint will automatically redeem all redeemable points for account credit when the number of redeemable points exceeds a configurable threshold.</p> <p>Info</p> <p>This will only trigger when the redeemable points go from under the threshold to over. If it's already over the threshold, then the automation will not trigger. This is by design of Home Assistant.</p> <p>You can manually run the automation if the redeemable points is over the threshold to get it in a state where automatic redemption will happen in the future.</p>"},{"location":"blueprints/#alert-when-current-consumption-is-approaching-saving-sessions-baseline","title":"Alert when current consumption is approaching saving sessions baseline","text":"<p>Install blueprint | Source</p> <p>This blueprint will fire a configured action when the consumption for the current interval (i.e. the current 30 minute period) reaches a configured percentage of the saving session baseline.</p> <p>Warning</p> <p>This blueprint requires sensors provided by Octopus Energy Home Mini</p>"},{"location":"blueprints/#alert-when-current-consumption-has-reached-free-electricity-sessions-baseline","title":"Alert when current consumption has reached free electricity sessions baseline","text":"<p>Install blueprint | Source</p> <p>This blueprint will fire a configured action when the consumption for the current interval (i.e. the current 30 minute period) reaches the current free electricity session baseline.</p> <p>Warning</p> <p>This blueprint requires sensors provided by Octopus Energy Home Mini</p>"},{"location":"blueprints/#intelligent","title":"Intelligent","text":""},{"location":"blueprints/#manual-intelligent-dispatch-refreshes","title":"Manual Intelligent Dispatch Refreshes","text":"<p>Install blueprint | Source</p> <p>This blueprint will fire the intelligent dispatches service either when a sensor from another integration determines the car has been plugged in (e.g. the plug status from the MyEnergi integration) or when the data is stale and overdue a refresh (in case the dispatch information has changed).</p> <p>Warning</p> <p>This blueprint requires you to be on an intelligent tariff and a way to determine that your car is plugged in from another integration.</p>"},{"location":"blueprints/#wheel-of-fortune","title":"Wheel of Fortune","text":""},{"location":"blueprints/#automatically-spin-wheel-of-fortune-single","title":"Automatically spin wheel of fortune (single)","text":"<p>Install blueprint | Source</p> <p>This blueprint will trigger when the number of spins for a given energy source goes above zero, and will spin until the sensor reaches zero.</p>"},{"location":"blueprints/#automatically-spin-wheel-of-fortune-dual","title":"Automatically spin wheel of fortune (Dual)","text":"<p>Install blueprint | Source</p> <p>This blueprint will trigger when either gas or electricity energy source spins are available, and will spin until the sensor reaches zero. This works as above, but combines both sensors into a single automation.</p> <p>Info</p> <p>Due to the nature of this blueprint, you can't manually run this automation as it relies on triggers being present</p>"},{"location":"blueprints/#cost-tracker","title":"Cost Tracker","text":""},{"location":"blueprints/#automatically-update-tracking-negative","title":"Automatically update tracking (negative)","text":"<p>Install blueprint | Source</p> <p>This blueprint will automatically update the tracking state for the specified cost tracker sensors when the monitored sensor goes negative.</p>"},{"location":"blueprints/#automatically-update-tracking-positive","title":"Automatically update tracking (positive)","text":"<p>Install blueprint | Source</p> <p>This blueprint will automatically update the tracking state for the specified cost tracker sensors when the monitored sensor goes positive (including zero).</p>"},{"location":"community/","title":"Community Contributions","text":"<p>These are a few contributions by the community.</p>"},{"location":"community/#agile-price-table","title":"Agile Price Table","text":"<p>If you're wanting to display upcoming prices in a nice readable format, then you can utilise the Octopus Energy Rates card developed by @lozzd.</p> <p></p>"},{"location":"community/#greenness-forecast","title":"Greenness Forecast","text":"<p>If you're wanting to display greenness forecast in a nice readable format, then you can utilise the Octopus Energy Greenness Forecast Card developed by @elyobelyob.</p> <p></p>"},{"location":"community/#home-battery-prediction-and-charging","title":"Home battery prediction and charging","text":"<p>If you use OE with a home battery, you might be interested in predbat, which can take advantage of the data available through this integration.</p>"},{"location":"community/#import-and-export-rates-charts","title":"Import and Export Rates Charts","text":"<p>Thanks to @fboundy you can use ApexCharts Card to plot the import and export rates for the current day using the following configuration.  Remember that the import and export current_day_rates and next_day_rates will be disabled by default and you will have to enable them and wait for the next update of Octopus agile rates at 4pm before you can add this card to your dashboard. Replace <code>{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}{{_export}</code> with your information and whether you want the import or export rate chart:</p> <pre><code>type: custom:apexcharts-card\nheader:\n  show: true\n  show_states: true\n  colorize_states: true\n  title: Agile {{Export}} Rates\ngraph_span: 1d\nstacked: false\nspan:\n  start: day\napex_config:\n  legend:\n    show: false\nyaxis:\n  - min: ~0\n    max: ~35\n    decimals: 1\nseries:\n  - entity: &gt;-\n      event.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}{{_export}}_current_day_rates\n    type: column\n    name: ''\n    color: yellow\n    opacity: 1\n    stroke_width: 0\n    unit: p\n    show:\n      in_header: false\n      legend_value: false\n    data_generator: |\n      return entity.attributes.rates.map((entry) =&gt; {\n      return [new Date(entry.start), entry.value_inc_vat * 100];\n      });\n    offset: '-15min'\n  - entity: &gt;-\n      event.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}{{_export}}_next_day_rates\n    type: column\n    name: ''\n    color: yellow\n    opacity: 1\n    stroke_width: 0\n    unit: p\n    show:\n      in_header: false\n      legend_value: false\n    data_generator: |\n      return entity.attributes.rates.map((entry) =&gt; {\n      return [new Date(entry.start), entry.value_inc_vat * 100];\n      });\n    offset: '-15min'\n</code></pre> <p>which will produce something like the following...</p> <p></p> <p>If you're looking for cost vs power using ApexCharts Card, then @plandregan has you covered with the following configuration. Replace <code>{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}</code> and <code>sensor.givtcp_xxxxxxxxxxxx_grid_power</code> with your information:</p> <pre><code>type: custom:apexcharts-card\nexperimental:\n  color_threshold: true\nheader:\n  show: true\n  floating: true\n  title: Cost vs Power\ngraph_span: 24h\nshow:\n  last_updated: true\n  loading: true\napex_config:\n  legend:\n    show: false\n  chart:\n    zoom:\n      type: x\n      enabled: true\n      autoScaleYaxis: false\n    toolbar:\n      show: true\n      autoSelected: zoom\n    xaxis.type: datetime\n  fill:\n    type: gradient\n    gradient:\n      shadeIntensity: 0.1\n      opacityFrom: 0.3\n      opacityTo: 1\n      inverseColors: true\nseries:\n  - entity: sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_current_rate\n    transform: return x * 100;\n    type: area\n    name: GBP/kWh\n    yaxis_id: pence\n    color: lightblue\n    group_by:\n      func: avg\n      duration: 5m\n    stroke_width: 2\n    extend_to: now\n    show:\n      extremas: false\n      header_color_threshold: true\n  - entity: sensor.givtcp_xxxxxxxxxxxx_grid_power\n    transform: return x /1000;\n    type: line\n    invert: true\n    name: Power\n    yaxis_id: kwh\n    group_by:\n      func: avg\n      duration: 5m\n    color: red\n    stroke_width: 2\n    extend_to: now\nyaxis:\n  - id: pence\n    min: ~0\n    max: ~35\n    opposite: false\n  - id: kwh\n    min: ~0\n    max: ~10\n    opposite: true\n</code></pre> <p>which will produce something like the following...</p> <p></p>"},{"location":"community/#import-and-export-rates-chart","title":"Import and Export Rates Chart","text":"<p>If you're looking to combine import and export rates then create a card with the configuration. Replace <code>{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}</code> with your information:</p> <pre><code>type: custom:config-template-card\nentities:\n  - event.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_current_day_rates\n  - event.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_next_day_rates\n  - event.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_export_current_day_rates\n  - event.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_export_next_day_rates\ncard:\n  card_mod:\n    style: |\n      ha-card {\n        --secondary-text-color: rgb(225,225,225)\n      }\n  type: custom:apexcharts-card\n  show:\n    loading: false\n  color_list:\n    - orange\n    - green  \n  header:\n    title: Electricity tariffs with Octopus\n    show: true\n    show_states: true\n    colorize_states: true\n  span:\n    start: day\n  graph_span: 48h\n  update_interval: 30mins\n  all_series_config:\n    type: area\n    float_precision: 4\n    extend_to: now\n    stroke_width: 2\n    fill_raw: 'null'\n  series:\n    - entity: event.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_current_day_rates\n      name: Import today\n      curve: stepline\n      data_generator: |\n        return entity.attributes.rates.map((entry) =&gt; {\n          return [new Date(entry.start), entry.value_inc_vat];\n        });\n    - entity: event.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_next_day_rates\n      name: Import tomorrow\n      curve: stepline\n      data_generator: |\n        return entity.attributes.rates.map((entry) =&gt; {\n          return [new Date(entry.start), entry.value_inc_vat];\n        });\n    - entity: &gt;-\n        event.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_export_current_day_rates\n      name: Export\n      curve: stepline\n      data_generator: |\n        return entity.attributes.rates.map((entry) =&gt; {\n          return [new Date(entry.start), entry.value_inc_vat];\n        });\n    - entity: &gt;-\n        event.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_export_next_day_rates\n      name: Export\n      curve: stepline\n      data_generator: |\n        return entity.attributes.rates.map((entry) =&gt; {\n          return [new Date(entry.start), entry.value_inc_vat];\n        });\n  apex_config:\n    tooltip:\n      x:\n        format: ddd dd MMM - HH:mm\n    xaxis:\n      axisBorder:\n        show: false\n      tooltip:\n        enabled: false\n    grid:\n      borderColor: '#7B7B7B'\n    legend:\n      show: false\n      toolbar:\n        show: true\n        autoSelected: zoom\n        tools:\n          zoom: true\n          zoomin: false\n          zoomout: false\n          pan: false\n          reset: true\n    annotations:\n      xaxis:\n        - x: ${ new Date().setHours(24,0,0,0) }\n          label:\n            text: Tomorrow\n        - x: ${Date.now()}\n          label:\n            text: Now\n            borderColor: '#00E396'\n            style:\n              color: '#fff'\n              background: '#00E396'\n            borderWidth: 0\n    yaxis:\n      min: ~0\n      max: ~0.4\n      tickAmount: 4\n      labels:\n        formatter: |\n          EVAL:function (val) {\n           return \"\u00a3\" + val.toFixed(2);\n          }\n      forceNiceScale: true\n    chart:\n      height: 150\n      foreColor: '#7B7B7B'\n      zoom:\n        type: x\n        enabled: true\n        autoScaleYaxis: true\n</code></pre> <p>to generate the following card...</p> <p></p>"},{"location":"events/","title":"Events","text":"<p>The following events are raised by the integration. These events power various entities and can also be used within automations.</p>"},{"location":"events/#rates","title":"Rates","text":""},{"location":"events/#electricity-current-day-rates","title":"Electricity Current Day Rates","text":"<p><code>octopus_energy_electricity_current_day_rates</code></p> <p>This is fired when the current day rates are updated.</p> Attribute Type Description <code>rates</code> <code>array</code> The list of rates applicable for the current day <code>tariff_code</code> <code>string</code> The tariff code associated with current day's rates <code>mpan</code> <code>string</code> The mpan of the meter associated with these rates <code>serial_number</code> <code>string</code> The serial number of the meter associated with these rates <code>min_rate</code> <code>float</code> The minimum/lowest rate in the discovered rates collection <code>max_rate</code> <code>float</code> The maximum/highest rate in the discovered rates collection <code>average_rate</code> <code>float</code> The average rate in the discovered rates collection"},{"location":"events/#automation-example","title":"Automation Example","text":"<pre><code>- trigger:\n  - platform: event\n    event_type: octopus_energy_electricity_current_day_rates\n  condition: []\n  action:\n  - service: persistent_notification.create\n    data:\n      title: \"Rates Updated\"\n      message: &gt;\n        New rates available for {{ trigger.event.data.mpan }}. Starting value is {{ trigger.event.data.rates[0][\"value_inc_vat\"] }}\n</code></pre>"},{"location":"events/#electricity-previous-day-rates","title":"Electricity Previous Day Rates","text":"<p><code>octopus_energy_electricity_previous_day_rates</code></p> <p>This is fired when the previous day rates are updated.</p> Attribute Type Description <code>rates</code> <code>array</code> The list of rates applicable for the previous day <code>tariff_code</code> <code>string</code> The tariff code associated with previous day's rates <code>mpan</code> <code>string</code> The mpan of the meter associated with these rates <code>serial_number</code> <code>string</code> The serial number of the meter associated with these rates <code>min_rate</code> <code>float</code> The minimum/lowest rate in the discovered rates collection <code>max_rate</code> <code>float</code> The maximum/highest rate in the discovered rates collection <code>average_rate</code> <code>float</code> The average rate in the discovered rates collection"},{"location":"events/#automation-example_1","title":"Automation Example","text":"<pre><code>- trigger:\n  - platform: event\n    event_type: octopus_energy_electricity_previous_day_rates\n  condition: []\n  action:\n  - service: persistent_notification.create\n    data:\n      title: \"Rates Updated\"\n      message: &gt;\n        New rates available for {{ trigger.event.data.mpan }}. Starting value is {{ trigger.event.data.rates[0][\"value_inc_vat\"] }}\n</code></pre>"},{"location":"events/#electricity-next-day-rates","title":"Electricity Next Day Rates","text":"<p><code>octopus_energy_electricity_next_day_rates</code></p> <p>This is fired when the next day rates are updated.</p> Attribute Type Description <code>rates</code> <code>array</code> The list of rates applicable for the next day <code>tariff_code</code> <code>string</code> The tariff code associated with next day's rates <code>mpan</code> <code>string</code> The mpan of the meter associated with these rates <code>serial_number</code> <code>string</code> The serial number of the meter associated with these rates <code>min_rate</code> <code>float</code> The minimum/lowest rate in the discovered rates collection <code>max_rate</code> <code>float</code> The maximum/highest rate in the discovered rates collection <code>average_rate</code> <code>float</code> The average rate in the discovered rates collection"},{"location":"events/#automation-example_2","title":"Automation Example","text":"<pre><code>- trigger:\n  - platform: event\n    event_type: octopus_energy_electricity_next_day_rates\n  condition: []\n  action:\n  - service: persistent_notification.create\n    data:\n      title: \"Rates Updated\"\n      message: &gt;\n        New rates available for {{ trigger.event.data.mpan }}. Starting value is {{ trigger.event.data.rates[0][\"value_inc_vat\"] }}\n</code></pre>"},{"location":"events/#electricity-previous-consumption-rates","title":"Electricity Previous Consumption Rates","text":"<p><code>octopus_energy_electricity_previous_consumption_rates</code></p> <p>This is fired when the previous consumption's rates are updated.</p> Attribute Type Description <code>rates</code> <code>array</code> The list of rates applicable for the previous consumption <code>tariff_code</code> <code>string</code> The tariff code associated with previous consumption's rates <code>mpan</code> <code>string</code> The mpan of the meter associated with these rates <code>serial_number</code> <code>string</code> The serial number of the meter associated with these rates <code>min_rate</code> <code>float</code> The minimum/lowest rate in the discovered rates collection <code>max_rate</code> <code>float</code> The maximum/highest rate in the discovered rates collection <code>average_rate</code> <code>float</code> The average rate in the discovered rates collection"},{"location":"events/#automation-example_3","title":"Automation Example","text":"<pre><code>- trigger:\n  - platform: event\n    event_type: octopus_energy_electricity_previous_consumption_rates\n  condition: []\n  action:\n  - service: persistent_notification.create\n    data:\n      title: \"Rates Updated\"\n      message: &gt;\n        New rates available for {{ trigger.event.data.mpan }}. Starting value is {{ trigger.event.data.rates[0][\"value_inc_vat\"] }}\n</code></pre>"},{"location":"events/#gas-current-day-rates","title":"Gas Current Day Rates","text":"<p><code>octopus_energy_gas_current_day_rates</code></p> <p>This is fired when the current day rates are updated.</p> Attribute Type Description <code>rates</code> <code>array</code> The list of rates applicable for the current day <code>tariff_code</code> <code>string</code> The tariff code associated with current day's rates <code>mprn</code> <code>string</code> The mprn of the meter associated with these rates <code>serial_number</code> <code>string</code> The serial number of the meter associated with these rates <code>min_rate</code> <code>float</code> The minimum/lowest rate in the discovered rates collection <code>max_rate</code> <code>float</code> The maximum/highest rate in the discovered rates collection <code>average_rate</code> <code>float</code> The average rate in the discovered rates collection"},{"location":"events/#automation-example_4","title":"Automation Example","text":"<pre><code>- trigger:\n  - platform: event\n    event_type: octopus_energy_gas_current_day_rates\n  condition: []\n  action:\n  - service: persistent_notification.create\n    data:\n      title: \"Rates Updated\"\n      message: &gt;\n        New rates available for {{ trigger.event.data.mprn }}. Starting value is {{ trigger.event.data.rates[0][\"value_inc_vat\"] }}\n</code></pre>"},{"location":"events/#gas-previous-day-rates","title":"Gas Previous Day Rates","text":"<p><code>octopus_energy_gas_previous_day_rates</code></p> <p>This is fired when the previous day rates are updated.</p> Attribute Type Description <code>rates</code> <code>array</code> The list of rates applicable for the previous day <code>tariff_code</code> <code>string</code> The tariff code associated with previous day's rates <code>mprn</code> <code>string</code> The mprn of the meter associated with these rates <code>serial_number</code> <code>string</code> The serial number of the meter associated with these rates <code>min_rate</code> <code>float</code> The minimum/lowest rate in the discovered rates collection <code>max_rate</code> <code>float</code> The maximum/highest rate in the discovered rates collection <code>average_rate</code> <code>float</code> The average rate in the discovered rates collection"},{"location":"events/#automation-example_5","title":"Automation Example","text":"<pre><code>- trigger:\n  - platform: event\n    event_type: octopus_energy_gas_previous_day_rates\n  condition: []\n  action:\n  - service: persistent_notification.create\n    data:\n      title: \"Rates Updated\"\n      message: &gt;\n        New rates available for {{ trigger.event.data.mprn }}. Starting value is {{ trigger.event.data.rates[0][\"value_inc_vat\"] }}\n</code></pre>"},{"location":"events/#gas-next-day-rates","title":"Gas Next Day Rates","text":"<p><code>octopus_energy_gas_next_day_rates</code></p> <p>This is fired when the next day rates are updated.</p> Attribute Type Description <code>rates</code> <code>array</code> The list of rates applicable for the next day <code>tariff_code</code> <code>string</code> The tariff code associated with next day's rates <code>mprn</code> <code>string</code> The mprn of the meter associated with these rates <code>serial_number</code> <code>string</code> The serial number of the meter associated with these rates <code>min_rate</code> <code>float</code> The minimum/lowest rate in the discovered rates collection <code>max_rate</code> <code>float</code> The maximum/highest rate in the discovered rates collection <code>average_rate</code> <code>float</code> The average rate in the discovered rates collection"},{"location":"events/#automation-example_6","title":"Automation Example","text":"<pre><code>- trigger:\n  - platform: event\n    event_type: octopus_energy_gas_next_day_rates\n  condition: []\n  action:\n  - service: persistent_notification.create\n    data:\n      title: \"Rates Updated\"\n      message: &gt;\n        New rates available for {{ trigger.event.data.mprn }}. Starting value is {{ trigger.event.data.rates[0][\"value_inc_vat\"] }}\n</code></pre>"},{"location":"events/#gas-previous-consumption-rates","title":"Gas Previous Consumption Rates","text":"<p><code>octopus_energy_gas_previous_consumption_rates</code></p> <p>This is fired when the previous consumption's rates are updated.</p> Attribute Type Description <code>rates</code> <code>array</code> The list of rates applicable for the previous consumption <code>tariff_code</code> <code>string</code> The tariff code associated with previous consumption's rates <code>mprn</code> <code>string</code> The mprn of the meter associated with these rates <code>serial_number</code> <code>string</code> The serial number of the meter associated with these rates <code>min_rate</code> <code>float</code> The minimum/lowest rate in the discovered rates collection <code>max_rate</code> <code>float</code> The maximum/highest rate in the discovered rates collection <code>average_rate</code> <code>float</code> The average rate in the discovered rates collection"},{"location":"events/#automation-example_7","title":"Automation Example","text":"<pre><code>- trigger:\n  - platform: event\n    event_type: octopus_energy_gas_previous_consumption_rates\n  condition: []\n  action:\n  - service: persistent_notification.create\n    data:\n      title: \"Rates Updated\"\n      message: &gt;\n        New rates available for {{ trigger.event.data.mprn }}. Starting value is {{ trigger.event.data.rates[0][\"value_inc_vat\"] }}\n</code></pre>"},{"location":"events/#octoplus","title":"Octoplus","text":""},{"location":"events/#new-saving-session","title":"New Saving Session","text":"<p><code>octopus_energy_new_octoplus_saving_session</code></p> <p>This event is raised when a new saving session is discovered.</p> Attribute Type Description <code>account_id</code> <code>string</code> The id of the account the new saving session is for <code>event_code</code> <code>string</code> The code of the new saving session event. This is required if you wishing to use the join event service <code>event_id</code> <code>string</code> The id of the event <code>event_start</code> <code>datetime</code> The date/time the event starts <code>event_end</code> <code>datetime</code> The date/time the event ends <code>event_duration_in_minutes</code> <code>integer</code> The duration of the event in minutes <code>event_octopoints_per_kwh</code> <code>integer</code> The number of octopoints that are awarded per kwh saved during the event"},{"location":"events/#automation-example_8","title":"Automation Example","text":"<pre><code>- trigger:\n  - platform: event\n    event_type: octopus_energy_new_octoplus_saving_session\n  condition: []\n  action:\n  - service: persistent_notification.create\n    data:\n      title: \"New Saving Session\"\n      message: &gt;\n        New Octopus Energy saving session available. It starts at {{ trigger.event.data[\"event_start\"].strftime('%H:%M') }} on {{ trigger.event.data[\"event_start\"].day }}/{{ trigger.event.data[\"event_start\"].month }} for {{ trigger.event.data[\"event_duration_in_minutes\"] | int }} minutes.\n</code></pre>"},{"location":"events/#all-saving-sessions","title":"All Saving Sessions","text":"<p><code>octopus_energy_all_octoplus_saving_sessions</code></p> <p>This event is raised when saving sessions are refreshed and contain all available and joined events.</p> Attribute Type Description <code>account_id</code> <code>string</code> The id of the account the saving session events are for <code>available_events</code> <code>array</code> The collection of saving session events that you haven't joined <code>joined_events</code> <code>array</code> The collection of saving session events that you have joined. This will include upcoming and past events <p>Each available event item will include the following attributes</p> Attribute Type Description <code>id</code> <code>integer</code> The id of the event <code>code</code> <code>string</code> The event code of the event. This will be required to join via the join service <code>start</code> <code>datetime</code> The date/time the event starts <code>end</code> <code>datetime</code> The date/time the event starts <code>duration_in_minutes</code> <code>integer</code> The duration of the event in minutes <code>octopoints_per_kwh</code> <code>integer</code> The number of octopoints that are awarded per kwh saved during the event <p>Each joined event item will include the following attributes</p> Attribute Type Description <code>id</code> <code>integer</code> The id of the event <code>start</code> <code>datetime</code> The date/time the event starts <code>end</code> <code>datetime</code> The date/time the event starts <code>duration_in_minutes</code> <code>integer</code> The duration of the event in minutes <code>octopoints_per_kwh</code> <code>integer</code> The number of octopoints that are awarded per kwh saved during the event <code>rewarded_octopoints</code> <code>integer</code> The total number of octopoints that were awarded (if any or known)"},{"location":"events/#automation-example_9","title":"Automation Example","text":"<pre><code>- trigger:\n  - platform: event\n    event_type: octopus_energy_all_octoplus_saving_sessions\n  condition: []\n  action:\n  - service: persistent_notification.create\n    data:\n      title: \"Saving Sessions Updated\"\n      message: &gt;\n        Saving session events updated. The latest joined event awarded {{ trigger.event.data.joined_events[0][\"rewarded_octopoints\"] }}\n</code></pre>"},{"location":"events/#new-free-electricity-session","title":"New Free Electricity Session","text":"<p><code>octopus_energy_new_octoplus_free_electricity_session</code></p> <p>This event is raised when a new free electricity session is discovered.</p> Attribute Type Description <code>account_id</code> <code>string</code> The id of the account the new free electricity session is for <code>event_code</code> <code>string</code> The code of the new free electricity session event <code>event_start</code> <code>datetime</code> The date/time the event starts <code>event_end</code> <code>datetime</code> The date/time the event ends <code>event_duration_in_minutes</code> <code>integer</code> The duration of the event in minutes"},{"location":"events/#automation-example_10","title":"Automation Example","text":"<pre><code>- trigger:\n  - platform: event\n    event_type: octopus_energy_new_octoplus_free_electricity_session\n  condition: []\n  action:\n  - service: persistent_notification.create\n    data:\n      title: \"New Free Electricity Session\"\n      message: &gt;\n        New Octopus Energy free electricity session available. It starts at {{ trigger.event.data[\"event_start\"].strftime('%H:%M') }} on {{ trigger.event.data[\"event_start\"].day }}/{{ trigger.event.data[\"event_start\"].month }} for {{ trigger.event.data[\"event_duration_in_minutes\"] | int }} minutes.\n</code></pre>"},{"location":"events/#all-free-electricity-sessions","title":"All Free Electricity Sessions","text":"<p><code>octopus_energy_all_octoplus_free_electricity_sessions</code></p> <p>This event is raised when free electricity sessions are refreshed and contain all available events.</p> Attribute Type Description <code>account_id</code> <code>string</code> The id of the account the saving session events are for <code>events</code> <code>array</code> The collection of free electricity events that are available. This will include upcoming and past events. <p>Each event item will include the following attributes</p> Attribute Type Description <code>code</code> <code>string</code> The code of the event <code>start</code> <code>datetime</code> The date/time the event starts <code>end</code> <code>datetime</code> The date/time the event starts <code>duration_in_minutes</code> <code>integer</code> The duration of the event in minutes"},{"location":"events/#automation-example_11","title":"Automation Example","text":"<pre><code>- trigger:\n  - platform: event\n    event_type: octopus_energy_all_octoplus_free_electricity_sessions\n  condition: []\n  action:\n  - service: persistent_notification.create\n    data:\n      title: \"Free Electricity Sessions Updated\"\n      message: &gt;\n        Free electricity session events updated. The latest event is at {{ trigger.event.data.events[-1][\"start\"] }}\n</code></pre>"},{"location":"events/#tariff-comparisons","title":"Tariff Comparisons","text":""},{"location":"events/#electricity-previous-consumption-tariff-comparison-rates","title":"Electricity Previous Consumption Tariff Comparison Rates","text":"<p><code>octopus_energy_elec_previous_consumption_tariff_comparison_rates</code></p> <p>This is fired when the tariff comparison rates are updated.</p> Attribute Type Description <code>rates</code> <code>array</code> The list of rates applicable for the previous consumption tariff comparison <code>product_code</code> <code>string</code> The product code associated with previous consumption tariff comparison rates <code>tariff_code</code> <code>string</code> The tariff code associated with previous consumption tariff comparison rates <code>mprn</code> <code>string</code> The mprn of the meter associated with these rates <code>serial_number</code> <code>string</code> The serial number of the meter associated with these rates"},{"location":"events/#automation-example_12","title":"Automation Example","text":"<pre><code>- trigger:\n  - platform: event\n    event_type: octopus_energy_elec_previous_consumption_tariff_comparison_rates\n  condition: []\n  action:\n  - service: persistent_notification.create\n    data:\n      title: \"Rates Updated\"\n      message: &gt;\n        New rates available for {{ trigger.event.data.mprn }}. Starting value is {{ trigger.event.data.rates[0][\"value_inc_vat\"] }}\n</code></pre>"},{"location":"events/#gas-previous-consumption-tariff-comparison-rates","title":"Gas Previous Consumption Tariff Comparison Rates","text":"<p><code>octopus_energy_gas_previous_consumption_tariff_comparison_rates</code></p> <p>This is fired when the tariff comparison rates are updated.</p> Attribute Type Description <code>rates</code> <code>array</code> The list of rates applicable for the previous consumption tariff comparison <code>product_code</code> <code>string</code> The product code associated with previous consumption tariff comparison rates <code>tariff_code</code> <code>string</code> The tariff code associated with previous consumption tariff comparison rates <code>mprn</code> <code>string</code> The mprn of the meter associated with these rates <code>serial_number</code> <code>string</code> The serial number of the meter associated with these rates"},{"location":"events/#automation-example_13","title":"Automation Example","text":"<pre><code>- trigger:\n  - platform: event\n    event_type: octopus_energy_gas_previous_consumption_tariff_comparison_rates\n  condition: []\n  action:\n  - service: persistent_notification.create\n    data:\n      title: \"Rates Updated\"\n      message: &gt;\n        New rates available for {{ trigger.event.data.mprn }}. Starting value is {{ trigger.event.data.rates[0][\"value_inc_vat\"] }}\n</code></pre>"},{"location":"faq/","title":"FAQ","text":""},{"location":"faq/#how-often-is-data-refreshed","title":"How often is data refreshed?","text":"<p>Based on a request from Octopus Energy, the integration polls and retrieves data at different intervals depending on the target data. Below is a rough table describing how often the integration targets refreshing various bits of data. This has been done to try and not overload the API while also providing useful data in a timely fashion - Octopus Energy estimate that ~95% of their traffic comes mainly from this integration.</p> Area Refresh rate (in minutes) Justification Account 360 (6 hours) This is mainly used to get the active meters and associated tariffs, which shouldn't change often so no need to poll often. Intelligent tariff based sensors 3 Trying to balance refreshing settings and new dispatch information without overloading the API Intelligent device information 360 (6 hours) Shouldn't change often, but want to be alerted when it does as sensors will stop working Rate information 15 This is what drives most people's automations, but doesn't change that frequently. We can afford a bit of lag for API stability. This will stop updating once we have the data for the requested time period. Current consumption data Configurable (minimum 1) This is most useful for a smart home to be as up-to-date as possible, but is also rate limited to 100 requests total per hour. 1 minute is enough for most people, but might need to be increased for those with multiple meters (e.g. gas and electricity) Previous consumption data 30 This is usually refreshed once a day at various times throughout the day. We want to be up-to-date as soon as possible, without swamping the API. Standing charges 60 This should only change if the user's tariff changes, so no need to request data too often. Keep in sync with account refreshes. This will stop updating once we have the data for the requested time period. Saving sessions 15 Inactive for most of the year and new sessions have enough warning to allow a bit of lag. Saving session target 30 Not relevant most of the time and intensive due to retrieving consumption data Wheel of fortune 60 Doesn't change that frequently, and not fundamental for a smart home (other than knowledge) so no need to request too often. Greenness Forecast 180 Doesn't change frequently Free electricity sessions 90 Data is provided by my own private API and there is usually at least half a day notice before the sessions which is why this is refreshed slightly less than saving sessions. Heat Pump state 1 Data is updated frequently and doesn't seem to cause any issues around rate limits. This might change in the future. <p>If data cannot be refreshed for any reason (e.g. no internet or APIs are down), then the integration will attempt to retrieve data as soon as possible, slowly waiting longer between each attempt, to a maximum of 30 minutes between each attempt. Below is a rough example assuming the first (failed) scheduled refresh was at <code>10:35</code>.</p> Attempt Target time 1 <code>10:35</code> 2 <code>10:36</code> 3 <code>10:38</code> 4 <code>10:41</code> 5 <code>10:45</code> <p>Once a successful request is made, the refreshes will revert back to the redefined default intervals. You can find out information on when data was last retrieved via the available diagnostic entities.</p> <p>Note</p> <p>The retrieving of data does not effect the rate the entities states/attributes are evaluated.</p>"},{"location":"faq/#what-are-started-dispatches-and-how-are-they-calculated","title":"What are started dispatches and how are they calculated?","text":"<p>Started dispatches are a concept derived by the integration.</p> <p>Octopus Energy provide rate information for intelligent tariffs. Unfortunately, this rate information is only the standard rate information (e.g. standard peak and off peak rates). This means that periods that are charged at off peak rates outside of the normal off peak period has to be adjusted to the off peak rate manually. Luckily, Octopus Energy provides information on planned and completed dispatches. However, there are a few issues with this data</p> <ol> <li>Planned dispatches can be removed at the last minute. This can cause issues as they can be removed just before they start but counted as \"active\" if the data isn't refreshed before they start. If you have setup the integration to accept planned or started dispatches, then this can result in sensors turning on and then turning off once the data is refreshed and the planned dispatch is removed</li> <li>The completed dispatches do not specify a source of the dispatch. This means that boost charges (ones that do not result in off peak rates) will be mixed in with smart charges (ones that do result in off peak rates). This means that it can't be used to retroactively change rates to off peak for things like previous consumption cost sensors.</li> </ol> <p>Therefore, there is the concept of started dispatches. Once data is refreshed, any planned dispatches that are active become a started dispatch, thirty minute increments at a time. This is because the whole thirty minute period for a smart charge dispatch is charged at off peak, even if only a minute charge has occurred. It is done thirty minute increments at a time because Octopus Energy might stop a dispatch early. This will only occur if the intelligent state is in <code>SMART_CONTROL_IN_PROGRESS</code>. For example if you have a planned dispatch of <code>2025-04-01T10:00:00</code>-<code>2025-04-01T11:00:00</code>, at <code>2025-04-01T10:01:00</code> if the planned dispatch is still available the period of <code>2025-04-01T10:00:00</code>-<code>2025-04-01T10:30:00</code> will be added.</p> <p>Warning</p> <p>This does not apply to the following providers, as they don't provide planned dispatch information.</p> <ul> <li>OHME</li> </ul>"},{"location":"faq/#the-integration-provides-features-i-dont-need-can-i-turn-the-feature-off","title":"The integration provides features I don't need, can I turn the feature off?","text":"<p>There is no config option to turn features on/off. This is because the required data is not cut and dry per feature as some data is shared among \"features\" (e.g. rate data is required to determine if consumption data is peak or off peak).</p> <p>However, the integration only requests the data specified above that is needed for the provided entities to function. If you disable the entities that you don't need, then the integration won't request the corresponding data. </p> <p>Disabling entities is easy. All you need to do is</p> <ol> <li>Go to the Octopus Energy integration.</li> <li>Click on <code>entities</code></li> <li>Go into multi-select mode and select the entities you want to disable</li> <li>Select <code>Disable selected</code></li> </ol> <p>Some entities are disabled by default by the integration, which are highlighted as such in the documentation.</p>"},{"location":"faq/#i-have-data-missing-is-this-an-issue-with-the-integration","title":"I have data missing, is this an issue with the integration?","text":"<p>Data can not appear for a variety of reasons. Before raising any issues, check if the data is available on the website for the requested period (e.g. for previous consumption, you'll be wanting data for the day before). If it's not available on the website, then unfortunately there is nothing that can be done and you may need to contact Octopus Energy.</p> <p>Data might also not appear if you lose internet connection or the Octopus Energy APIs report errors, which can occur from time to time. This will be indicated in your Home Assistant logs as warnings around using cached data. It can also be diagnosed via the various available diagnostic entities. If none of this is applicable, then please raise an issue so we can try and solve the problem.</p> <p>If you are missing consumption data, the previous consumption sensors only display that latest available full day. If you have a couple of hours for a day, then the sensors will not display this until the full day is available.</p>"},{"location":"faq/#data-in-my-home-assistant-energy-dashboard-reported-by-octopus-home-mini-differs-to-octopus-energy-dashboard-why-is-this","title":"Data in my Home Assistant energy dashboard reported by Octopus Home Mini differs to Octopus Energy dashboard. Why is this?","text":"<p>The data can differ for a number of reasons.</p> <p>If you are looking at the current day, then Home Assistant only updates the energy dashboard data once an hour, near the hour. This means you might be \"missing\" data in the energy dashboard when compared to the app. The integration also makes best effort to retrieve the data every minute, however it has been noticed that the API can fail at times to retrieve the data.</p> <p>If you are comparing data in the energy dashboard to previous days data in the Octopus Energy dashboard, then this can also differ. This is because Octopus Energy favour data reported by your smart meter, as this is what your bills use, over your Home Mini.</p>"},{"location":"faq/#ive-added-my-previous-consumption-sensors-to-the-energy-dashboard-but-they-are-reported-in-a-single-chunk-and-are-a-day-or-more-out-is-this-a-bug","title":"I've added my previous consumption sensors to the Energy dashboard, but they are reported in a single chunk and are a day or more out. Is this a bug?","text":"<p>While you can add the <code>previous consumption</code> sensors to the dashboard, they will be associated with the wrong day. This is because the Energy dashboard uses the timestamp of when the sensor updates to determine which day the data should belong to.</p> <p>Instead, you can use different external statistics that are exported by the <code>previous consumption</code> sensors, which are broken down into hourly chunks. </p> <p>Info</p> <p>It can take up to 24 hours for the external statistics to appear.</p> <p>Please follow the guide for instructions on how to add these separate sensors to the energy dashboard.</p> <p>You should not have this issue for current consumption sensors, as they are updated in realtime.</p>"},{"location":"faq/#why-are-the-names-of-the-entities-so-long-and-can-you-change-them-to-be-shorter","title":"Why are the names of the entities so long, and can you change them to be shorter?","text":"<p>Naming things are hard. The entity ids are long for the following reasons</p> <ul> <li> <p>The domain is present as I didn't want to potentially clash with other integrations that provide similar sensors for meters, as a lot of people in the community use things like the glow device to get their readings. Hindsight, I probably wouldn't include this, but we're here now.</p> </li> <li> <p>The serial number and mpan/mprn is present because the data that comes back from OE is in an array of arrays. I am only on an import tariff, so couldn't guarantee that any of these were unique and didn't want to assume anything. Turns out one of these is duplicated between import/export meters so if I had picked one of these I would have been wrong and had a clash.</p> </li> <li> <p>The account id is present in other sensors in order to support multiple accounts (which the serial number/mpan/mprn also play apart in).</p> </li> </ul> <p>The names of the entities are equally long for consistency with the entity id and so that you can tell one entity apart from another in the above scenarios.</p> <p>However you are free to update the names and/or ids to something more concise for you as per the Home Assistant docs.</p>"},{"location":"faq/#i-am-getting-warnings-about-entities-taking-too-long-to-update-is-this-normal","title":"I am getting warnings about entities taking too long to update. Is this normal?","text":"<p>If you receiving warnings along the lines of</p> <p>Update of sensor.octopus_energy_xxx is taking over x seconds</p> <p>Updating octopus_energy sensor took longer than the scheduled update interval</p> <p>then yes, this is expected. This is a default warning built into Home Assistant, however with this integration it's perfectly valid for you to receive this when the sensors attempt to update the data. This is for a number of reasons</p> <ol> <li>Your internet connection is slow</li> <li>Octopus Energy APIs are slow to respond, or having issues.</li> </ol> <p>If you wish to suppress this warning, you can follow this advice.</p>"},{"location":"faq/#i-am-getting-errors-relating-to-too-many-requests-is-there-something-wrong","title":"I am getting errors relating to \"Too many requests\". Is there something wrong?","text":"<p>The most common scenario for this is related to the Home Mini. This can be determined by the presence of <code>smartMeterTelemetry</code> in the error message. The Octopus Energy APIs have a rate limit of 100 calls per hour, which is shared among all calls including through the app or other integrations. The defaults are usually enough for one electricity and one gas meter's data to be retrieved. However, if you are using other integrations, have more meters being tracked or want the app to not be effected you may want to increase this rate via your account.</p> <p>If you are receiving this error for a different reason, please raise an issue, as Octopus Energy might have introduced a new rate limit.</p>"},{"location":"faq/#i-want-to-use-a-utility-meter-with-the-consumption-sensors-but-they-dont-seem-to-be-adding-up-correctly-is-there-something-im-doing-wrong","title":"I want to use a utility meter with the consumption sensors, but they don't seem to be adding up correctly. Is there something I'm doing wrong?","text":"<p>While the underlying data updates less frequently (see above), the consumption sensors themselves update every minute to check for changes. This includes attribute updates to state when the sensor was last evaluated or when the underlying data was last retrieved. Unfortunately the utility meter looks for any updates to the input sensor, which includes attribute changes. Therefore if you wish to use a utility meter, you'll need to create a template sensor that wraps the consumption sensor you're wishing to target and just exposes the state, and use this template sensor as your input. This will ignore any attribute updates and stabilise the utility meter updates.</p>"},{"location":"faq/#there-are-entities-that-are-disabled-why-are-they-disabled-and-how-do-i-enable-them","title":"There are entities that are disabled. Why are they disabled and how do I enable them?","text":"<p>Some entities are disabled by default. This is usually because the entities are not applicable for all tariffs or are for niche scenarios. By having these entities disabled, it also doesn't overwhelm new users when they install the integration otherwise most users will be presented with over 40 different entities.</p> <p>Enabling entities is easy. All you need to do is</p> <ol> <li>Go to the Octopus Energy integration.</li> <li>Click on <code>entities</code></li> <li>Find and click on the entity you want to enable. This is usually indicated by a \"no entry\" sign in the <code>status</code>.</li> <li>Click on the settings/cog button</li> <li>Click on the <code>enable</code> button or toggle the <code>Enabled</code> toggle to on</li> <li>Click on <code>update</code></li> </ol>"},{"location":"faq/#i-have-entities-that-are-missing-is-the-integration-broken","title":"I have entities that are missing. Is the integration broken?","text":"<p>The integration only looks at the first property associated with your account that doesn't have a moved out date attached to it. If you are still missing entities, follow the instructions to increase the logs.</p> <p>You should then see entries associated with this component stating either entities were added, skipped or no entities were available at all.</p> <p>The identifiers of the entities should then be checked against your Octopus Energy dashboard to verify the correct entities are being picked up. If this is producing unexpected results, then you should raise an issue.</p>"},{"location":"faq/#i-have-meters-that-are-missing-is-the-integration-broken","title":"I have meters that are missing. Is the integration broken?","text":"<p>The integration will only surface entities associated with meters in your first active property. Each meter must also have an active tariff associated with it. </p> <p>If you follow the instructions to download diagnostics, you can see all agreements associated with each of your meters. You will need an agreement with a start date in the past and an end date either set to <code>null</code> or in the future for the meter to be picked up by the integration.</p>"},{"location":"faq/#im-an-agile-user-and-having-trouble-setting-up-a-target-rate-sensor-what-am-i-doing-wrong","title":"I'm an agile user and having trouble setting up a target rate sensor. What am I doing wrong?","text":"<p>Rate data for agile tariffs are not available in full for the next day, which can cause issues with target rate sensors in their default state. We prevent you from setting up target rate sensors in this form. More information around this can be found in the target rate documentation.</p>"},{"location":"faq/#why-wont-my-target-rates-update","title":"Why won't my target rates update?","text":"<p>The target rate sensors are set to update every minute, which includes determining if you're within a target time period and calculating future target time periods. This can be confirmed by evaluating the last_updated attribute of the sensor. </p> <p>The <code>target_times</code> will evaluate once all rates are available for the specified time period and all existing target times are in the past. When this was last evaluated can be confirmed via the <code>target_times_last_evaluated</code> attribute. For example, if you are looking for target rates between 16:00 (today) and 16:00 (tomorrow), and you only have rates up to 23:00 (today), then target times will not be evaluated until rate information is available up to 16:00 (tomorrow). This can be confirmed by reviewing the data available in your current and next day rates entities.</p> <p>If there is a delay in retrieving rate information, there is chance that when it comes to evaluation, times are picked that are in the past because they were the lowest. This will result in your target rate sensor skipping a day and waiting to calculate new target times for the next scheduled time period. This can be confirmed by comparing the <code>target_times</code> and the <code>target_times_last_evaluated</code> attribute. If this happens frequently, then please adjust the target time periods of your target rate sensor to something that works for you.</p> <p>If the <code>last_updated</code> attribute is not updating, then please raise an issue.</p>"},{"location":"faq/#my-gas-consumptioncosts-seem-out","title":"My gas consumption/costs seem out","text":"<p>Depending on the native reading from your meter or the sensor you're looking at, the consumption may have to be converted from kWh into cubic meters.</p> <ul> <li>The current consumption (m3) is always calculated, as the Home Mini provides this data in kWh via the API.</li> <li>The previous consumption sensor (m3) may be calculated if your meter natively speaks in kWh. This is indicated by the <code>is_estimated</code> attribute on the sensor</li> </ul> <p>Because all rates are in kWh, if any conversions are required into kWh then the cost could also be out by this conversion.</p> <p>The conversion cubic meters (m3) to kWh is achieved by following this formula. The part that can differ from person to person is the calorific value, which defaults in the integration to 40. This will most likely be incorrect, but unfortunately is not provided by the OE APIs. Therefore you'll need to set it as part of your account. This changes throughout the year and can be found on your latest bill.</p>"},{"location":"faq/#the-rates-are-different-to-whats-on-my-bill-or-the-octopus-energy-dashboard-is-there-something-wrong","title":"The rates are different to what's on my bill or the Octopus Energy dashboard. Is there something wrong?","text":"<p>The first thing to do is make sure the correct tariff has been picked up. This can be done by confirming the tariff code on the electricity or gas current rate sensors. This is picked up automatically via the API, so if this is wrong, then it means that either your account doesn't have your tariff configured yet or the wrong one is being picked up. This can be confirmed via your meter information.</p> <p>If the correct tariff is present, it might be that you're on a tariff that has different rates depending on if you pay by direct debit or not. This can be configured via your account configuration.</p>"},{"location":"faq/#how-are-costs-sensors-calculated","title":"How are costs sensors calculated?","text":"<p>Cost sensors are calculated by multiplying the consumption by the rate for each half hour block, which are then all added together.</p> <p>Each half hour block has it's consumption rounded to the nearest 0.01kwh before multiplying by the rate, which is rounded to the nearest penny. The rounding method used is rounding half to even, where numbers ending in 5 are rounded up or down, towards the nearest even hundredth decimal place. As a result, 0.015 would be rounded up to 0.02, while 0.025 is rounded down to 0.02. This is based on Octopus Energy API documentation</p>"},{"location":"faq/#im-on-an-intelligent-tariff-but-the-cost-sensors-are-out-is-this-normal","title":"I'm on an intelligent tariff, but the cost sensors are out. Is this normal?","text":"<p>Octopus Energy only provide basic rate information for all tariffs (e.g. off peak and peak rates and the standard times they apply). On intelligent tariffs, the planned dispatches outside of normal off peak hours that are still available when they start are then used to adjust rates to off peak rates manually (e.g. if you have a planned dispatch at 10:00 to 10:30, which is still present at 10:00, then the rate between 10:00 to 10:30 will be adjusted to the off peak rate from the peak rate). Completed dispatches cannot be used for this as OE do not provide information on the cause of the completed dispatch.</p> <p>Unfortunately, planned dispatches are not available for certain providers. In these scenarios, rate information cannot be manually adjusted and therefore cost sensors will be incorrect in these scenarios. See the dispatching sensor for information on which intelligent providers this applies to.</p> <p>If the cost sensors are out and you are not on an effected intelligent providers, then please raise an issue.</p>"},{"location":"faq/#im-having-issues-with-a-sensor-is-there-any-way-i-can-see-the-attributes-for-a-certain-point-in-time","title":"I'm having issues with a sensor. Is there any way I can see the attributes for a certain point in time?","text":"<p>The majority of attributes for entities are stored in the database for a short amount of time (default is around 10 days). Unfortunately, the only way of obtaining historic attributes is via the database. This can be done via the SQLite Web Add-On, where the following SQL query can be executed. You'll need to change the target entity id from <code>binary_sensor.octopus_energy_xxx_intelligent_dispatching</code> to the one you want to target.</p> <pre><code>SELECT states_meta.entity_id, states.state, state_attributes.shared_attrs, DATETIME(last_changed_ts, 'unixepoch'), DATETIME(last_updated_ts, 'unixepoch')\nFROM \"states\"\njoin state_attributes on states.attributes_id = state_attributes.attributes_id\njoin states_meta on states_meta.metadata_id = states.metadata_id\nwhere states_meta.entity_id = 'binary_sensor.octopus_energy_xxx_intelligent_dispatching'\norder by last_updated_ts desc\n</code></pre>"},{"location":"faq/#do-you-support-older-versions-of-the-integration","title":"Do you support older versions of the integration?","text":"<p>Due to time constraints, I will only ever support the latest version of the integration. If you have an issue with an older version of the integration, my initial answer will always be to update to the latest version. This might be different to what HACS is reporting if you are not on the minimum supported Home Assistant version (which is highlighted in each release's changelog). </p>"},{"location":"faq/#how-do-i-know-when-theres-an-update-available","title":"How do I know when there's an update available?","text":"<p>If you've installed via HACS, and you are on version 2 or above, then updates will be surfaced in the normal update location within Home Assistant. If you are on a version below 2, then you can keep an eye on <code>sensor.hacs</code> to see the number of pending updates. This could be used with an automation or highlighted on your dashboard. This will include any HACS integration update, not just this one.</p> <p>If you've installed the integration manually, then you should keep an eye on the GitHub releases. You could even subscribe to the RSS feed.</p>"},{"location":"faq/#theres-a-beta-release-of-the-integration-that-i-would-like-to-take-part-in-how-do-i-do-this","title":"There's a beta release of the integration that I would like to take part in, how do I do this?","text":"<p>If you install the integration manually, it's just a case of getting the source of the beta release, replacing the old installation with the new one and restarting Home Assistant.</p> <p>If you install the integration via HACS, then you will need to</p> <ul> <li>Go to HACS, click on the three dots and then click redownload</li> </ul> <p></p> <ul> <li>If you are on version 2 or above, then click on <code>Need a different version?</code> and select the <code>Release</code> box and then select your target <code>pre-release</code> version</li> </ul> <p></p> <p>If you are on a version below 2, then toggle on <code>Show beta versions</code> and select the target beta. Once selected, click <code>Download</code>.</p> <p></p> <ul> <li>Once downloaded, you'll need to restart Home Assistant for the new version to take effect.</li> </ul>"},{"location":"faq/#how-do-i-increase-the-logs-for-the-integration","title":"How do I increase the logs for the integration?","text":"<p>If you are having issues, it would be helpful to include Home Assistant logs as part of any raised issue. This can be done by following the instructions outlined by Home Assistant.</p> <p>You should run these logs for about a day and then include the contents in the issue. Please be sure to remove any personal identifiable information from the logs before including them.</p>"},{"location":"faq/#ive-been-asked-for-my-meter-information-in-a-bug-request-how-do-i-obtain-this","title":"I've been asked for my meter information in a bug request, how do I obtain this?","text":"<p>If you've been asked for meter information, don't worry we won't ask for anything sensitive. To obtain this information</p> <ol> <li>Navigate to your devices</li> <li>Search for \"Octopus Energy\"</li> <li>Click on one of the meters</li> <li>Click on \"Download diagnostics\"</li> <li>Take the contents of the downloads json file and paste into the bug report. Remember to surround the contents with ``` both at the start and end.</li> </ol> <p>Alternatively</p> <ol> <li>Navigate to the Octopus Energy integration</li> <li>Click the three dots next to your account configuration</li> <li>Click on \"Download diagnostics\"</li> <li>Take the contents of the downloads json file and paste into the bug report. Remember to surround the contents with ``` both at the start and end.</li> </ol>"},{"location":"services/","title":"Services","text":"<p>There are a few services available within this integration, which are detailed here.</p>"},{"location":"services/#target-rates","title":"Target Rates","text":"<p>The following services are available if you have set up at least one target rate.</p>"},{"location":"services/#octopus_energyupdate_target_config","title":"octopus_energy.update_target_config","text":"<p>For updating a given target rate's config. This allows you to change target rates sensors dynamically based on other outside criteria (e.g. you need to adjust the target hours to top up home batteries).</p> Attribute Optional Description <code>target.entity_id</code> <code>no</code> The name of the target sensor whose configuration is to be updated. <code>data.target_hours</code> <code>yes</code> The optional number of hours the target rate sensor should come on during a 24 hour period. Must be divisible by 0.5. <code>data.target_start_time</code> <code>yes</code> The optional time the evaluation period should start. Must be in the format of <code>HH:MM</code>. <code>data.target_end_time</code> <code>yes</code> The optional time the evaluation period should end. Must be in the format of <code>HH:MM</code>. <code>data.target_offset</code> <code>yes</code> The optional offset to apply to the target rate when it starts. Must be in the format <code>(+/-)HH:MM:SS</code>. <code>data.target_minimum_rate</code> <code>yes</code> The optional minimum rate the selected rates should not go below. <code>data.target_maximum_rate</code> <code>yes</code> The optional maximum rate the selected rates should not go above. <code>data.target_weighting</code> <code>yes</code> The optional weighting that should be applied to the selected rates. <code>data.persist_changes</code> <code>yes</code> Determines if the changes should be persisted to the original configuration or should be temporary and reset upon integration reload. If not supplied, then the changes are temporary"},{"location":"services/#automation-example","title":"Automation Example","text":"<p>This can be used via automations in the following way. Assuming we have the following inputs.</p> <pre><code>input_number:\n  octopus_energy_target_hours:\n    name: Octopus Energy Target Hours\n    min: 0\n    max: 24\n\ninput_text:\n  # From/to would ideally use input_datetime, but we need the time in a different format\n  octopus_energy_target_from:\n    name: Octopus Energy Target From\n    initial: \"00:00\"\n  octopus_energy_target_to:\n    name: Octopus Energy Target To\n    initial: \"00:00\"\n  octopus_energy_target_offset:\n    name: Octopus Energy Target Offset\n    initial: \"-00:00:00\"\n</code></pre> <p>Then an automation might look like the following</p> <pre><code>mode: single\nalias: Update target rate config\ntriggers:\n  - trigger: state\n    entity_id:\n      - input_number.octopus_energy_target_hours\n      - input_text.octopus_energy_target_from\n      - input_text.octopus_energy_target_to\n      - input_text.octopus_energy_target_offset\nconditions: []\nactions:\n  - action: octopus_energy.update_target_config\n    data:\n      target_hours: &gt;\n        \"{{ states('input_number.octopus_energy_target_hours') | string }}\"\n      target_start_time: &gt;\n        {{ states('input_text.octopus_energy_target_from') }}\n      target_end_time: &gt;\n        {{ states('input_text.octopus_energy_target_to') }}\n      target_offset: &gt;\n        {{ states('input_text.octopus_energy_target_offset') }}\n    target:\n      entity_id: binary_sensor.octopus_energy_target_example\n</code></pre>"},{"location":"services/#rolling-target-rates","title":"Rolling Target Rates","text":"<p>The following services are available if you have set up at least one rolling target rate.</p>"},{"location":"services/#octopus_energyupdate_rolling_target_config","title":"octopus_energy.update_rolling_target_config","text":"<p>For updating a given rolling target rate's config. This allows you to change rolling target rates sensors dynamically based on other outside criteria (e.g. you need to adjust the target hours to top up home batteries).</p> Attribute Optional Description <code>target.entity_id</code> <code>no</code> The name of the target sensor whose configuration is to be updated. <code>data.target_hours</code> <code>yes</code> The optional number of hours the target rate sensor should come on during a 24 hour period. Must be divisible by 0.5. <code>data.target_look_ahead_hours</code> <code>yes</code> The optional number of hours worth of rates the sensor should look at for the evaluation period. <code>data.target_offset</code> <code>yes</code> The optional offset to apply to the target rate when it starts. Must be in the format <code>(+/-)HH:MM:SS</code>. <code>data.target_minimum_rate</code> <code>yes</code> The optional minimum rate the selected rates should not go below. <code>data.target_maximum_rate</code> <code>yes</code> The optional maximum rate the selected rates should not go above. <code>data.target_weighting</code> <code>yes</code> The optional weighting that should be applied to the selected rates. <code>data.persist_changes</code> <code>yes</code> Determines if the changes should be persisted to the original configuration or should be temporary and reset upon integration reload. If not supplied, then the changes are temporary"},{"location":"services/#automation-example_1","title":"Automation Example","text":"<p>This can be used via automations in the following way. Assuming we have the following inputs.</p> <pre><code>input_number:\n  octopus_energy_rolling_target_hours:\n    name: Octopus Energy Rolling Target Hours\n    min: 0\n    max: 24\n  octopus_energy_rolling_target_look_ahead_hours:\n    name: Octopus Energy Rolling Target Look Ahead Hours\n    min: 0\n    max: 24\n\ninput_text:\n  octopus_energy_target_offset:\n    name: Octopus Energy Target Offset\n    initial: \"-00:00:00\"\n</code></pre> <p>Then an automation might look like the following</p> <pre><code>mode: single\nalias: Update target rate config\ntriggers:\n  - trigger: state\n    entity_id:\n      - input_number.octopus_energy_rolling_target_hours\n      - input_number.octopus_energy_rolling_target_look_ahead_hours\n      - input_text.octopus_energy_target_offset\nconditions: []\nactions:\n  - action: octopus_energy.update_target_config\n    data:\n      target_hours: &gt;\n        \"{{ states('input_number.octopus_energy_target_hours') | string }}\"\n      target_look_ahead_hours: &gt;\n        \"{{ states('input_number.octopus_energy_rolling_target_look_ahead_hours') | string }}\"\n      target_offset: &gt;\n        {{ states('input_text.octopus_energy_target_offset') }}\n    target:\n      entity_id: binary_sensor.octopus_energy_rolling_target_example\n</code></pre>"},{"location":"services/#octoplus","title":"Octoplus","text":"<p>The following services are available if your account is enrolled into Octoplus.</p>"},{"location":"services/#octopus_energyjoin_octoplus_saving_session_event","title":"octopus_energy.join_octoplus_saving_session_event","text":"<p>Service for joining a new saving session event. When used, it may take a couple of minutes for the other sensors to refresh the changes.</p> Attribute Optional Description <code>target.entity_id</code> <code>no</code> The name of the target sensor whose configuration is to be updated. This should always point at the saving session events entity. <code>data.event_code</code> <code>no</code> The code of the event to join"},{"location":"services/#automation-example_2","title":"Automation Example","text":"<p>For an automation example, please refer to the available blueprint.</p>"},{"location":"services/#octopus_energyredeem_octoplus_points_into_account_credit","title":"octopus_energy.redeem_octoplus_points_into_account_credit","text":"<p>Allows you to redeem a certain number of of Octoplus points and convert them into account credit.</p> <p>Info</p> <p>This service is only available if you have signed up to Octoplus</p> Attribute Optional Description <code>target.entity_id</code> <code>no</code> The name of the Octoplus points that hold the points to be redeemed. This should always point at one of the octoplus points sensor entities. <code>data.points_to_redeem</code> <code>no</code> The number of points to redeem."},{"location":"services/#automation-example_3","title":"Automation Example","text":"<p>For automation examples, please refer to the available blueprints.</p>"},{"location":"services/#wheel-of-fortune","title":"Wheel of fortune","text":""},{"location":"services/#octopus_energyspin_wheel_of_fortune","title":"octopus_energy.spin_wheel_of_fortune","text":"<p>This service allows the user to perform a spin on the wheel of fortune that is awarded to users every month. No point letting them go to waste :)</p> Attribute Optional Description <code>target.entity_id</code> <code>no</code> The name of the wheel of fortune sensor that represents the type of spin to be made. This should always point at one of the wheel of fortune sensors entities."},{"location":"services/#automation-example_4","title":"Automation Example","text":"<p>For automation examples, please refer to the available blueprints.</p>"},{"location":"services/#cost-trackers","title":"Cost Trackers","text":"<p>The following services are available if you have set up at least one cost tracker.</p>"},{"location":"services/#octopus_energyupdate_cost_tracker","title":"octopus_energy.update_cost_tracker","text":"<p>This service allows the user to turn the tracking on/off for a given cost tracker sensor.</p> Attribute Optional Description <code>target.entity_id</code> <code>no</code> The name of the cost tracker sensor(s) whose configuration is to be updated. <code>data.is_tracking_enabled</code> <code>no</code> Determines if tracking should be enabled (true) or disabled (false) for the specified cost trackers"},{"location":"services/#automation-example_5","title":"Automation Example","text":"<p>For automation examples, please refer to the available blueprints.</p>"},{"location":"services/#octopus_energyreset_cost_tracker","title":"octopus_energy.reset_cost_tracker","text":"<p>Resets a given cost tracker sensor back to zero before it's normal reset time.</p> Attribute Optional Description <code>target.entity_id</code> <code>no</code> The name of the cost tracker sensor(s) that should be reset."},{"location":"services/#octopus_energyadjust_accumulative_cost_tracker","title":"octopus_energy.adjust_accumulative_cost_tracker","text":"<p>Allows you to adjust the cost/consumption for any given date recorded by an accumulative cost tracker sensor (e.g. week or month).</p> Attribute Optional Description <code>target.entity_id</code> <code>no</code> The name of the cost tracker sensor(s) that should be updated (e.g. <code>sensor.octopus_energy_cost_tracker_{{COST_TRACKER_NAME}}_week</code> or <code>sensor.octopus_energy_cost_tracker_{{COST_TRACKER_NAME}}_month</code>). <code>data.date</code> <code>no</code> The date of the data within the cost tracker to be adjusted. <code>data.consumption</code> <code>no</code> The new consumption recorded against the specified date. <code>data.cost</code> <code>no</code> The new cost recorded against the specified date."},{"location":"services/#octopus_energyadjust_cost_tracker","title":"octopus_energy.adjust_cost_tracker","text":"<p>Allows you to adjust the consumption for any given period recorded by a cost tracker sensor representing today.</p> Attribute Optional Description <code>target.entity_id</code> <code>no</code> The name of the cost tracker sensor(s) that should be updated (e.g. <code>sensor.octopus_energy_cost_tracker_{{COST_TRACKER_NAME}}</code>). <code>data.date</code> <code>no</code> The date of the data within the cost tracker to be adjusted. <code>data.consumption</code> <code>no</code> The new consumption recorded against the specified date."},{"location":"services/#heat-pump","title":"Heat Pump","text":"<p>The following services are available if you have a heat pump registered against your account.</p>"},{"location":"services/#octopus_energyboost_heat_pump_zone","title":"octopus_energy.boost_heat_pump_zone","text":"<p>Allows you to boost a given heat pump zone for a set amount of time.</p> Attribute Optional Description <code>target.entity_id</code> <code>no</code> The name of the heat pump zone boost mode should be applied to (e.g. <code>climate.octopus_energy_heat_pump_{{HEAT_PUMP_ID}}_{{ZONE_CODE}}</code>). <code>data.hours</code> <code>no</code> The number of hours to turn boost mode on for. This can be between 0 and 12. <code>data.minutes</code> <code>no</code> The number of minutes to turn boost mode on for. This can be 0, 15, or 45. <code>data.target_temperature</code> <code>yes</code> The optional target temperature to boost to. If not supplied, then the current target temperature will be used. <p>Note</p> <p>If you boost and a target temperature is both not provided and not defined on the sensor itself, then a default value will be set. This will be 30 degrees C.</p>"},{"location":"services/#octopus_energyboost_water_heater","title":"octopus_energy.boost_water_heater","text":"<p>Allows you to boost a given heat pump water heater for a set amount of time.</p> Attribute Optional Description <code>target.entity_id</code> <code>no</code> The name of the heat pump water heater boost mode should be applied to (e.g. <code>water_heater.octopus_energy_heat_pump_{{HEAT_PUMP_ID}}</code>). <code>data.hours</code> <code>no</code> The number of hours to turn boost mode on for. This can be between 0 and 12. <code>data.minutes</code> <code>no</code> The number of minutes to turn boost mode on for. This can be 0, 15, or 45. <code>data.target_temperature</code> <code>yes</code> The optional target temperature to boost to. If not supplied, then the current target temperature will be used. <p>Note</p> <p>If you boost and a target temperature is both not provided and not defined on the sensor itself, then a default value will be set. This will be 50 degrees C.</p>"},{"location":"services/#octopus_energyset_heat_pump_flow_temp_config","title":"octopus_energy.set_heat_pump_flow_temp_config","text":"<p>Allows you to set the heat pump configuration for fixed and weather compensated flow temperatures, with the option to select which is active.</p> <p>Warning</p> <p>Changing this configuration without a good understanding of heat loss and emitter output can cause cycling, defrosting, or incorrect heat delivery. </p> <p>Note</p> <p>Corresponding sensors will not update straight away upon calling.</p> Attribute Optional Description <code>target.entity_id</code> <code>no</code> Any climate entity belonging to the heat pump which the configuration should be applied to (e.g. <code>climate.octopus_energy_heat_pump_{{HEAT_PUMP_ID}}_{{ZONE_CODE}}</code>). <code>data.weather_comp_enabled</code> <code>no</code> Switches weather compensation on or off. <code>data.weather_comp_min_temperature</code> <code>no</code> Minimum allowable temperature for weather compensation, typically no lower than 30. <code>data.weather_comp_max_temperature</code> <code>no</code> Maximum allowable temperature for weather compensation, typically no higher than 70. <code>data.fixed_flow_temperature</code> <code>no</code> If a fixed flow temperature is enabled this value will be used, typically between 30 and 70."},{"location":"services/#intelligent","title":"Intelligent","text":"<p>The following services are available if you are on an intelligent tariff.</p>"},{"location":"services/#octopus_energyrefresh_intelligent_dispatches","title":"octopus_energy.refresh_intelligent_dispatches","text":"<p>Refreshes intelligent dispatches for a given account.</p> <p>Info</p> <p>This service is only available if you have switched to manual polling in your configuration.</p> <p>Warning</p> <p>This service can only be called once every minute to a maximum of 20 times per hour.</p> Attribute Optional Description <code>target.entity_id</code> <code>no</code> The dispatching entity that you want to refresh the content for (e.g. <code>binary_sensor.octopus_energy_{{DEVICE_ID}}_intelligent_dispatching</code>)."},{"location":"services/#automation-example_6","title":"Automation Example","text":"<p>For an automation example, please refer to the available blueprint.</p>"},{"location":"services/#miscellaneous","title":"Miscellaneous","text":""},{"location":"services/#octopus_energypurge_invalid_external_statistic_ids","title":"octopus_energy.purge_invalid_external_statistic_ids","text":"<p>For removing all external statistics that are associated with meters that don't have an active tariff. This is useful if you've been using the integration and obtained new smart meters.</p>"},{"location":"services/#octopus_energyrefresh_previous_consumption_data","title":"octopus_energy.refresh_previous_consumption_data","text":"<p>For refreshing the consumption/cost information for a given previous consumption entity. This is useful when you've just installed the integration and want old data brought in or a previous consumption sensor fails to import (e.g. data becomes available outside of the configured offset). The service will raise a notification when the refreshing starts and finishes.</p> <p>This service is only available for the following sensors</p> <ul> <li><code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_previous_accumulative_consumption</code> (this will populate both consumption and cost)</li> <li><code>sensor.octopus_energy_gas_{{METER_SERIAL_NUMBER}}_{{MPRN_NUMBER}}_previous_accumulative_consumption_m3</code> (this will populate both consumption and cost for both m3 and kwh)</li> </ul> <p>Information</p> <p>Due to limitations with Home Assistant entities, this service will only refresh data for the associated statistic ids used for the recommended approach in the energy dashboard. This will not update the history of the entities themselves.</p> <p>Warning</p> <p>If you are on intelligent, the cost data will not be correct for charges outside of the normal off peak times. This is because this data isn't available.</p>"},{"location":"services/#octopus_energyregister_rate_weightings","title":"octopus_energy.register_rate_weightings","text":"<p>Allows you to configure weightings against rates at given times using factors external to the integration. These are applied when calculating target rates or rolling target rates.</p> <p>Rate weightings are added to any existing rate weightings that have been previously configured. Any rate weightings that are more than 24 hours old are removed. Any rate weightings for periods that have been previously configured are overridden. </p> Attribute Optional Description <code>target.entity_id</code> <code>no</code> The name of the electricity current rate sensor for the rates the weighting should be applied to (e.g. <code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_current_rate</code>). <code>data.weightings</code> <code>no</code> The collection of weightings to add. Each item in the array should represent a given 30 minute period. Example array is <code>[{ \"start\": \"2025-01-01T00:00:00Z\", \"end\": \"2025-01-01T00:30:00Z\", \"weighting\": 0.1 }]</code>"},{"location":"services/#automation-example_7","title":"Automation Example","text":"<p>This automation adds weightings based on the national grids carbon intensity, as provided by Carbon Intensity.</p> <pre><code>- alias: Carbon Intensity Rate Weightings\n  triggers:\n  - trigger: state\n    entity_id: event.carbon_intensity_national_current_day_rates\n  actions:\n  - action: octopus_energy.register_rate_weightings\n    target:\n      entity_id: sensor.octopus_energy_electricity_xxx_xxx_current_rate\n    data:\n      weightings: &gt;\n        {% set forecast = state_attr('event.carbon_intensity_national_current_day_rates', 'rates') + state_attr('event.carbon_intensity_national_next_day_rates', 'rates') %}\n        {% set ns = namespace(list = [])  %}   {%- for a in forecast -%} \n          {%- set ns.list = ns.list + [{ \"start\": a.from.strftime('%Y-%m-%dT%H:%M:%SZ'), \"end\": a.to.strftime('%Y-%m-%dT%H:%M:%SZ'), \"weighting\": a.intensity_forecast | float }] -%} \n        {%- endfor -%} {{ ns.list }}\n</code></pre>"},{"location":"sponsorship/","title":"Sponsorship","text":"<p>If you are enjoying the integration, why not use my referral link if you're not already a part of Octopus Energy, or if possible, make a one off or monthly GitHub sponsorship.</p>"},{"location":"architecture_decision_records/0001_target_rates_removal/","title":"0001 - Deprecation and removal of Target Rate Sensors in Octopus Energy Integration","text":""},{"location":"architecture_decision_records/0001_target_rates_removal/#status","title":"Status","text":"<p>Accepted</p>"},{"location":"architecture_decision_records/0001_target_rates_removal/#context","title":"Context","text":"<p>Target rate sensors are currently a core feature of the Octopus Energy integration. A variation of this feature was also introduced into the Carbon Intensity integration, where carbon emissions were used instead of price.  </p> <p>Maintaining this feature across multiple integrations has become problematic, as it requires ongoing effort to ensure feature parity. Meanwhile, more energy providers are emerging with dynamic pricing models similar to Octopus Energy that cannot benefit from the existing implementation.  </p> <p>In addition, there are broader automation opportunities beyond energy pricing, such as identifying optimal times for solar generation, that could leverage this functionality.  </p> <p>To address these issues, a new integration, Target Timeframes, has been developed. It abstracts the concept of selecting optimal timeframes from the data source, allowing it to work with any metric (price, carbon intensity, generation, etc.). This ensures long-term viability and avoids duplication of effort across multiple integrations.</p>"},{"location":"architecture_decision_records/0001_target_rates_removal/#decision","title":"Decision","text":"<p>Deprecate and remove target rate sensors from the Octopus Energy integration in favor of the Target Timeframes integration.</p> <ul> <li>A migration guide has been provided: Target Timeframes Migration Guide.  </li> <li>A set of blueprints for using Octopus Energy data with Target Timeframes is already available.  </li> <li>A repair notice has been introduced to inform users of the upcoming removal.  </li> <li>The target rate sensors feature will be removed six months from the notice, around the end of November 2025.  </li> </ul> <p>The Carbon Intensity integration has already removed its variation due to a smaller user base. Given the higher user count of Octopus Energy, this proposal is being made openly before proceeding.</p>"},{"location":"architecture_decision_records/0001_target_rates_removal/#consequences","title":"Consequences","text":""},{"location":"architecture_decision_records/0001_target_rates_removal/#positive","title":"Positive","text":"<ul> <li>Centralizes the feature into a single integration, reducing maintenance overhead.  </li> <li>Ensures consistent functionality and feature parity across different use cases.  </li> <li>Provides flexibility for multiple data sources beyond Octopus Energy (dynamic pricing, carbon intensity, solar generation, etc.).  </li> <li>Protects users from losing the feature if they move away from Octopus Energy.  </li> </ul>"},{"location":"architecture_decision_records/0001_target_rates_removal/#negative","title":"Negative","text":"<ul> <li>Users will need to migrate their automations to the Target Timeframes integration.  </li> <li>Some short-term disruption may occur as users adapt to the new integration.  </li> <li>Potential gaps in the new integration\u2019s functionality may need to be identified and addressed through community feedback.  </li> </ul>"},{"location":"architecture_decision_records/0002_intelligent_is_dispatching_behaviour_changes/","title":"0002 - Intelligent Is Dispatching behavior changes","text":""},{"location":"architecture_decision_records/0002_intelligent_is_dispatching_behaviour_changes/#status","title":"Status","text":"<p>Accepted</p>"},{"location":"architecture_decision_records/0002_intelligent_is_dispatching_behaviour_changes/#context","title":"Context","text":"<p>The Octopus Intelligent feature was heavily based on an existing integration, with an original proposal from author. This resulted in the intelligent based entity behavior being identical to the existing integration.</p> <p>Since inception, this integration has evolved and resulted in other sensors (i.e. off peak) which have brought some inconsistencies in naming compared to behaviour (e.g. not turning on for all off peak times). Some of the intelligent sensors have also had inconsistencies in naming compared to behaviour (e.g. dispatching sensor turning on during standard off peak when the device isn't scheduled to be charged).</p>"},{"location":"architecture_decision_records/0002_intelligent_is_dispatching_behaviour_changes/#decision","title":"Decision","text":"<p>The Is Dispatching entity will have its behaviour updated to only turn on when during a planned/scheduled dispatch period and the state of the intelligent device is in a \"scheduled\" mode.</p> <p>The Off peak entity will have its behaviour updated to turn on whenever an off peak rate is active. In the case of intelligent tariffs this will be during the standard off peak times (23:30-05:30 at time of writing) or when a planned/scheduled dispatch is active and the state of the intelligent device is in a \"scheduled\" mode.</p>"},{"location":"architecture_decision_records/0002_intelligent_is_dispatching_behaviour_changes/#consequences","title":"Consequences","text":""},{"location":"architecture_decision_records/0002_intelligent_is_dispatching_behaviour_changes/#positive","title":"Positive","text":"<ul> <li>Expected behavior based on entity names, which will be easier for new users to understand</li> <li>Automations built around running off peak will continue to work as expected when moving from/to intelligent tariffs when using the off peak sensor with the new behaviour</li> </ul>"},{"location":"architecture_decision_records/0002_intelligent_is_dispatching_behaviour_changes/#negative","title":"Negative","text":"<ul> <li>Downstream integrations that rely on existing behavior will need to change</li> <li>Users using effected entities will need to update all references</li> <li>Some short-term disruption may occur as users adapt to the new entity behaviour. </li> </ul>"},{"location":"architecture_decision_records/0003_move_to_calendar_entities_for_octoplus_events/","title":"0003 - Move to calendar entities for Octoplus events","text":""},{"location":"architecture_decision_records/0003_move_to_calendar_entities_for_octoplus_events/#status","title":"Status","text":"<p>Accepted</p>"},{"location":"architecture_decision_records/0003_move_to_calendar_entities_for_octoplus_events/#context","title":"Context","text":"<p>Currently binary sensors are provided to indicate when a saving or free electricity session is active for the current account. This also provides attributes for current and next start/end times.</p> <p>Since the introduction of the saving session binary sensor, calendar entities have received more love within Home Assistant and become the preferred way of showing events. These are better supports in UI automations as you can offset calendar events easily (e.g. reminder 10 minutes before) without having to do template gymnastics. The calendar view of Home Assistant is also used by house hold members who are not as involved as other members in things like wall tablets. A few users move the data from the sensor data into a local calendar to produce this.</p> <p>This request has been made on a few occasions, below are some samples</p> <ul> <li>https://github.com/BottlecapDave/HomeAssistant-OctopusEnergy/issues/561#issuecomment-1826830172</li> <li>https://github.com/BottlecapDave/HomeAssistant-OctopusEnergy/issues/1397</li> </ul>"},{"location":"architecture_decision_records/0003_move_to_calendar_entities_for_octoplus_events/#decision","title":"Decision","text":"<p>With more people coming on board to Home Assistant who don't necessarily come from a technological background, the automation UI becoming the preferred way of creating automations and the calendar entity getting more attention, it has been decided to convert the saving session and free electricity sessions into calendar entities.</p> <p>The old sensors, <code>binary_sensor.octopus_energy_{{ACCOUNT_ID}}_octoplus_saving_sessions</code> and <code>binary_sensor.octopus_energy_{{ACCOUNT_ID}}_octoplus_free_electricity_session</code>, will continue to be available until May 2026 when they will be removed, to ease with the transition.</p>"},{"location":"architecture_decision_records/0003_move_to_calendar_entities_for_octoplus_events/#consequences","title":"Consequences","text":""},{"location":"architecture_decision_records/0003_move_to_calendar_entities_for_octoplus_events/#positive","title":"Positive","text":"<ul> <li>Automations around sessions will be easier via the calendar trigger</li> <li>Past and present sessions will be easily viewable in the Home Assistant Calendar view</li> <li>Standard approach for people used to calendar entities.</li> </ul>"},{"location":"architecture_decision_records/0003_move_to_calendar_entities_for_octoplus_events/#negative","title":"Negative","text":"<ul> <li>Users using effected entities will need to update all references</li> <li>Some short-term disruption may occur as users adapt to the new entity behaviour.</li> <li>Event duration (e.g. 60 minutes) will require templating still</li> </ul>"},{"location":"entities/diagnostics/","title":"Diagnostic Entities","text":"<p>These entities can help diagnose issues.</p>"},{"location":"entities/diagnostics/#account-data-last-retrieved","title":"Account Data Last Retrieved","text":"<p><code>sensor.octopus_energy_{{ACCOUNT_ID}}_account_data_last_retrieved</code></p> <p>This sensor states when account data was last retrieved.</p> <p>Note</p> <p>This is disabled by default. </p> Attribute Type Description <code>attempts</code> <code>integer</code> The number of attempts that have been made to retrieve the data <code>next_refresh</code> <code>datetime</code> The timestamp of when the data will next be attempted to be retrieved <code>last_error</code> <code>string</code> The error that was raised to cause the last retrieval attempt to fail"},{"location":"entities/diagnostics/#current-consumption-data-last-retrieved","title":"Current Consumption Data Last Retrieved","text":"<p><code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_current_consumption_data_last_retrieved</code> or <code>sensor.octopus_energy_gas_{{METER_SERIAL_NUMBER}}_{{MPRN_NUMBER}}_current_consumption_data_last_retrieved</code></p> <p>This sensor states when the home mini current consumption data was last retrieved.</p> <p>Note</p> <p>This is disabled by default. </p> Attribute Type Description <code>attempts</code> <code>integer</code> The number of attempts that have been made to retrieve the data <code>next_refresh</code> <code>datetime</code> The timestamp of when the data will next be attempted to be retrieved <code>last_error</code> <code>string</code> The error that was raised to cause the last retrieval attempt to fail"},{"location":"entities/diagnostics/#current-consumption-home-pro-data-last-retrieved","title":"Current Consumption Home Pro Data Last Retrieved","text":"<p><code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_home_pro_current_consumption_data_last_retrieved</code> or <code>sensor.octopus_energy_gas_{{METER_SERIAL_NUMBER}}_{{MPRN_NUMBER}}_home_pro_current_consumption_data_last_retrieved</code></p> <p>This sensor states when the home pro current consumption data was last retrieved.</p> <p>Note</p> <p>This is disabled by default. </p> Attribute Type Description <code>attempts</code> <code>integer</code> The number of attempts that have been made to retrieve the data <code>next_refresh</code> <code>datetime</code> The timestamp of when the data will next be attempted to be retrieved <code>last_error</code> <code>string</code> The error that was raised to cause the last retrieval attempt to fail"},{"location":"entities/diagnostics/#greenness-forecast-data-last-retrieved","title":"Greenness Forecast Data Last Retrieved","text":"<p><code>sensor.octopus_energy_{{ACCOUNT_ID}}_greenness_forecast_data_last_retrieved</code></p> <p>This sensor states when greenness forecast data was last retrieved.</p> <p>Note</p> <p>This is disabled by default. </p> Attribute Type Description <code>attempts</code> <code>integer</code> The number of attempts that have been made to retrieve the data <code>next_refresh</code> <code>datetime</code> The timestamp of when the data will next be attempted to be retrieved <code>last_error</code> <code>string</code> The error that was raised to cause the last retrieval attempt to fail"},{"location":"entities/diagnostics/#intelligent-dispatches-data-last-retrieved","title":"Intelligent Dispatches Data Last Retrieved","text":"<p><code>sensor.octopus_energy_{{DEVICE_ID}}_intelligent_dispatches_data_last_retrieved</code></p> <p>This sensor states when intelligent dispatches data was last retrieved.</p> <p>Note</p> <p>This is disabled by default. </p> Attribute Type Description <code>attempts</code> <code>integer</code> The number of attempts that have been made to retrieve the data <code>next_refresh</code> <code>datetime</code> The timestamp of when the data will next be attempted to be retrieved <code>last_error</code> <code>string</code> The error that was raised to cause the last retrieval attempt to fail <code>requests_current_hour</code> <code>integer</code> The number of requests that have been made during the current hour. The start of the hour starts when the first request is made. <code>maximum_requests_per_hour</code> <code>integer</code> The maximum number of requests that can be made during an hour. The start of the hour starts when the first request is made. <code>request_limits_last_reset</code> <code>datetime</code> The datetime when the request limits were last reset. This will reset when a request is made and is within the designated limits."},{"location":"entities/diagnostics/#intelligent-settings-data-last-retrieved","title":"Intelligent Settings Data Last Retrieved","text":"<p><code>sensor.octopus_energy_{{DEVICE_ID}}_intelligent_settings_data_last_retrieved</code></p> <p>This sensor states when intelligent settings data was last retrieved.</p> <p>Note</p> <p>This is disabled by default. </p> Attribute Type Description <code>attempts</code> <code>integer</code> The number of attempts that have been made to retrieve the data <code>next_refresh</code> <code>datetime</code> The timestamp of when the data will next be attempted to be retrieved <code>last_error</code> <code>string</code> The error that was raised to cause the last retrieval attempt to fail"},{"location":"entities/diagnostics/#previous-consumption-and-rates-data-last-retrieved","title":"Previous Consumption And Rates Data Last Retrieved","text":"<p><code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_previous_consumption_and_rates_data_last_retrieved</code> or <code>sensor.octopus_energy_gas_{{METER_SERIAL_NUMBER}}_{{MPRN_NUMBER}}_previous_consumption_and_rates_data_last_retrieved</code></p> <p>This sensor states when the previous consumption and associated rate data was last retrieved.</p> <p>Note</p> <p>This is disabled by default. </p> Attribute Type Description <code>attempts</code> <code>integer</code> The number of attempts that have been made to retrieve the data <code>next_refresh</code> <code>datetime</code> The timestamp of when the data will next be attempted to be retrieved <code>last_error</code> <code>string</code> The error that was raised to cause the last retrieval attempt to fail"},{"location":"entities/diagnostics/#rates-data-last-retrieved","title":"Rates Data Last Retrieved","text":"<p><code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_rates_data_last_retrieved</code> or <code>sensor.octopus_energy_gas_{{METER_SERIAL_NUMBER}}_{{MPRN_NUMBER}}_rates_data_last_retrieved</code></p> <p>This sensor states when the previous/current and next rate data was last retrieved.</p> <p>Note</p> <p>This is disabled by default. </p> Attribute Type Description <code>attempts</code> <code>integer</code> The number of attempts that have been made to retrieve the data <code>next_refresh</code> <code>datetime</code> The timestamp of when the data will next be attempted to be retrieved <code>last_error</code> <code>string</code> The error that was raised to cause the last retrieval attempt to fail"},{"location":"entities/diagnostics/#saving-sessions-data-last-retrieved","title":"Saving Sessions Data Last Retrieved","text":"<p><code>sensor.octopus_energy_{{ACCOUNT_ID}}_saving_sessions_data_last_retrieved</code></p> <p>This sensor states when saving sessions data was last retrieved.</p> <p>Note</p> <p>This is disabled by default. </p> Attribute Type Description <code>attempts</code> <code>integer</code> The number of attempts that have been made to retrieve the data <code>next_refresh</code> <code>datetime</code> The timestamp of when the data will next be attempted to be retrieved <code>last_error</code> <code>string</code> The error that was raised to cause the last retrieval attempt to fail"},{"location":"entities/diagnostics/#free-electricity-sessions-data-last-retrieved","title":"Free Electricity Sessions Data Last Retrieved","text":"<p><code>sensor.octopus_energy_{{ACCOUNT_ID}}_free_electricity_sessions_data_last_retrieved</code></p> <p>This sensor states when free electricity sessions data was last retrieved.</p> <p>Note</p> <p>This is disabled by default. </p> Attribute Type Description <code>attempts</code> <code>integer</code> The number of attempts that have been made to retrieve the data <code>next_refresh</code> <code>datetime</code> The timestamp of when the data will next be attempted to be retrieved <code>last_error</code> <code>string</code> The error that was raised to cause the last retrieval attempt to fail"},{"location":"entities/diagnostics/#standing-charge-data-last-retrieved","title":"Standing Charge Data Last Retrieved","text":"<p><code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_standing_charge_data_last_retrieved</code> or <code>sensor.octopus_energy_gas_{{METER_SERIAL_NUMBER}}_{{MPRN_NUMBER}}_standing_charge_data_last_retrieved</code></p> <p>This sensor states when the standing charge data was last retrieved.</p> <p>Note</p> <p>This is disabled by default. </p> Attribute Type Description <code>attempts</code> <code>integer</code> The number of attempts that have been made to retrieve the data <code>next_refresh</code> <code>datetime</code> The timestamp of when the data will next be attempted to be retrieved <code>last_error</code> <code>string</code> The error that was raised to cause the last retrieval attempt to fail"},{"location":"entities/diagnostics/#wheel-of-fortune-data-last-retrieved","title":"Wheel Of Fortune Data Last Retrieved","text":"<p><code>sensor.octopus_energy_{{ACCOUNT_ID}}_wheel_of_fortune_data_last_retrieved</code></p> <p>This sensor states when wheel of fortune data was last retrieved.</p> <p>Note</p> <p>This is disabled by default. </p> Attribute Type Description <code>attempts</code> <code>integer</code> The number of attempts that have been made to retrieve the data <code>next_refresh</code> <code>datetime</code> The timestamp of when the data will next be attempted to be retrieved <code>last_error</code> <code>string</code> The error that was raised to cause the last retrieval attempt to fail"},{"location":"entities/diagnostics/#heat-pump-data-last-retrieved","title":"Heat Pump Data Last Retrieved","text":"<p><code>sensor.octopus_energy_{{HEAT_PUMP_ID}}_heat_pump_data_last_retrieved</code></p> <p>This sensor states when heat pump data was last retrieved.</p> <p>Note</p> <p>This is disabled by default. </p> Attribute Type Description <code>attempts</code> <code>integer</code> The number of attempts that have been made to retrieve the data <code>next_refresh</code> <code>datetime</code> The timestamp of when the data will next be attempted to be retrieved <code>last_error</code> <code>string</code> The error that was raised to cause the last retrieval attempt to fail"},{"location":"entities/electricity/","title":"Electricity","text":"<p>You'll get the following entities for each electricity meter with an active agreement.</p>"},{"location":"entities/electricity/#current-rate","title":"Current Rate","text":"<p><code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_current_rate</code></p> <p>The current rate that energy consumption is charged at (including VAT).</p> <p>This is in pounds and pence (e.g. 1.01 = \u00a31.01).</p> <p>Warning</p> <p>If you are on an intelligent tariff, then rate information will be adjusted to off-peak rates when a dispatch is discovered during the period. This off peak rate will be dependent on your car charging. As the integration has no knowledge of if your car is charging, this value might be incorrect. This is indicated via the <code>is_intelligent_adjusted</code> attribute.</p> Attribute Type Description <code>mpan</code> <code>string</code> The mpan for the associated meter <code>serial_number</code> <code>string</code> The serial for the associated meter <code>is_export</code> <code>boolean</code> Determines if the meter exports energy rather than imports <code>is_smart_meter</code> <code>boolean</code> Determines if the meter is considered smart by Octopus Energy <code>tariff</code> <code>string</code> The tariff the meter/rates are associated with <code>start</code> <code>datetime</code> The date/time when the rate started <code>end</code> <code>datetime</code> The date/time when the rate ends <code>is_capped</code> <code>boolean</code> Indicates if the rate has been capped by a configured price cap <code>is_intelligent_adjusted</code> <code>boolean</code> Indicates if the rate has been adjusted due to a dispatch organised by an intelligent tariff <code>current_day_min_rate</code> <code>float</code> The minimum rate available for the current day <code>current_day_max_rate</code> <code>float</code> The maximum rate available for the current day <code>current_day_average_rate</code> <code>float</code> The average rate for the current day <code>price_cap</code> <code>float</code> The price cap that has been configured for the account and is currently applied to all electricity rates"},{"location":"entities/electricity/#previous-rate","title":"Previous Rate","text":"<p><code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_previous_rate</code></p> <p>The previous rate that energy consumption was charged at (including VAT), that differs from the current rate. If there is no previous rate (e.g. rates before now are of the same value as the current rate), then this will be reported as <code>unknown</code>/<code>none</code>.</p> <p>This is in pounds and pence (e.g. 1.01 = \u00a31.01).</p> Attribute Type Description <code>mpan</code> <code>string</code> The mpan for the associated meter <code>serial_number</code> <code>string</code> The serial for the associated meter <code>is_export</code> <code>boolean</code> Determines if the meter exports energy rather than imports <code>is_smart_meter</code> <code>boolean</code> Determines if the meter is considered smart by Octopus Energy <code>start</code> <code>datetime</code> The date/time when the previous rate started <code>end</code> <code>datetime</code> The date/time when the previous rate ended <code>is_capped</code> <code>boolean</code> Indicates if the rate has been capped by a configured price cap <code>is_intelligent_adjusted</code> <code>boolean</code> Indicates if the rate has been adjusted due to a dispatch organised by an intelligent tariff"},{"location":"entities/electricity/#next-rate","title":"Next rate","text":"<p><code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_next_rate</code></p> <p>The next/upcoming rate that energy consumption will be charged at (including VAT), that differs from the current rate. If there is no next rate (e.g. rates after now are of the same value as the current rate), then this will be reported as <code>unknown</code>/<code>none</code>.</p> <p>This is in pounds and pence (e.g. 1.01 = \u00a31.01).</p> <p>Warning</p> <p>If you are on an intelligent tariff, then rate information will be adjusted to off-peak rates when a dispatch is discovered during the period. This off peak rate will be dependent on your car charging. As the integration has no knowledge of if your car is charging, this value might be incorrect. This is indicated via the <code>is_intelligent_adjusted</code> attribute.</p> Attribute Type Description <code>mpan</code> <code>string</code> The mpan for the associated meter <code>serial_number</code> <code>string</code> The serial for the associated meter <code>is_export</code> <code>boolean</code> Determines if the meter exports energy rather than imports <code>is_smart_meter</code> <code>boolean</code> Determines if the meter is considered smart by Octopus Energy <code>start</code> <code>datetime</code> The date/time when the next rate starts <code>end</code> <code>datetime</code> The date/time when the next rate ends <code>is_capped</code> <code>boolean</code> Indicates if the rate has been capped by a configured price cap <code>is_intelligent_adjusted</code> <code>boolean</code> Indicates if the rate has been adjusted due to a dispatch organised by an intelligent tariff"},{"location":"entities/electricity/#current-day-rates","title":"Current Day Rates","text":"<p><code>event.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_current_day_rates</code></p> <p>The state of this sensor states when the current day's rates were last updated. The attributes of this sensor exposes the current day's rates.</p> Attribute Type Description <code>rates</code> <code>array</code> The list of rates applicable for the current day <code>tariff_code</code> <code>string</code> The tariff code associated with current day's rates <code>serial_number</code> <code>string</code> The serial number of the meter the rates are related to <code>mpan</code> <code>string</code> The MPAN of the meter the rates are related to <p>Each rate item has the following attributes</p> Attribute Type Description <code>start</code> <code>datetime</code> The date/time when the rate starts <code>end</code> <code>datetime</code> The date/time when the rate ends <code>value_inc_vat</code> <code>float</code> The value of the rate including VAT. This is in pounds and pence (e.g. 1.01 = \u00a31.01) <code>is_capped</code> <code>boolean</code> Indicates if the rate has been capped by a configured price cap <code>is_intelligent_adjusted</code> <code>boolean</code> Indicates if the rate has been adjusted due to a dispatch organised by an intelligent tariff"},{"location":"entities/electricity/#previous-day-rates","title":"Previous Day Rates","text":"<p><code>event.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_previous_day_rates</code></p> <p>The state of this sensor states when the previous day's rates were last updated. The attributes of this sensor exposes the previous day's rates.</p> Attribute Type Description <code>rates</code> <code>array</code> The list of rates applicable for the previous day <code>tariff_code</code> <code>string</code> The tariff code associated with previous day's rates <code>serial_number</code> <code>string</code> The serial number of the meter the rates are related to <code>mpan</code> <code>string</code> The MPAN of the meter the rates are related to <p>Each rate item has the following attributes</p> Attribute Type Description <code>start</code> <code>datetime</code> The date/time when the rate starts <code>end</code> <code>datetime</code> The date/time when the rate ends <code>value_inc_vat</code> <code>float</code> The value of the rate including VAT. This is in pounds and pence (e.g. 1.01 = \u00a31.01) <code>is_capped</code> <code>boolean</code> Indicates if the rate has been capped by a configured price cap <code>is_intelligent_adjusted</code> <code>boolean</code> Indicates if the rate has been adjusted due to a dispatch organised by an intelligent tariff"},{"location":"entities/electricity/#next-day-rates","title":"Next Day Rates","text":"<p><code>event.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_next_day_rates</code></p> <p>The state of this sensor states when the next day's rates were last updated. The attributes of this sensor exposes the next day's rates.</p> Attribute Type Description <code>rates</code> <code>array</code> The list of rates applicable for the next day <code>tariff_code</code> <code>string</code> The tariff code associated with today's rates <code>serial_number</code> <code>string</code> The serial number of the meter the rates are related to <code>mpan</code> <code>string</code> The MPAN of the meter the rates are related to <p>Each rate item has the following attributes</p> Attribute Type Description <code>start</code> <code>datetime</code> The date/time when the rate starts <code>end</code> <code>datetime</code> The date/time when the rate ends <code>value_inc_vat</code> <code>float</code> The value of the rate including VAT. This is in pounds and pence (e.g. 1.01 = \u00a31.01) <code>is_capped</code> <code>boolean</code> Indicates if the rate has been capped by a configured price cap <code>is_intelligent_adjusted</code> <code>boolean</code> Indicates if the rate has been adjusted due to a dispatch organised by an intelligent tariff"},{"location":"entities/electricity/#off-peak","title":"Off Peak","text":"<p><code>binary_sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_off_peak</code></p> <p>This is <code>on</code> when you're within your tariff's off peak period, and <code>off</code> at all other times. This will only be work if you're on a tariff with an off peak period.</p> <p>Warning</p> <p>For intelligent tariffs, this sensor will turn on when you're within active ad hoc dispatching periods as well.</p> <p>Depending on your account configuration, what is determined as an active dispatching period will change. If you have configured to accept planned or started dispatches, then the sensor will turn on when you're are within an active planned or started dispatch period. If you have configured to accept only started dispatches, then the sensor will turn on when you're are within an active started dispatch period, but not planned dispatch.</p> Attribute Type Description <code>current_start</code> <code>datetime</code> The date/time when the off peak rate started <code>current_end</code> <code>datetime</code> The date/time when the off peak rate ends <code>next_start</code> <code>datetime</code> The date/time when the next off peak rate starts <code>next_end</code> <code>datetime</code> The date/time when the next off peak rate ends"},{"location":"entities/electricity/#smart-meter-entities","title":"Smart Meter Entities","text":"<p>If your account information doesn't determine you have a smart meter, then you will have the following entities in a disabled state. If you enable these entities, they might not work correctly in this scenario.</p> <p>If you are wishing to use these sensors with the Energy Dashboard, then you can follow this guide.</p> <p>By default, it's not possible to include current consumption sensors. This is due to Octopus Energy only receive data from the smart meters up to the previous day. If you want current consumption, then you will need a Octopus Home Mini.</p>"},{"location":"entities/electricity/#previous-accumulative-consumption","title":"Previous Accumulative Consumption","text":"<p><code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_previous_accumulative_consumption</code></p> <p>The total consumption reported by the meter (not other devices e.g. Home Mini) for the previous available full day. If for example data is available up to <code>01:00</code> of <code>2024-09-02</code>, then this sensor will report the cost between <code>2024-09-01T00:00:00Z</code> and <code>2024-09-02T00:00:00Z</code>.</p> <p>Due to limitation of HA entities, the data will be updated as a single record, which means the history of the sensor will not be broken down further than once a day. If you want the cost broken down into hourly chunks, you can use the statistic entities used for the energy dashboard.</p> <p>Info</p> <p>This retrieves the data reported directly by the meter which is used to calculate your bill. If you have an Octopus Home Mini (or similar), then data reported by this device will not be exposed in this sensor. This is to avoid confusion when comparing the data against your bill and to provide consistency between users with and without an Octopus Home Mini.</p> <p>Warning</p> <p>This data won't necessarily be available at the stroke of midnight. This integration has no control of this and is at the mercy of when the data is available by Octopus Energy. </p> <p>Because this sensor only looks at the last complete day, if the data takes longer than 24 hours to populate then the sensor will not update straight away. You can look at the data_last_retrieved sensor which indicates when the data was last retrieved.</p> Attribute Type Description <code>mpan</code> <code>string</code> The mpan for the associated meter <code>serial_number</code> <code>string</code> The serial for the associated meter <code>is_export</code> <code>boolean</code> Determines if the meter exports energy rather than imports <code>is_smart_meter</code> <code>boolean</code> Determines if the meter is considered smart by Octopus Energy <code>total</code> <code>float</code> The total energy value for the previous day. <code>charges</code> <code>array</code> Collection of consumption periods for the previous day broken down into 30 minute periods. <p>Each charge item has the following attributes</p> Attribute Type Description <code>start</code> <code>datetime</code> The date/time when the consumption starts <code>end</code> <code>datetime</code> The date/time when the consumption ends <code>consumption</code> <code>float</code> The consumption value of the specified period <p>Info</p> <p>You can use the data_last_retrieved sensor to determine when the underlying data was last retrieved from the OE servers.</p>"},{"location":"entities/electricity/#variants","title":"Variants","text":"<p>The following variants of the Previous Accumulative Consumption are available.</p>"},{"location":"entities/electricity/#off-peak_1","title":"Off Peak","text":"<p><code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_previous_accumulative_consumption_off_peak</code></p> <p>The total consumption reported by the meter for the previous available full day during off peak hours (the lowest available rate).</p> <p>Note</p> <p>This is only available when on a tariff with 2 or 3 unique rates during a given day. </p> <p>If you switch to a tariff that meets this criteria, you will need to reload the integration to gain access to this entity.</p> <p>If you switch to a tariff that no longer meets this criteria, the entity will no longer be updated. When you reload the integration, this entity will no longer be available.</p> <p>This is disabled by default.</p> <p>Warning</p> <p>If you are on intelligent and are using a provider where planned_dispatches are not supported, then charges outside of your normal off peak periods will be counted at peak. This is because Octopus Energy doesn't provide enough information to determine if a completed dispatch was a bump charge or a planned charge.</p>"},{"location":"entities/electricity/#standard","title":"Standard","text":"<p><code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_previous_accumulative_consumption_standard</code></p> <p>The total consumption reported by the meter for the previous available full day during standard hours (the middle rate).</p> <p>Note</p> <p>This is only available when on a tariff with 2 or 3 unique rates during a given day. </p> <p>If you switch to a tariff that meets this criteria, you will need to reload the integration to gain access to this entity.</p> <p>If you switch to a tariff that no longer meets this criteria, the entity will no longer be updated. When you reload the integration, this entity will no longer be available.</p> <p>This is disabled by default.</p>"},{"location":"entities/electricity/#peak","title":"Peak","text":"<p><code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_previous_accumulative_consumption_peak</code></p> <p>The total consumption reported by the meter for the previous available full day during peak hours (the highest available rate).</p> <p>Note</p> <p>This is only available when on a tariff with 2 or 3 unique rates during a given day. </p> <p>If you switch to a tariff that meets this criteria, you will need to reload the integration to gain access to this entity.</p> <p>If you switch to a tariff that no longer meets this criteria, the entity will no longer be updated. When you reload the integration, this entity will no longer be available.</p> <p>This is disabled by default.</p>"},{"location":"entities/electricity/#previous-accumulative-cost","title":"Previous Accumulative Cost","text":"<p><code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_previous_accumulative_cost</code></p> <p>The total cost for the previous available full day, including the standing charge. If for example data is available up to <code>01:00</code> of <code>2024-09-02</code>, then this sensor will report the cost between <code>2024-09-01T00:00:00Z</code> and <code>2024-09-02T00:00:00Z</code>. </p> <p>Due to limitation of HA entities, the data will be updated as a single record, which means the history of the sensor will not be broken down further than once a day. If you want the cost broken down into hourly chunks, you can use the statistic entities used for the energy dashboard.</p> <p>Info</p> <p>This retrieves the data reported directly by the meter which is used to calculate your bill. If you have an Octopus Home Mini (or similar), then data reported by this device will not be exposed in this sensor. This is to avoid confusion when comparing the data against your bill and to provide consistency between users with and without an Octopus Home Mini.</p> <p>Info</p> <p>If you are on an intelligent tariff, this will not include charges that are done outside of normal off peak hours in certain scenarios. See the FAQ for more information around this.</p> <p>Warning</p> <p>This data won't necessarily be available at the stroke of midnight. This integration has no control of this and is at the mercy of when the data is available by Octopus Energy. </p> <p>Because this sensor only looks at the last complete day, if the data takes longer than 24 hours to populate then the sensor will not update straight away. You can look at the data_last_retrieved sensor which indicates when the data was last retrieved.</p> Attribute Type Description <code>mpan</code> <code>string</code> The mpan for the associated meter <code>serial_number</code> <code>string</code> The serial for the associated meter <code>is_export</code> <code>boolean</code> Determines if the meter exports energy rather than imports <code>is_smart_meter</code> <code>boolean</code> Determines if the meter is considered smart by Octopus Energy <code>tariff_code</code> <code>string</code> The tariff that determined the cost <code>standing_charge</code> <code>float</code> The standing charge included in the cost. This is in pounds and pence (e.g. 1.01 = \u00a31.01) <code>total_without_standing_charge</code> <code>float</code> The total cost of the previous day excluding the standing charge. This is in pounds and pence (e.g. 1.01 = \u00a31.01) <code>total</code> <code>float</code> The total cost for the previous day. This is in pounds and pence (e.g. 1.01 = \u00a31.01) <code>charges</code> <code>array</code> Collection of consumption periods and costs for the previous day broken down into 30 minute periods. <p>Each charge item has the following attributes</p> Attribute Type Description <code>start</code> <code>datetime</code> The date/time when the consumption starts <code>end</code> <code>datetime</code> The date/time when the consumption ends <code>rate</code> <code>float</code> The rate the consumption is charged at. This is in pounds and pence (e.g. 1.01 = \u00a31.01) <code>consumption</code> <code>float</code> The consumption value of the specified period <code>cost</code> <code>float</code> The cost of the consumption at the specified rate. This is in pounds and pence (e.g. 1.01 = \u00a31.01) <p>Info</p> <p>You can use the data_last_retrieved sensor to determine when the underlying data was last retrieved from the OE servers.</p>"},{"location":"entities/electricity/#variants_1","title":"Variants","text":"<p>The following variants of the Previous Accumulative Cost are available.</p>"},{"location":"entities/electricity/#off-peak_2","title":"Off Peak","text":"<p><code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_previous_accumulative_cost_off_peak</code></p> <p>The total cost reported by the meter for the previous available full day during off peak hours (the lowest available rate).</p> <p>Note</p> <p>This is only available when on a tariff with 2 or 3 unique rates during a given day. </p> <p>If you switch to a tariff that meets this criteria, you will need to reload the integration to gain access to this entity.</p> <p>If you switch to a tariff that no longer meets this criteria, the entity will no longer be updated. When you reload the integration, this entity will no longer be available.</p> <p>This is disabled by default.</p> <p>Warning</p> <p>If you are on intelligent and are using a provider where planned_dispatches are not supported, then charges outside of your normal off peak periods will be counted at peak. This is because Octopus Energy doesn't provide enough information to determine if a completed dispatch was a bump charge or a planned charge.</p>"},{"location":"entities/electricity/#standard_1","title":"Standard","text":"<p><code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_previous_accumulative_cost_standard</code></p> <p>The total cost reported by the meter for the previous available full day during standard hours (the middle rate).</p> <p>Note</p> <p>This is only available when on a tariff with 2 or 3 unique rates during a given day. </p> <p>If you switch to a tariff that meets this criteria, you will need to reload the integration to gain access to this entity.</p> <p>If you switch to a tariff that no longer meets this criteria, the entity will no longer be updated. When you reload the integration, this entity will no longer be available.</p> <p>This is disabled by default.</p>"},{"location":"entities/electricity/#peak_1","title":"Peak","text":"<p><code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_previous_accumulative_cost_peak</code></p> <p>The total cost reported by the meter for the previous available full day during peak hours (the highest available rate).</p> <p>Note</p> <p>This is only available when on a tariff with 2 or 3 unique rates during a given day. </p> <p>If you switch to a tariff that meets this criteria, you will need to reload the integration to gain access to this entity.</p> <p>If you switch to a tariff that no longer meets this criteria, the entity will no longer be updated. When you reload the integration, this entity will no longer be available.</p> <p>This is disabled by default.</p>"},{"location":"entities/electricity/#previous-consumption-day-rates","title":"Previous Consumption Day Rates","text":"<p><code>event.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_previous_consumption_rates</code></p> <p>The state of this sensor states when the previous consumption's rates were last updated. This is typically the same as the previous available full day's rates, but could differ depending on available data. The attributes of this sensor exposes the previous consumption's rates. </p> <p>Note</p> <p>This is disabled by default.</p> Attribute Type Description <code>rates</code> <code>array</code> The list of rates applicable for the previous consumption <code>tariff_code</code> <code>string</code> The tariff code associated with previous consumption's rates <p>Each rate item has the following attributes</p> Attribute Type Description <code>start</code> <code>datetime</code> The date/time when the rate starts <code>end</code> <code>datetime</code> The date/time when the rate ends <code>value_inc_vat</code> <code>float</code> The value of the rate including VAT. This is in pounds and pence (e.g. 1.01 = \u00a31.01) <code>is_capped</code> <code>boolean</code> Indicates if the rate has been capped by a configured price cap <code>is_intelligent_adjusted</code> <code>boolean</code> Indicates if the rate has been adjusted due to a dispatch organised by an intelligent tariff"},{"location":"entities/electricity/#export-entities","title":"Export Entities","text":"<p>If you export energy, then unless specified otherwise, in addition you'll gain the above entities with the name <code>export</code> present. E.g. <code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_export_current_rate</code>.</p>"},{"location":"entities/electricity/#home-minipro-entities","title":"Home Mini/Pro Entities","text":""},{"location":"entities/electricity/#current-consumption","title":"Current Consumption","text":"<p><code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_current_consumption</code></p> <p>Warning</p> <p>This will only be available if you have specified you have an Octopus Home Mini. Do not set unless you have one.</p> <p>Info</p> <p>An export equivalent of this sensor does not exist because the data is not available</p> <p>Note</p> <p>This is disabled by default.</p> <p>The delta of the accumulative electricity consumption since the last update (e.g. if the previous accumulative consumption update reported 1kWh and the current accumulative consumption update reported 1.1kWh, then this sensor will report 0.1kWh). The time period the data for this sensor represents will depend on the frequency the underlying data is retrieved. If the data takes longer to refresh, then the time period of this sensor will be extended.</p> <p>This is a legacy sensor which was been built to see the accumulation within the energy dashboard. This may be removed in the future.</p> <p>It has been noticed that daily consumption reported in Home Assistant can differ to when looking at past data within Octopus Energy. It looks like this is because Octopus Energy will favour \"official\" data from your smart meter over the data they collect.</p> <p>If current consumption data is unable to be retrieved, then the integration will attempt to retrieve missing data. This will be done for the current day only. This is due to it sharing the same data for the accumulation sensors and will not be changed. </p> <p>Info</p> <p>You can use the data_last_retrieved sensor to determine when the underlying data was last retrieved from the OE servers.</p>"},{"location":"entities/electricity/#current-demand","title":"Current Demand","text":"<p><code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_current_demand</code></p> <p>Warning</p> <p>This will only be available if you have specified you have an Octopus Home Mini or have configured an Octopus Home Pro. Do not set unless you have one.</p> <p>The current demand reported by the Home Mini/Pro. This will try and update every minute for Home Mini and every 10 seconds for Home Pro.</p> <p>Info</p> <p>You can use the Home Mini data_last_retrieved sensor or Home Pro data_last_retrieved sensor to determine when the underlying data was last retrieved from the OE servers.</p>"},{"location":"entities/electricity/#current-accumulative-consumption","title":"Current Accumulative Consumption","text":"<p><code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_current_accumulative_consumption</code></p> <p>Warning</p> <p>This will only be available if you have specified you have an Octopus Home Mini. Do not set unless you have one.</p> <p>Info</p> <p>An export equivalent of this sensor does not exist because the data is not available</p> <p>The total consumption reported by the meter for the current day.</p> Attribute Type Description <code>mpan</code> <code>string</code> The mpan for the associated meter <code>serial_number</code> <code>string</code> The serial for the associated meter <code>is_export</code> <code>boolean</code> Determines if the meter exports energy rather than imports <code>is_smart_meter</code> <code>boolean</code> Determines if the meter is considered smart by Octopus Energy <code>total</code> <code>float</code> The total energy value for the previous day <code>charges</code> <code>array</code> Collection of consumption periods for the previous day broken down into 30 minute periods. <p>Each charge item has the following attributes</p> Attribute Type Description <code>start</code> <code>datetime</code> The date/time when the consumption starts <code>end</code> <code>datetime</code> The date/time when the consumption ends <code>consumption</code> <code>float</code> The consumption value of the specified period"},{"location":"entities/electricity/#current-total-consumption","title":"Current Total Consumption","text":"<p><code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_current_total_consumption</code></p> <p>Warning</p> <p>This will only be available if you have specified you have an Octopus Home Mini or have configured an Octopus Home Pro. Do not set unless you have one.</p> <p>Info</p> <p>An export equivalent of this sensor does not exist because the data is not available</p> <p>The total consumption reported by the meter for all time. This will try and update every minute for Home Mini and every 10 seconds for Home Pro.</p> Attribute Type Description <code>mpan</code> <code>string</code> The mpan for the associated meter <code>serial_number</code> <code>string</code> The serial for the associated meter <code>is_export</code> <code>boolean</code> Determines if the meter exports energy rather than imports <code>is_smart_meter</code> <code>boolean</code> Determines if the meter is considered smart by Octopus Energy"},{"location":"entities/electricity/#current-total-export","title":"Current Total Export","text":"<p><code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_current_total_export</code></p> <p>Warning</p> <p>This will only be available if you have specified you have an Octopus Home Mini. Do not set unless you have one.</p> <p>Info</p> <p>Not all meters provide this information. In these scenarios, this sensor will report zero or unknown.</p> <p>Note</p> <p>This is disabled by default.</p> <p>The total export reported by the meter for all time. This will try and update every minute for Home Mini.</p> Attribute Type Description <code>mpan</code> <code>string</code> The mpan for the associated meter <code>serial_number</code> <code>string</code> The serial for the associated meter <code>is_export</code> <code>boolean</code> Determines if the meter exports energy rather than imports <code>is_smart_meter</code> <code>boolean</code> Determines if the meter is considered smart by Octopus Energy"},{"location":"entities/electricity/#current-accumulative-cost","title":"Current Accumulative Cost","text":"<p><code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_current_accumulative_cost</code></p> <p>Warning</p> <p>This will only be available if you have specified you have an Octopus Home Mini. Do not set unless you have one.</p> <p>Info</p> <p>An export equivalent of this sensor does not exist because the data is not available</p> <p>Info</p> <p>If you are on an intelligent tariff, this will not include charges that are done outside of normal off peak hours in certain scenarios. See the FAQ for more information around this.</p> <p>The total cost for the current day, including the standing charge.</p> Attribute Type Description <code>mpan</code> <code>string</code> The mpan for the associated meter <code>serial_number</code> <code>string</code> The serial for the associated meter <code>is_export</code> <code>boolean</code> Determines if the meter exports energy rather than imports <code>is_smart_meter</code> <code>boolean</code> Determines if the meter is considered smart by Octopus Energy <code>tariff_code</code> <code>string</code> The tariff that determined the cost <code>standing_charge</code> <code>float</code> The standing charge included in the cost. This is in pounds and pence (e.g. 1.01 = \u00a31.01) <code>total_without_standing_charge</code> <code>float</code> The total cost of the current day excluding the standing charge. This is in pounds and pence (e.g. 1.01 = \u00a31.01) <code>total</code> <code>float</code> The total cost for the current day. This is in pounds and pence (e.g. 1.01 = \u00a31.01) <code>charges</code> <code>array</code> Collection of consumption periods and costs for the current day broken down into 30 minute periods. <p>Each charge item has the following attributes</p> Attribute Type Description <code>start</code> <code>datetime</code> The date/time when the consumption starts <code>end</code> <code>datetime</code> The date/time when the consumption ends <code>rate</code> <code>float</code> The rate the consumption is charged at. This is in pounds and pence (e.g. 1.01 = \u00a31.01) <code>consumption</code> <code>float</code> The consumption value of the specified period <code>cost</code> <code>float</code> The cost of the consumption at the specified rate. This is in pounds and pence (e.g. 1.01 = \u00a31.01)"},{"location":"entities/electricity/#variants_2","title":"Variants","text":"<p>The following variants of the Current Accumulative Cost are available.</p>"},{"location":"entities/electricity/#off-peak_3","title":"Off Peak","text":"<p><code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_current_accumulative_cost_off_peak</code></p> <p>The total cost reported by the meter for the current day during off peak hours (the lowest available rate).</p> <p>Note</p> <p>This is only available when on a tariff with 2 or 3 unique rates during a given day. </p> <p>If you switch to a tariff that meets this criteria, you will need to reload the integration to gain access to this entity.</p> <p>If you switch to a tariff that no longer meets this criteria, the entity will no longer be updated. When you reload the integration, this entity will no longer be available.</p> <p>This is disabled by default.</p> <p>Warning</p> <p>This will only be available if you have specified you have a Octopus Home Mini or have configured an Octopus Home Pro. Do not set unless you have one.</p> <p>Warning</p> <p>If you are on intelligent and are using a provider where planned_dispatches are not supported, then charges outside of your normal off peak periods will be counted at peak. This is because Octopus Energy doesn't provide enough information to determine if a completed dispatch was a bump charge or a planned charge.</p> <p>Info</p> <p>An export equivalent of this sensor does not exist because the data is not available</p>"},{"location":"entities/electricity/#standard_2","title":"Standard","text":"<p><code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_current_accumulative_cost_standard</code></p> <p>The total cost reported by the meter for the current day during standard hours (the middle rate).</p> <p>Note</p> <p>This is only available when on a tariff with 2 or 3 unique rates during a given day. </p> <p>If you switch to a tariff that meets this criteria, you will need to reload the integration to gain access to this entity.</p> <p>If you switch to a tariff that no longer meets this criteria, the entity will no longer be updated. When you reload the integration, this entity will no longer be available.</p> <p>This is disabled by default.</p> <p>Warning</p> <p>This will only be available if you have specified you have a Octopus Home Mini or have configured an Octopus Home Pro. Do not set unless you have one.</p> <p>Info</p> <p>An export equivalent of this sensor does not exist because the data is not available</p>"},{"location":"entities/electricity/#peak_2","title":"Peak","text":"<p><code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_current_accumulative_cost_peak</code></p> <p>The total cost reported by the meter for the current day during peak hours (the highest available rate).</p> <p>Note</p> <p>This is only available when on a tariff with 2 or 3 unique rates during a given day. </p> <p>If you switch to a tariff that meets this criteria, you will need to reload the integration to gain access to this entity.</p> <p>If you switch to a tariff that no longer meets this criteria, the entity will no longer be updated. When you reload the integration, this entity will no longer be available.</p> <p>This is disabled by default.</p> <p>Warning</p> <p>This will only be available if you have specified you have a Octopus Home Mini or have configured an Octopus Home Pro. Do not set unless you have one.</p> <p>Info</p> <p>An export equivalent of this sensor does not exist because the data is not available</p>"},{"location":"entities/electricity/#current-interval-accumulative-consumption","title":"Current Interval Accumulative Consumption","text":"<p><code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_current_interval_accumulative_consumption</code></p> <p>Warning</p> <p>This will only be available if you have specified you have an Octopus Home Mini. Do not set unless you have one.</p> <p>Note</p> <p>This is disabled by default.</p> <p>This will indicate the total accumulative consumption for the current 30 minute period (e.g. if it's 12:15 then this will represent 12:00 - 12:30). You can use this to compare the data with the saving session baseline sensor to see how on track you are during a saving session.</p> <p>Info</p> <p>You can use the data_last_retrieved sensor to determine when the underlying data was last retrieved from the OE servers.</p>"},{"location":"entities/gas/","title":"Gas","text":"<p>You'll get the following entities for each gas meter with an active agreement:</p>"},{"location":"entities/gas/#current-rate","title":"Current Rate","text":"<p><code>sensor.octopus_energy_gas_{{METER_SERIAL_NUMBER}}_{{MPRN_NUMBER}}_current_rate</code></p> <p>The current rate that energy consumption is charged at (including VAT).</p> Attribute Type Description <code>mprn</code> <code>string</code> The mprn for the associated meter <code>serial_number</code> <code>string</code> The serial for the associated meter <code>is_smart_meter</code> <code>boolean</code> Determines if the meter is considered smart by Octopus Energy <code>tariff</code> <code>string</code> The tariff the meter/rates are associated with <code>start</code> <code>datetime</code> The date/time when the rate started <code>end</code> <code>datetime</code> The date/time when the rate ends <code>is_capped</code> <code>boolean</code> Indicates if the rate has been capped by a configured price cap <code>price_cap</code> <code>float</code> The price cap that has been configured for the account and is currently applied to all gas rates"},{"location":"entities/gas/#previous-rate","title":"Previous Rate","text":"<p><code>sensor.octopus_energy_gas_{{METER_SERIAL_NUMBER}}_{{MPRN_NUMBER}}_previous_rate</code></p> <p>The previous rate that energy consumption was charged at (including VAT), that differs from the current rate. If there is no previous rate (e.g. rates before now are of the same value as the current rate), then this will be reported as <code>unknown</code>/<code>none</code>.</p> Attribute Type Description <code>mprn</code> <code>string</code> The mprn for the associated meter <code>serial_number</code> <code>string</code> The serial for the associated meter <code>is_smart_meter</code> <code>boolean</code> Determines if the meter is considered smart by Octopus Energy <code>start</code> <code>datetime</code> The date/time when the rate started <code>end</code> <code>datetime</code> The date/time when the rate ended"},{"location":"entities/gas/#next-rate","title":"Next rate","text":"<p><code>sensor.octopus_energy_gas_{{METER_SERIAL_NUMBER}}_{{MPRN_NUMBER}}_next_rate</code></p> <p>The next/upcoming rate that energy consumption will be charged at (including VAT), that differs from the current rate. If there is no next rate (e.g. rates after now are of the same value as the current rate), then this will be reported as <code>unknown</code>/<code>none</code>.</p> Attribute Type Description <code>mprn</code> <code>string</code> The mprn for the associated meter <code>serial_number</code> <code>string</code> The serial for the associated meter <code>is_smart_meter</code> <code>boolean</code> Determines if the meter is considered smart by Octopus Energy <code>start</code> <code>datetime</code> The date/time when the rate starts <code>end</code> <code>datetime</code> The date/time when the rate ends"},{"location":"entities/gas/#current-day-rates","title":"Current Day Rates","text":"<p><code>event.octopus_energy_gas_{{METER_SERIAL_NUMBER}}_{{MPRN_NUMBER}}_current_day_rates</code></p> <p>The state of this sensor states when the current day's rates were last updated. The attributes of this sensor exposes the current day's rates.</p> Attribute Type Description <code>rates</code> <code>array</code> The list of rates applicable for the current day <code>tariff_code</code> <code>string</code> The tariff code associated with current day's rates <p>Each rate item has the following attributes</p> Attribute Type Description <code>start</code> <code>datetime</code> The date/time when the rate starts <code>end</code> <code>datetime</code> The date/time when the rate ends <code>value_inc_vat</code> <code>float</code> The value of the rate including VAT. This is in pounds and pence (e.g. 1.01 = \u00a31.01) <code>is_capped</code> <code>boolean</code> Indicates if the rate has been capped by a configured price cap"},{"location":"entities/gas/#previous-day-rates","title":"Previous Day Rates","text":"<p><code>event.octopus_energy_gas_{{METER_SERIAL_NUMBER}}_{{MPRN_NUMBER}}_previous_day_rates</code></p> <p>The state of this sensor states when the previous day's rates were last updated. The attributes of this sensor exposes the previous day's rates.</p> Attribute Type Description <code>rates</code> <code>array</code> The list of rates applicable for the previous day <code>tariff_code</code> <code>string</code> The tariff code associated with previous day's rates <p>Each rate item has the following attributes</p> Attribute Type Description <code>start</code> <code>datetime</code> The date/time when the rate starts <code>end</code> <code>datetime</code> The date/time when the rate ends <code>value_inc_vat</code> <code>float</code> The value of the rate including VAT. This is in pounds and pence (e.g. 1.01 = \u00a31.01) <code>is_capped</code> <code>boolean</code> Indicates if the rate has been capped by a configured price cap"},{"location":"entities/gas/#next-day-rates","title":"Next Day Rates","text":"<p><code>event.octopus_energy_gas_{{METER_SERIAL_NUMBER}}_{{MPRN_NUMBER}}_next_day_rates</code></p> <p>The state of this sensor states when the next day's rates were last updated. The attributes of this sensor exposes the next day's rates.</p> Attribute Type Description <code>rates</code> <code>array</code> The list of rates applicable for the next day <code>tariff_code</code> <code>string</code> The tariff code associated with today's rates <p>Each rate item has the following attributes</p> Attribute Type Description <code>start</code> <code>datetime</code> The date/time when the rate starts <code>end</code> <code>datetime</code> The date/time when the rate ends <code>value_inc_vat</code> <code>float</code> The value of the rate including VAT. This is in pounds and pence (e.g. 1.01 = \u00a31.01) <code>is_capped</code> <code>boolean</code> Indicates if the rate has been capped by a configured price cap"},{"location":"entities/gas/#smart-meter-entities","title":"Smart Meter Entities","text":"<p>If your account information doesn't determine you have a smart meter, then you will have the following entities in a disabled state. If you enable these entities, they might not work correctly in this scenario. </p> <p>If you are wishing to use these sensors with the Energy Dashboard, then you can follow this guide.</p> <p>By default, it's not possible to include current consumption sensors. This is due to Octopus Energy only receive data from the smart meters up to the previous day.</p>"},{"location":"entities/gas/#previous-accumulative-consumption-m3","title":"Previous Accumulative Consumption (m3)","text":"<p><code>sensor.octopus_energy_gas_{{METER_SERIAL_NUMBER}}_{{MPRN_NUMBER}}_previous_accumulative_consumption_m3</code></p> <p>The total consumption reported by the meter (not other devices e.g. Home Mini) for the previous available full day in m3. If for example data is available up to <code>01:00</code> of <code>2024-09-02</code>, then this sensor will report the cost between <code>2024-09-01T00:00:00Z</code> and <code>2024-09-02T00:00:00Z</code>.</p> <p>If your meter reports in m3, then this will be an accurate value reported by Octopus, otherwise it will be a calculated/estimated value.</p> <p>Info</p> <p>This retrieves the data reported directly by the meter which is used to calculate your bill. If you have an Octopus Home Mini (or similar), then data reported by this device will not be exposed in this sensor. This is to avoid confusion when comparing the data against your bill and to provide consistency between users with and without an Octopus Home Mini.</p> <p>Warning</p> <p>This data won't necessarily be available at the stroke of midnight. This integration has no control of this and is at the mercy of when the data is available by Octopus Energy. </p> <p>Because this sensor only looks at the last complete day, if the data takes longer than 24 hours to populate then the sensor will not update straight away. You can look at the data_last_retrieved sensor which indicates when the data was last retrieved.</p> Attribute Type Description <code>mprn</code> <code>string</code> The mprn for the associated meter <code>serial_number</code> <code>string</code> The serial for the associated meter <code>is_estimated</code> <code>boolean</code> Determines if the consumption was estimated. This can occur if your meter reports in <code>kwh</code>. <code>total_kwh</code> <code>float</code> The total energy value for the previous day in <code>kwh</code>. If your meter reports in <code>m3</code>, then this will be estimated using your set calorific value <code>total_m3</code> <code>float</code> The total energy value for the previous day in <code>m3</code>. If your meter reports in <code>kwh</code>, then this will be estimated using your set calorific value <code>charges</code> <code>array</code> Collection of consumption periods for the previous day broken down into 30 minute periods. <code>calorific_value</code> <code>float</code> The calorific value used for the calculations, as set in your account. <p>Each charge item has the following attributes</p> Attribute Type Description <code>start</code> <code>datetime</code> The date/time when the consumption starts <code>end</code> <code>datetime</code> The date/time when the consumption ends <code>consumption</code> <code>float</code> The consumption value of the specified period <p>Info</p> <p>You can use the data_last_retrieved sensor to determine when the underlying data was last retrieved from the OE servers.</p>"},{"location":"entities/gas/#previous-accumulative-consumption-kwh","title":"Previous Accumulative Consumption (kWh)","text":"<p><code>sensor.octopus_energy_gas_{{METER_SERIAL_NUMBER}}_{{MPRN_NUMBER}}_previous_accumulative_consumption_kwh</code></p> <p>The total consumption reported by the meter for the previous available full day in kwh. If for example data is available up to <code>01:00</code> of <code>2024-09-02</code>, then this sensor will report the cost between <code>2024-09-01T00:00:00Z</code> and <code>2024-09-02T00:00:00Z</code>.</p> <p>If your meter reports in kwh, then this will be an accurate value reported by Octopus, otherwise it will be a calculated/estimated value.</p> <p>Due to limitation of HA entities, the data will be updated as a single record, which means the history of the sensor will not be broken down further than once a day. If you want the cost broken down into hourly chunks, you can use the statistic entities used for the energy dashboard.</p> <p>Info</p> <p>This retrieves the data reported directly by the meter which is used to calculate your bill. If you have an Octopus Home Mini (or similar), then data reported by this device will not be exposed in this sensor. This is to avoid confusion when comparing the data against your bill and to provide consistency between users with and without an Octopus Home Mini.</p> <p>Warning</p> <p>This data won't necessarily be available at the stroke of midnight. This integration has no control of this and is at the mercy of when the data is available by Octopus Energy. </p> <p>Because this sensor only looks at the last complete day, if the data takes longer than 24 hours to populate then the sensor will not update straight away. You can look at the data_last_retrieved sensor which indicates when the data was last retrieved.</p> Attribute Type Description <code>mprn</code> <code>string</code> The mprn for the associated meter <code>serial_number</code> <code>string</code> The serial for the associated meter <code>is_estimated</code> <code>boolean</code> Determines if the consumption was estimated. This can occur if your meter reports in <code>m3</code>. <code>charges</code> <code>array</code> Collection of consumption periods for the previous day broken down into 30 minute periods. <code>calorific_value</code> <code>float</code> The calorific value used for the calculations, as set in your account. <p>Each charge item has the following attributes</p> Attribute Type Description <code>start</code> <code>datetime</code> The date/time when the consumption starts <code>end</code> <code>datetime</code> The date/time when the consumption ends <code>consumption</code> <code>float</code> The consumption value of the specified period <p>Info</p> <p>You can use the data_last_retrieved sensor to determine when the underlying data was last retrieved from the OE servers.</p>"},{"location":"entities/gas/#previous-accumulative-cost","title":"Previous Accumulative Cost","text":"<p><code>sensor.octopus_energy_gas_{{METER_SERIAL_NUMBER}}_{{MPRN_NUMBER}}_previous_accumulative_cost</code></p> <p>The total cost for the previous available full day, including the standing charge. If for example data is available up to <code>01:00</code> of <code>2024-09-02</code>, then this sensor will report the cost between <code>2024-09-01T00:00:00Z</code> and <code>2024-09-02T00:00:00Z</code>. </p> <p>Due to limitation of HA entities, the data will be updated as a single record, which means the history of the sensor will not be broken down further than once a day. If you want the cost broken down into hourly chunks, you can use the statistic entities used for the energy dashboard.</p> <p>Info</p> <p>This retrieves the data reported directly by the meter which is used to calculate your bill. If you have an Octopus Home Mini (or similar), then data reported by this device will not be exposed in this sensor. This is to avoid confusion when comparing the data against your bill and to provide consistency between users with and without an Octopus Home Mini.</p> <p>Warning</p> <p>This data won't necessarily be available at the stroke of midnight. This integration has no control of this and is at the mercy of when the data is available by Octopus Energy. </p> <p>Because this sensor only looks at the last complete day, if the data takes longer than 24 hours to populate then the sensor will not update straight away. You can look at the data_last_retrieved sensor which indicates when the data was last retrieved.</p> Attribute Type Description <code>mprn</code> <code>string</code> The mprn for the associated meter <code>serial_number</code> <code>string</code> The serial for the associated meter <code>tariff_code</code> <code>string</code> The tariff that determined the cost <code>standing_charge</code> <code>float</code> The standing charge included in the cost. This is in pounds and pence (e.g. 1.01 = \u00a31.01) <code>total_without_standing_charge</code> <code>float</code> The total cost of the previous day excluding the standing charge. This is in pounds and pence (e.g. 1.01 = \u00a31.01) <code>total</code> <code>float</code> The total cost for the previous day. This is in pounds and pence (e.g. 1.01 = \u00a31.01) <code>charges</code> <code>array</code> Collection of consumption periods and costs for the previous day broken down into 30 minute periods. <code>calorific_value</code> <code>float</code> The calorific value used for the calculations, as set in your account. <p>Each charge item has the following attributes</p> Attribute Type Description <code>start</code> <code>datetime</code> The date/time when the consumption starts <code>end</code> <code>datetime</code> The date/time when the consumption ends <code>rate</code> <code>float</code> The rate the consumption is charged at. This is in pounds and pence (e.g. 1.01 = \u00a31.01) <code>consumption</code> <code>float</code> The consumption value of the specified period <code>cost</code> <code>float</code> The cost of the consumption at the specified rate. This is in pounds and pence (e.g. 1.01 = \u00a31.01) <p>Info</p> <p>You can use the data_last_retrieved sensor to determine when the underlying data was last retrieved from the OE servers.</p>"},{"location":"entities/gas/#previous-consumption-day-rates","title":"Previous Consumption Day Rates","text":"<p><code>event.octopus_energy_gas_{{METER_SERIAL_NUMBER}}_{{MPRN_NUMBER}}_previous_consumption_rates</code></p> <p>The state of this sensor states when the previous consumption's rates were last updated. This is typically the same as the previous available full day's rates, but could differ depending on available data. The attributes of this sensor exposes the previous consumption's rates. </p> <p>Note</p> <p>This is disabled by default.</p> Attribute Type Description <code>rates</code> <code>array</code> The list of rates applicable for the previous consumption <code>tariff_code</code> <code>string</code> The tariff code associated with previous consumption's rates <p>Each rate item has the following attributes</p> Attribute Type Description <code>start</code> <code>datetime</code> The date/time when the rate starts <code>end</code> <code>datetime</code> The date/time when the rate ends <code>value_inc_vat</code> <code>float</code> The value of the rate including VAT. This is in pounds and pence (e.g. 1.01 = \u00a31.01) <code>is_capped</code> <code>boolean</code> Indicates if the rate has been capped by a configured price cap"},{"location":"entities/gas/#home-minipro-entities","title":"Home Mini/Pro Entities","text":""},{"location":"entities/gas/#current-consumption","title":"Current Consumption","text":"<p><code>sensor.octopus_energy_gas_{{METER_SERIAL_NUMBER}}_{{MPRN_NUMBER}}_current_consumption</code></p> <p>Warning</p> <p>This will only be available if you have specified you have an Octopus Home Mini. Do not set unless you have one.</p> <p>Note</p> <p>This is disabled by default.</p> <p>The delta of the accumulative gas consumption since the last update (e.g. if the previous accumulative consumption update reported 1kWh and the current accumulative consumption update reported 1.1kWh, then this sensor will report 0.1kWh). The time period the data for this sensor represents will depend on the frequency the underlying data is retrieved. If the data takes longer to refresh, then the time period of this sensor will be extended.</p> <p>This is a legacy sensor which was been built to see the accumulation within the energy dashboard. This may be removed in the future.</p> <p>It has been noticed that daily consumption reported in Home Assistant can differ to when looking at past data within Octopus Energy. It looks like this is because Octopus Energy will favour \"official\" data from your smart meter over the data they collect.</p> <p>If current consumption data is unable to be retrieved, then the integration will attempt to retrieve missing data. This will be done for the current day only. This is due to it sharing the same data for the accumulation sensors and will not be changed. </p> Attribute Type Description <code>mprn</code> <code>string</code> The mprn for the associated meter <code>serial_number</code> <code>string</code> The serial for the associated meter"},{"location":"entities/gas/#current-accumulative-consumption-m3","title":"Current Accumulative Consumption (m3)","text":"<p><code>sensor.octopus_energy_gas_{{METER_SERIAL_NUMBER}}_{{MPRN_NUMBER}}_current_accumulative_consumption_m3</code></p> <p>Warning</p> <p>This will only be available if you have specified you have an Octopus Home Mini. Do not set unless you have one.</p> <p>The total consumption reported by the meter for the current day in m3. This is calculated/estimated using your set calorific value from the kWh data reported by Octopus Energy.</p> Attribute Type Description <code>mprn</code> <code>string</code> The mprn for the associated meter <code>serial_number</code> <code>string</code> The serial for the associated meter <code>charges</code> <code>array</code> Collection of consumption periods for the current day broken down into 30 minute periods. <code>calorific_value</code> <code>float</code> The calorific value used for the calculations, as set in your account. <p>Each charge item has the following attributes</p> Attribute Type Description <code>start</code> <code>datetime</code> The date/time when the consumption starts <code>end</code> <code>datetime</code> The date/time when the consumption ends <code>consumption</code> <code>float</code> The consumption value of the specified period <p>Info</p> <p>You can use the data_last_retrieved sensor to determine when the underlying data was last retrieved from the OE servers.</p>"},{"location":"entities/gas/#current-accumulative-consumption-kwh","title":"Current Accumulative Consumption (kWh)","text":"<p><code>sensor.octopus_energy_gas_{{METER_SERIAL_NUMBER}}_{{MPRN_NUMBER}}_current_accumulative_consumption_kwh</code></p> <p>Warning</p> <p>This will only be available if you have specified you have an Octopus Home Mini. Do not set unless you have one.</p> <p>The total consumption reported by the meter for the current day in kWh. This is natively reported by Octopus Energy.</p> Attribute Type Description <code>mprn</code> <code>string</code> The mprn for the associated meter <code>serial_number</code> <code>string</code> The serial for the associated meter <code>charges</code> <code>array</code> Collection of consumption periods for the current day broken down into 30 minute periods. <code>calorific_value</code> <code>float</code> The calorific value used for the calculations, as set in your account. <p>Each charge item has the following attributes</p> Attribute Type Description <code>start</code> <code>datetime</code> The date/time when the consumption starts <code>end</code> <code>datetime</code> The date/time when the consumption ends <code>consumption</code> <code>float</code> The consumption value of the specified period <p>Info</p> <p>You can use the data_last_retrieved sensor to determine when the underlying data was last retrieved from the OE servers.</p>"},{"location":"entities/gas/#current-total-consumption-m3","title":"Current Total Consumption (m3)","text":"<p><code>sensor.octopus_energy_gas_{{METER_SERIAL_NUMBER}}_{{MPRN_NUMBER}}_current_total_consumption_m3</code></p> <p>Warning</p> <p>This will only be available if you have specified you have an Octopus Home Mini or have configured an Octopus Home Pro. Do not set unless you have one.</p> <p>The total consumption reported by the meter for for all time in m3. This is calculated/estimated using your set calorific value from the kWh data reported by Octopus Energy. This will try and update every minute for Home Mini and every 10 seconds for Home Pro.</p> <p>Warning</p> <p>Because this is calculated from your set calorific value across the lifetime of your meter, the value will not be 100% accurate due to calorific values changing over time which cannot be captured.</p> Attribute Type Description <code>mprn</code> <code>string</code> The mprn for the associated meter <code>serial_number</code> <code>string</code> The serial for the associated meter <code>calorific_value</code> <code>float</code> The calorific value used for the calculations, as set in your account. <p>Info</p> <p>You can use the Home Mini data_last_retrieved sensor or Home Mini data_last_retrieved sensor to determine when the underlying data was last retrieved from the OE servers.</p>"},{"location":"entities/gas/#current-total-consumption-kwh","title":"Current Total Consumption (kWh)","text":"<p><code>sensor.octopus_energy_gas_{{METER_SERIAL_NUMBER}}_{{MPRN_NUMBER}}_current_total_consumption_kwh</code></p> <p>Warning</p> <p>This will only be available if you have specified you have an Octopus Home Mini or have configured an Octopus Home Pro. Do not set unless you have one.</p> <p>The total consumption reported by the meter for for all time in kWh. This is natively reported by Octopus Energy. This will try and update every minute for Home Mini and every 10 seconds for Home Pro.</p> Attribute Type Description <code>mprn</code> <code>string</code> The mprn for the associated meter <code>serial_number</code> <code>string</code> The serial for the associated meter <code>calorific_value</code> <code>float</code> The calorific value used for the calculations, as set in your account. <p>Info</p> <p>You can use the Home Mini data_last_retrieved sensor or Home Mini data_last_retrieved sensor to determine when the underlying data was last retrieved from the OE servers.</p>"},{"location":"entities/gas/#current-accumulative-cost","title":"Current Accumulative Cost","text":"<p><code>sensor.octopus_energy_gas_{{METER_SERIAL_NUMBER}}_{{MPRN_NUMBER}}_current_accumulative_cost</code></p> <p>Warning</p> <p>This will only be available if you have specified you have an Octopus Home Mini. Do not set unless you have one.</p> <p>The total cost for the current day, including the standing charge.</p> Attribute Type Description <code>mprn</code> <code>string</code> The mprn for the associated meter <code>serial_number</code> <code>string</code> The serial for the associated meter <code>tariff_code</code> <code>string</code> The tariff that determined the cost <code>standing_charge</code> <code>float</code> The standing charge included in the cost. This is in pounds and pence (e.g. 1.01 = \u00a31.01) <code>total_without_standing_charge</code> <code>float</code> The total cost of the current day excluding the standing charge. This is in pounds and pence (e.g. 1.01 = \u00a31.01) <code>total</code> <code>float</code> The total cost for the current day. This is in pounds and pence (e.g. 1.01 = \u00a31.01) <code>charges</code> <code>array</code> Collection of consumption periods and costs for the current day broken down into 30 minute periods. <p>Each charge item has the following attributes</p> Attribute Type Description <code>start</code> <code>datetime</code> The date/time when the consumption starts <code>end</code> <code>datetime</code> The date/time when the consumption ends <code>rate</code> <code>float</code> The rate the consumption is charged at. This is in pounds and pence (e.g. 1.01 = \u00a31.01) <code>consumption</code> <code>float</code> The consumption value of the specified period <code>cost</code> <code>float</code> The cost of the consumption at the specified rate. This is in pounds and pence (e.g. 1.01 = \u00a31.01)"},{"location":"entities/greenness_forecast/","title":"Greenness Forecast","text":"<p>To support the greenness forecast supported by Octopus Energy, the following entities are provided.</p>"},{"location":"entities/greenness_forecast/#current-index","title":"Current Index","text":"<p><code>sensor.octopus_energy_{{ACCOUNT_ID}}_greenness_forecast_current_index</code></p> <p>The greenness index for the current period.</p> <p>Note</p> <p>This is disabled by default. </p> <p>Info</p> <p>If you are wanting a nice way to display the upcoming forecast, then why not try a community card?</p> Attribute Type Description <code>start</code> <code>datetime</code> The time the current forecast period started <code>end</code> <code>datetime</code> The time the current forecast period ends <code>greenness_index</code> <code>int</code> The index for the current forecast <code>greenness_score</code> <code>string</code> The score associated by Octopus Energy for the current forecast <code>is_highlighted</code> <code>bool</code> Determines if the current forecast has been highlighted by Octopus Energy <code>next_start</code> <code>datetime</code> The time the next forecast period starts <code>next_end</code> <code>datetime</code> The time the next forecast period ends <code>forecast</code> <code>array</code> The entire upcoming forecast <p>For each forecast item, the following attributes are provided</p> Attribute Type Description <code>start</code> <code>datetime</code> The time the current forecast period started <code>end</code> <code>datetime</code> The time the current forecast period ends <code>greenness_index</code> <code>int</code> The index for the current forecast <code>greenness_score</code> <code>string</code> The score associated by Octopus Energy for the current forecast <code>is_highlighted</code> <code>bool</code> Determines if the current forecast has been highlighted by Octopus Energy <p>Info</p> <p>You can use the data_last_retrieved sensor to determine when the underlying data was last retrieved from the OE servers.</p>"},{"location":"entities/greenness_forecast/#next-index","title":"Next Index","text":"<p><code>sensor.octopus_energy_{{ACCOUNT_ID}}_greenness_forecast_next_index</code></p> <p>The greenness index for the next period.</p> <p>Note</p> <p>This is disabled by default. </p> Attribute Type Description <code>start</code> <code>datetime</code> The time the next forecast period started <code>end</code> <code>datetime</code> The time the next forecast period ends <code>greenness_index</code> <code>int</code> The index for the next forecast <code>greenness_score</code> <code>string</code> The score associated by Octopus Energy for the next forecast <code>is_highlighted</code> <code>bool</code> Determines if the next forecast has been highlighted by Octopus Energy <p>Info</p> <p>You can use the data_last_retrieved sensor to determine when the underlying data was last retrieved from the OE servers.</p>"},{"location":"entities/greenness_forecast/#highlighted","title":"Highlighted","text":"<p><code>binary_sensor.octopus_energy_{{ACCOUNT_ID}}_greenness_forecast_highlighted</code></p> <p>Determines if the current greenness forecast has been highlighted by OE as the greenest for the current forecast.</p> <p>Note</p> <p>This is disabled by default. </p> Attribute Type Description <code>current</code> <code>object</code> The details of the currently highlighted forecast <code>next_start</code> <code>datetime</code> The time the next highlighted forecast period starts <code>next_end</code> <code>datetime</code> The time the next highlighted forecast period ends <p>For <code>current</code>, the following attributes are provided</p> Attribute Type Description <code>start</code> <code>datetime</code> The time the current forecast period started <code>end</code> <code>datetime</code> The time the current forecast period ends <code>greenness_index</code> <code>int</code> The index for the current forecast <code>greenness_score</code> <code>string</code> The score associated by Octopus Energy for the current forecast <code>is_highlighted</code> <code>bool</code> Determines if the current forecast has been highlighted by Octopus Energy <p>Info</p> <p>You can use the data_last_retrieved sensor to determine when the underlying data was last retrieved from the OE servers.</p>"},{"location":"entities/heat_pump/","title":"Heat Pump","text":"<p>The following entities are available if you have a heat pump registered against your account. The following heat pumps are known to be compatible</p> <ul> <li>Cosy 6</li> <li>Cosy 9</li> </ul>"},{"location":"entities/heat_pump/#humidity-sensor","title":"Humidity Sensor","text":"<p><code>sensor.octopus_energy_heat_pump_{{HEAT_PUMP_ID}}_{{SENSOR_CODE}}_humidity</code></p> <p>This represents the humidity reported by a sensor (e.g. Cosy Pod) that is associated with a heat pump.</p>"},{"location":"entities/heat_pump/#temperature-sensor","title":"Temperature Sensor","text":"<p><code>sensor.octopus_energy_heat_pump_{{HEAT_PUMP_ID}}_{{SENSOR_CODE}}_temperature</code></p> <p>This represents the temperature reported by a sensor (e.g. Cosy Pod) that is associated with a heat pump.</p> <p>Warning</p> <p>There are reports that some of these sensors can report negative values in certain installations. Unfortunately, there doesn't appear to be anything in the API that determines when these sensors are or are not applicable. In these situations, you'll need to manually disable or ignore them.</p>"},{"location":"entities/heat_pump/#zone","title":"Zone","text":"<p><code>climate.octopus_energy_heat_pump_{{HEAT_PUMP_ID}}_{{ZONE_CODE}}</code></p> <p>This can be used to control the target temperature and mode for a given zone (e.g. zone 1) linked to your heat pump. It will also display the current temperature linked to the primary sensor for the zone.</p> <p>The following operation modes/states are available</p> <ul> <li><code>Heat</code> - This represents as <code>on</code> in the app</li> <li><code>Off</code> - This represents as <code>off</code> in the app</li> <li><code>Auto</code> - This represents as <code>auto</code> in the app</li> </ul> <p>In addition, there is the preset of <code>boost</code>. When <code>boost</code> is selected, this activates boost mode for the zone for 1 hour. If a target temperature is not set, then this will default to 50 degrees c. If you require boost to be on for a different amount of time or with a different target temperature, then you can use the available service.</p>"},{"location":"entities/heat_pump/#water-heater","title":"Water Heater","text":"<p><code>water_heater.octopus_energy_heat_pump_{{HEAT_PUMP_ID}}</code></p> <p>This can be used to control the target temperature and mode for a given water heater linked to your heat pump. It will also display the current temperature linked to the primary sensor for the zone.</p> <p>The following operation modes/states are available</p> <ul> <li><code>electric</code> - This represents as <code>on</code> in the app</li> <li><code>off</code> - This represents as <code>off</code> in the app</li> <li><code>heat_pump</code> - This represents as <code>auto</code> in the app</li> <li><code>high_demand</code> - This represents as <code>boost</code> in the app</li> </ul> <p>Note</p> <p>While these states look odd, unfortunately Home Assistant doesn't allow these operation modes to differ from those defined by Home Assistant.</p> <p>When <code>boost</code> is selected, this activates boost mode for the zone for 1 hour. If a target temperature is not set, then this will default to 50 degrees c. If you require boost to be on for a different amount of time or with a different target temperature, then you can use the available service.</p> <p>Note</p> <p>If you boost and a target temperature is not defined, then a default value will be set. This will be 50 degrees C for <code>water</code> zones and 30 degrees C for all other zones.</p>"},{"location":"entities/heat_pump/#lifetime-seasonal-coefficient-of-performance","title":"Lifetime Seasonal Coefficient of Performance","text":"<p><code>sensor.octopus_energy_heat_pump_{{HEAT_PUMP_ID}}_lifetime_scop</code></p> <p>This represents the efficiency by the heat pump since commissioning or last reset.</p>"},{"location":"entities/heat_pump/#lifetime-energy-input","title":"Lifetime Energy Input","text":"<p><code>sensor.octopus_energy_heat_pump_{{HEAT_PUMP_ID}}_lifetime_energy_input</code></p> <p>This represents the energy/power drawn by the heat pump since commissioning or last reset in kWh.</p>"},{"location":"entities/heat_pump/#lifetime-heat-output","title":"Lifetime Heat Output","text":"<p><code>sensor.octopus_energy_heat_pump_{{HEAT_PUMP_ID}}_lifetime_heat_output</code></p> <p>This represents the energy/heat supplied by the heat pump since commissioning or last reset in kWh.</p>"},{"location":"entities/heat_pump/#live-coefficient-of-performance","title":"Live Coefficient of Performance","text":"<p><code>sensor.octopus_energy_heat_pump_{{HEAT_PUMP_ID}}_live_cop</code></p> <p>This represents the instantaneous efficiency of the heat pump.</p> <p>Note</p> <p>As this integration uses cloud polling this will inherently have a delay.</p> <p>Info</p> <p>This sensor will report zero when the heat pump is not reporting input power, otherwise the reported COP can be inaccurate.</p>"},{"location":"entities/heat_pump/#live-power-input","title":"Live Power Input","text":"<p><code>sensor.octopus_energy_heat_pump_{{HEAT_PUMP_ID}}_live_power_input</code></p> <p>This represents the instantaneous energy/power being drawn by the heat pump in kWh. </p> <p>Note</p> <p>As this integration uses cloud polling this will inherently have a delay.</p>"},{"location":"entities/heat_pump/#live-heat-output","title":"Live Heat Output","text":"<p><code>sensor.octopus_energy_heat_pump_{{HEAT_PUMP_ID}}_live_heat_output</code></p> <p>This represents the instantaneous energy/heat being supplied by heat pump in kWh. </p> <p>Note</p> <p>As the integration uses cloud polling this will inherently have a delay.</p>"},{"location":"entities/heat_pump/#live-outdoor-temp","title":"Live Outdoor Temp","text":"<p><code>sensor.octopus_energy_heat_pump_{{HEAT_PUMP_ID}}_live_outdoor_temperature</code></p> <p>This represents the current outdoor temperature as observed by the heat pump. </p> <p>Note</p> <p>As the integration uses cloud polling this will inherently have a delay.</p>"},{"location":"entities/heat_pump/#fixed-target-flow-temperature","title":"Fixed Target Flow Temperature","text":"<p><code>sensor.octopus_energy_heat_pump_{{HEAT_PUMP_ID}}_fixed_target_flow_temperature</code></p> <p>This represents the configured fixed target flow temperature for the heat pump, which is used in fixed mode only.</p> <p>Note</p> <p>This is not the actual current flow temperature, but rather the configured target.</p> <p>Info</p> <p>Use the set_heat_pump_flow_temp_config service to configure this sensor. Upon updated, it may take a few minutes to update.</p>"},{"location":"entities/heat_pump/#weather-compensation-enabled","title":"Weather Compensation Enabled","text":"<p><code>binary_sensor.octopus_energy_heat_pump_{{HEAT_PUMP_ID}}_weather_compensation_enabled</code></p> <p>This determines if weather compensation is enabled.</p> <p>Info</p> <p>Use the set_heat_pump_flow_temp_config service to configure this sensor. Upon updated, it may take a few minutes to update.</p>"},{"location":"entities/heat_pump/#weather-compensation-minimum-temperature","title":"Weather Compensation Minimum Temperature","text":"<p><code>sensor.octopus_energy_heat_pump_{{HEAT_PUMP_ID}}_weather_compensation_minimum_temperature</code></p> <p>This determines the configured minimum temperature for weather compensation, if enabled.</p> <p>Info</p> <p>Use the set_heat_pump_flow_temp_config service to configure this sensor. Upon updated, it may take a few minutes to update.</p>"},{"location":"entities/heat_pump/#weather-compensation-maximum-temperature","title":"Weather Compensation Maximum Temperature","text":"<p><code>sensor.octopus_energy_heat_pump_{{HEAT_PUMP_ID}}_weather_compensation_maximum_temperature</code></p> <p>This determines the configured maximum temperature for weather compensation, if enabled.</p> <p>Info</p> <p>Use the set_heat_pump_flow_temp_config service to configure this sensor. Upon updated, it may take a few minutes to update.</p>"},{"location":"entities/heat_pump/#services","title":"Services","text":"<p>There are some services available relating to these entities that you might find useful. They can be found in the services docs.</p>"},{"location":"entities/home_pro/","title":"Home Pro","text":"<p>Entities to support the Home Pro device.</p> <p>Once configured, the following entities will retrieve data locally from your Octopus Home Pro instead of via the Octopus Energy APIs at a target rate of every 10 seconds.</p> <ul> <li>Electricity - Current Demand</li> <li>Electricity - Current Total Consumption</li> <li>Gas - Current Total Consumption kWh</li> <li>Gas - Current Total Consumption m3</li> </ul>"},{"location":"entities/home_pro/#home-pro-screen","title":"Home Pro Screen","text":"<p><code>text.octopus_energy_{{ACCOUNT_ID}}_home_pro_screen</code></p> <p>Info</p> <p>This is only available if you have setup the Custom API.</p> <p>Allows you to set scrolling text on the home pro device. If the text is greater than 3 characters, then it will scroll on the device, otherwise it will be statically displayed.</p>"},{"location":"entities/intelligent/","title":"Intelligent","text":"<p>If you are on the intelligent tariff, then you'll get the following entities.</p> <p>Warning</p> <p>If you switch to the intelligent tariff after you have installed the integration, you will need to reload the integration or restart your Home Assistant instance. You will also need to do this if you re-onboard.</p>"},{"location":"entities/intelligent/#is-dispatching","title":"Is Dispatching","text":"<p><code>binary_sensor.octopus_energy_{{DEVICE_ID}}_intelligent_dispatching</code></p> <p>This sensor is used to determine if you're within a dispatching period (i.e. \"smart-charge\" determined by Octopus Energy) for a single intelligent device. This sensor will not come on during a bump charge.</p> <p>Depending on your account configuration, what is determined as an active dispatching period will change. If you have configured to accept planned or started dispatches, then the sensor will turn on when you're are within an active planned or started dispatch period. If you have configured to accept only started dispatches, then the sensor will turn on when you're are within an active started dispatch period, but not planned dispatch.</p> <p>Info</p> <p>This sensor will only turn on during dispatches for a single intelligent device. If you're after a sensor that turns on during the standard off peak rates as well or cover multiple intelligent devices then you're best to use the off peak sensor.</p> <p>Warning</p> <p>If you are using this to drive other automations for cheap rates (e.g. to fill batteries), you should perform additional checks to make sure your vehicle is actually charging. If it isn't, this sensor could be incorrectly on if during a dispatch outside of the standard off peak period and you will therefore not receive the off peak rate.</p> <p>If you are wanting to know when you are within a guaranteed off peak period, you should use the off peak sensor.</p> <p>Warning</p> <p>This sensor is only partially supported for the following intelligent providers</p> <ul> <li>OHME</li> </ul> <p>If you are supplied by one of the above providers, this sensor will never turn on. </p> Attribute Type Description <code>planned_dispatches</code> <code>array</code> An array of the dispatches that are currently planned by Octopus Energy. <code>completed_dispatches</code> <code>array</code> An array of the dispatches that have been completed by Octopus Energy. This will only store up to the last 3 days worth of completed dispatches. This includes dispatches that were scheduled by OE and boost dispatches issued by the user. OE do not provide details on what triggered the completed dispatches. <code>started_dispatches</code> <code>array</code> An array of the dispatches that have been planned by Octopus Energy and started. See the FAQ for how this is calculated and why it exists. <code>provider</code> <code>string</code> The provider of the intelligent features <code>vehicle_battery_size_in_kwh</code> <code>float</code> The size of the target vehicle battery in kWh. <code>charge_point_power_in_kw</code> <code>float</code> The power of the charge point battery in kW. <code>current_start</code> <code>datetime</code> The date/time when the dispatching or off peak rate started <code>current_end</code> <code>datetime</code> The date/time when the dispatching or off peak rate ends <code>next_start</code> <code>datetime</code> The date/time when the next dispatching or off peak rate starts <code>next_end</code> <code>datetime</code> The date/time when the next dispatching or off peak rate ends <code>manually_refresh_dispatches</code> <code>boolean</code> Determines if manual dispatching has been enabled in the integration config <p>Each item in <code>planned_dispatch</code> have the following attributes</p> Attribute Type Description <code>start</code> <code>datetime</code> The start date/time of the dispatch <code>end</code> <code>datetime</code> The end date/time of the dispatch <code>source</code> <code>string</code> Determines what has caused the dispatch to be generated. Will be <code>SMART</code>, <code>BOOST</code>, <code>TEST</code> or None. <p>Each item in <code>completed_dispatches</code> have the following attributes</p> Attribute Type Description <code>start</code> <code>datetime</code> The start date/time of the dispatch <code>end</code> <code>datetime</code> The end date/time of the dispatch <code>charge_in_kwh</code> <code>float</code> The amount to be charged within the dispatch period. <code>source</code> <code>string</code> Determines what has caused the dispatch to be generated. Will be <code>smart-charge</code>, <code>bump-charge</code> or None. <code>location</code> <code>string</code> The location of the smart charge <p>Each item in <code>started_dispatch</code> have the following attributes</p> Attribute Type Description <code>start</code> <code>datetime</code> The start date/time of the dispatch <code>end</code> <code>datetime</code> The end date/time of the dispatch <p>Info</p> <p>You can use the data_last_retrieved sensor to determine when the underlying data was last retrieved from the OE servers.</p>"},{"location":"entities/intelligent/#current-state","title":"Current State","text":"<p><code>sensor.octopus_energy_{{DEVICE_ID}}_intelligent_state</code></p> <p>This sensor displays the current state of your intelligent provider as told by the OE API for a single intelligent device. The value of this sensor can be one of the following</p> <ul> <li><code>AUTHENTICATION_PENDING</code> - ready to start authentication and authorization, or auth is in progress.</li> <li><code>AUTHENTICATION_FAILED</code> - failed to connect and ready to restart authentication and authorization.</li> <li><code>AUTHENTICATION_COMPLETE</code>- ready to start test (if needed) or pending live where auth or telemetry is delayed.</li> <li><code>TEST_CHARGE_IN_PROGRESS</code> - connection and smart control test has successfully started and is occurring.</li> <li><code>TEST_CHARGE_FAILED</code> - connection or smart control test has failed or could not start, ready to retry test.</li> <li><code>TEST_CHARGE_NOT_AVAILABLE</code> - not currently capable of smart control test (e.g. away from home or unplugged).</li> <li><code>SETUP_COMPLETE</code> - test is complete (if needed) and device is live, but not ready for smart control.</li> <li><code>SMART_CONTROL_CAPABLE</code> - live and ready for smart control (e.g. at home and plugged in) but none is scheduled.</li> <li><code>SMART_CONTROL_IN_PROGRESS</code> - smart control (e.g. smart charging) is scheduled or is currently occurring.</li> <li><code>BOOSTING</code> - user has overridden the schedule to immediately boost (e.g. bump charge now).</li> <li><code>SMART_CONTROL_OFF</code> - smart control has been (temporarily) disabled (e.g. by the user with holiday mode).</li> <li><code>SMART_CONTROL_NOT_AVAILABLE</code> - not currently capable of smart control (e.g. away from home or unplugged).</li> <li><code>LOST_CONNECTION</code> - lost connection to the device, ready to re-auth (if not temporary / automatic fix).</li> <li><code>RETIRED</code> - / de-authed (re-auth not possible, re-register device to onboard again).</li> </ul>"},{"location":"entities/intelligent/#bump-charge","title":"Bump Charge","text":"<p><code>switch.octopus_energy_{{DEVICE_ID}}_intelligent_bump_charge</code></p> <p>This sensor is used to turn on/off bump (\"on-demand\") charging for a single intelligent device.</p> <p>Info</p> <p>This entity is not available for the following intelligent providers</p> <ul> <li>OHME</li> </ul> <p>Info</p> <p>You can use the data_last_retrieved sensor to determine when the underlying data was last retrieved from the OE servers.</p>"},{"location":"entities/intelligent/#smart-charge","title":"Smart Charge","text":"<p><code>switch.octopus_energy_{{DEVICE_ID}}_intelligent_smart_charge</code></p> <p>This sensor is used to turn on/off intelligent smart charging for a single intelligent device.</p> <p>Info</p> <p>This entity is not available for the following intelligent providers</p> <ul> <li>OHME</li> </ul> <p>Info</p> <p>You can use the data_last_retrieved sensor to determine when the underlying data was last retrieved from the OE servers.</p>"},{"location":"entities/intelligent/#charge-target","title":"Charge Target","text":"<p><code>number.octopus_energy_{{DEVICE_ID}}_intelligent_charge_target</code></p> <p>This sensor is used to see and set the charge target for your future intelligent charges for a single intelligent device.</p> <p>Info</p> <p>This entity is not available for the following intelligent providers</p> <ul> <li>OHME</li> </ul> <p>Info</p> <p>You can use the data_last_retrieved sensor to determine when the underlying data was last retrieved from the OE servers.</p>"},{"location":"entities/intelligent/#target-time-select","title":"Target Time (Select)","text":"<p><code>select.octopus_energy_{{DEVICE_ID}}_intelligent_target_time</code></p> <p>This sensor is used to see and set the target time for your future intelligent charges for a single intelligent device. </p> <p>This is limited to 30 minute increments between 4 and 11 to match the Octopus Energy app. This is useful if you use the app or have non-technical people interacting with the integration.</p> <p>Info</p> <p>This entity is not available for the following intelligent providers</p> <ul> <li>OHME</li> </ul> <p>Info</p> <p>You can use the data_last_retrieved sensor to determine when the underlying data was last retrieved from the OE servers.</p> Attribute Type Description <code>raw_value</code> <code>time</code> The raw target time. This is useful if the time is set to a value outside of the range available in the select options (e.g. from another integration)"},{"location":"entities/intelligent/#target-time-time","title":"Target Time (Time)","text":"<p><code>time.octopus_energy_{{DEVICE_ID}}_intelligent_target_time</code></p> <p>This sensor is used to see and set the target time for your future intelligent charges for a single intelligent device. </p> <p>This gives you finer control over the times (still within valid time periods), but may have unintended consequences with other apps (e.g. the Octopus Energy app) that use the data.</p> <p>Info</p> <p>This entity is not available for the following intelligent providers</p> <ul> <li>OHME</li> </ul> <p>Info</p> <p>You can use the data_last_retrieved sensor to determine when the underlying data was last retrieved from the OE servers.</p> <p>Note</p> <p>This is disabled by default. If enabled, it is advised to disable the select based sensor as the two can get out of sync. </p>"},{"location":"entities/intelligent/#migrating-from-megakidha_octopus_intelligent","title":"Migrating from megakid/ha_octopus_intelligent?","text":"<p>If you're moving to this integration from megakid/ha_octopus_intelligent, below is a quick guide on what entities you should use</p> <ul> <li><code>binary_sensor.octopus_intelligent_slot</code> - Use the off peak sensor</li> <li><code>binary_sensor.octopus_intelligent_planned_dispatch_slot</code> - There is no alternative for this.</li> <li><code>binary_sensor.octopus_intelligent_slot_next_1_hour</code>, <code>binary_sensor.octopus_intelligent_slot_next_2_hours</code> and <code>binary_sensor.octopus_intelligent_slot_next_3_hours</code> - These sensors felt like they would always fall short of peoples requirements as everyone has different time periods they wish to know about. The off peak sensor exposes the current and next start/end times which could be used in a template sensor to determine how long the rate is cheap for when on. Or the target rate or rolling target rate might help for what you need.</li> <li><code>sensor.octopus_intelligent_next_offpeak_start</code> - The default off peak start date/time can be found as an attribute on the off peak sensor. This can be extracted using a template sensor.</li> <li><code>sensor.octopus_intelligent_offpeak_end</code> - The default off peak end date/time can be found as an attribute on the off peak sensor. This can be extracted using a template sensor.</li> <li><code>switch.octopus_intelligent_bump_charge</code> - Use the bump charge sensor</li> <li><code>switch.octopus_intelligent_smart_charging</code> - Use the smart charge sensor</li> <li><code>select.octopus_intelligent_target_time</code> - Use the target time (time) sensor or target time (select) sensor</li> <li><code>select.octopus_intelligent_target_soc</code> - Use the charge target sensor</li> </ul>"},{"location":"entities/octoplus/","title":"Octoplus","text":"<p>To support Octopus Energy's octoplus programme, the following entities are available</p>"},{"location":"entities/octoplus/#octoplus-points","title":"Octoplus Points","text":"<p><code>sensor.octopus_energy_{{ACCOUNT_ID}}_octoplus_points</code></p> <p>Determines the current Octoplus points balance. This sensor will only be available if you have enrolled on the octoplus programme. </p> <p>Note</p> <p>This will only be available if you have enrolled into Octoplus. Once enrolled, reload the integration to gain access to this sensor.</p> Attribute Type Description <code>redeemable_points</code> <code>integer</code> The number of points that can be redeemed into account credit <code>data_last_retrieved</code> <code>datetime</code> The date/time the underlying data was last retrieved from Octopus Energy APIs"},{"location":"entities/octoplus/#saving-sessions","title":"Saving Sessions","text":"<p>Warning</p> <p>This sensor has been deprecated in favour of Saving Session Calendar and will be removed around May 2026</p> <p><code>binary_sensor.octopus_energy_{{ACCOUNT_ID}}_octoplus_saving_sessions</code></p> <p>Binary sensor to indicate if a saving session that the account has joined is active.</p> Attribute Type Description <code>current_joined_event_start</code> <code>datetime</code> The datetime the current saving session started <code>current_joined_event_end</code> <code>datetime</code> The datetime the current saving session will end <code>current_joined_event_duration_in_minutes</code> <code>float</code> The duration in minutes of the current saving session <code>next_joined_event_start</code> <code>datetime</code> The datetime the next saving session will start <code>next_joined_event_end</code> <code>datetime</code> The datetime the next saving session will end <code>next_joined_event_duration_in_minutes</code> <code>float</code> The duration in minutes of the next saving session <p>Info</p> <p>You can use the data_last_retrieved sensor to determine when the underlying data was last retrieved from the OE servers.</p>"},{"location":"entities/octoplus/#saving-sessions-calendar","title":"Saving Sessions Calendar","text":"<p><code>calendar.octopus_energy_{{ACCOUNT_ID}}_octoplus_saving_sessions</code></p> <p>Calendar sensor to record saving sessions. Will be <code>on</code> when a saving session that the account has joined is active. Standard calendar attributes will indicate the current/next saving session.</p> <p>Info</p> <p>You can use the data_last_retrieved sensor to determine when the underlying data was last retrieved from the OE servers.</p> <p>Note</p> <p>The events are supplied by OE API and does not store past events indefinitely. Past events could be removed without notice.</p>"},{"location":"entities/octoplus/#saving-session-events","title":"Saving Session Events","text":"<p><code>event.octopus_energy_{{ACCOUNT_ID}}_octoplus_saving_session_events</code></p> <p>The state of this sensor states when the saving session events were last updated. The attributes of this sensor exposes the joined and available saving sessions.</p> <p>Note</p> <p>This will only be available if you have enrolled into Octoplus. Once enrolled, reload the integration to gain access to this sensor.</p> Attribute Type Description <code>available_events</code> <code>array</code> The collection of saving session events that you haven't joined <code>joined_events</code> <code>array</code> The collection of saving session events that you have joined. This will include upcoming and past events <p>Each available event item will include the following attributes</p> Attribute Type Description <code>id</code> <code>integer</code> The id of the event <code>code</code> <code>string</code> The event code of the event. This will be required to join via the join service <code>start</code> <code>datetime</code> The date/time the event starts <code>end</code> <code>datetime</code> The date/time the event starts <code>duration_in_minutes</code> <code>integer</code> The duration of the event in minutes <code>octopoints_per_kwh</code> <code>integer</code> The number of octopoints that are awarded per kwh saved during the event <p>Each joined event item will include the following attributes</p> Attribute Type Description <code>id</code> <code>integer</code> The id of the event <code>start</code> <code>datetime</code> The date/time the event starts <code>end</code> <code>datetime</code> The date/time the event starts <code>duration_in_minutes</code> <code>integer</code> The duration of the event in minutes <code>rewarded_octopoints</code> <code>integer</code> The total number of octopoints that were awarded (if any or known) <code>octopoints_per_kwh</code> <code>integer</code> The number of octopoints that are/were awarded per kwh saved during the event (if known)"},{"location":"entities/octoplus/#saving-session-baseline","title":"Saving Session Baseline","text":"<p><code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_octoplus_saving_session_baseline</code></p> <p>This will indicate the baseline consumption that you need to be below for the current 30 minute period of the current saving session or the first 30 minute period of the next saving session. </p> <p>You can use the current period consumption sensor (if available) to see how on track you are.</p> <p>Note</p> <p>This will only be available if you have enrolled into Octoplus. Once enrolled, reload the integration to gain access to this sensor.</p> <p>Note</p> <p>This is disabled by default. </p> <p>Info</p> <p>An export variant of this sensor exists for export based meters.</p> Attribute Type Description <code>start</code> <code>datetime</code> The start datetime the current baseline applies <code>end</code> <code>datetime</code> The end datetime the current baseline applies <code>is_incomplete_calculation</code> <code>bool</code> Determines if the calculation is based on the full set or partial set of data <code>consumption_items</code> <code>list</code> The consumption that was used to calculate the baselines <code>total_baseline</code> <code>float</code> The total baseline for the current saving session <code>baselines</code> <code>list</code> The collection of baselines for the current saving session <p>Each item within <code>consumption_items</code> consists of the following attributes</p> Attribute Type Description <code>start</code> <code>datetime</code> The start datetime the consumption period <code>end</code> <code>datetime</code> The end datetime the consumption period <code>consumption</code> <code>float</code> The total consumption within the period in kWh <p>Each item within <code>baselines</code> consists of the following attributes</p> Attribute Type Description <code>start</code> <code>datetime</code> The start datetime the baseline period <code>end</code> <code>datetime</code> The end datetime the baseline period <code>baseline</code> <code>float</code> The consumption in kWh for the baseline period <code>is_incomplete_calculation</code> <code>bool</code> Determines if the calculation is based on the full set or partial set of data <p>Info</p> <p>You can use the data_last_retrieved sensor to determine when the underlying data was last retrieved from the OE servers.</p>"},{"location":"entities/octoplus/#free-electricity-sessions","title":"Free Electricity Sessions","text":"<p>Warning</p> <p>This sensor has been deprecated in favour of Free Electricity Sessions Calendar and will be removed around May 2026</p> <p><code>binary_sensor.octopus_energy_{{ACCOUNT_ID}}_octoplus_free_electricity_session</code></p> <p>Binary sensor to indicate if a free electricity session is active.</p> <p>Note</p> <p>This will only be available if you have enrolled into Octoplus. Once enrolled, reload the integration to gain access to this sensor. This is only applicable if you have signed up to free electricity sessions. This sensor uses public information supplied by https://github.com/BottlecapDave/OctopusEnergyApi.</p> <p>Note</p> <p>This is disabled by default. </p> Attribute Type Description <code>current_event_start</code> <code>datetime</code> The datetime the current free electricity session started <code>current_event_end</code> <code>datetime</code> The datetime the current free electricity session will end <code>current_event_duration_in_minutes</code> <code>float</code> The duration in minutes of the current free electricity session <code>next_event_start</code> <code>datetime</code> The datetime the next free electricity session will start <code>next_event_end</code> <code>datetime</code> The datetime the next free electricity session will end <code>next_event_duration_in_minutes</code> <code>float</code> The duration in minutes of the next free electricity session <p>Info</p> <p>You can use the data_last_retrieved sensor to determine when the underlying data was last retrieved from the OE servers.</p>"},{"location":"entities/octoplus/#free-electricity-sessions-calendar","title":"Free Electricity Sessions Calendar","text":"<p><code>calendar.octopus_energy_{{ACCOUNT_ID}}_octoplus_free_electricity_session</code></p> <p>Calendar sensor to record free electricity sessions. Will be <code>on</code> when a free electricity session is active. Standard calendar attributes will indicate the current/next saving session.</p> <p>Note</p> <p>This will only be available if you have enrolled into Octoplus. Once enrolled, reload the integration to gain access to this sensor. This is only applicable if you have signed up to free electricity sessions. This sensor uses public information supplied by https://github.com/BottlecapDave/OctopusEnergyApi.</p> <p>Note</p> <p>This is disabled by default. </p> <p>Info</p> <p>You can use the data_last_retrieved sensor to determine when the underlying data was last retrieved from the OE servers.</p>"},{"location":"entities/octoplus/#free-electricity-session-events","title":"Free Electricity Session Events","text":"<p><code>event.octopus_energy_{{ACCOUNT_ID}}_octoplus_free_electricity_session_events</code></p> <p>The state of this sensor states when the free electricity session events were last updated. The attributes of this sensor exposes the past, present and future free electricity sessions.</p> <p>Note</p> <p>This will only be available if you have enrolled into Octoplus. Once enrolled, reload the integration to gain access to this sensor. This is only applicable if you have signed up to free electricity sessions. This sensor uses public information supplied by https://github.com/BottlecapDave/OctopusEnergyApi.</p> <p>Note</p> <p>This is disabled by default. </p> Attribute Type Description <code>events</code> <code>array</code> The collection of free electricity events <p>Each item in the <code>events</code> attribute will include the following attributes</p> Attribute Type Description <code>code</code> <code>string</code> The code of the event. <code>start</code> <code>datetime</code> The date/time the event starts <code>end</code> <code>datetime</code> The date/time the event starts <code>duration_in_minutes</code> <code>integer</code> The duration of the event in minutes"},{"location":"entities/octoplus/#free-electricity-session-baseline","title":"Free Electricity Session Baseline","text":"<p><code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_octoplus_free_electricity_session_baseline</code></p> <p>This will indicate the baseline consumption that you need to be above for the current 30 minute period of the current free electricity session or the first 30 minute period of the next free electricity session. </p> <p>You can use the current period consumption sensor (if available) to see how on track you are.</p> <p>Note</p> <p>This will only be available if you have enrolled into Octoplus. Once enrolled, reload the integration to gain access to this sensor. This is only applicable if you have signed up to free electricity sessions. This sensor uses public information supplied by https://github.com/BottlecapDave/OctopusEnergyApi.</p> <p>Note</p> <p>This is disabled by default. </p> <p>Info</p> <p>An export variant of this sensor exists for export based meters.</p> Attribute Type Description <code>start</code> <code>datetime</code> The start datetime the current baseline applies <code>end</code> <code>datetime</code> The end datetime the current baseline applies <code>is_incomplete_calculation</code> <code>bool</code> Determines if the calculation is based on the full set or partial set of data <code>consumption_items</code> <code>list</code> The consumption that was used to calculate the baselines <code>total_baseline</code> <code>float</code> The total baseline for the current saving session <code>baselines</code> <code>list</code> The collection of baselines for the current saving session <p>Each item within <code>consumption_items</code> consists of the following attributes</p> Attribute Type Description <code>start</code> <code>datetime</code> The start datetime the consumption period <code>end</code> <code>datetime</code> The end datetime the consumption period <code>consumption</code> <code>float</code> The total consumption within the period in kWh <p>Each item within <code>baselines</code> consists of the following attributes</p> Attribute Type Description <code>start</code> <code>datetime</code> The start datetime the baseline period <code>end</code> <code>datetime</code> The end datetime the baseline period <code>baseline</code> <code>float</code> The consumption in kWh for the baseline period <code>is_incomplete_calculation</code> <code>bool</code> Determines if the calculation is based on the full set or partial set of data <p>Info</p> <p>You can use the data_last_retrieved sensor to determine when the underlying data was last retrieved from the OE servers.</p>"},{"location":"entities/octoplus/#services","title":"Services","text":"<p>There are some services available relating to these entities that you might find useful. They can be found in the services docs.</p>"},{"location":"entities/wheel_of_fortune/","title":"Wheel Of Fortune","text":"<p>To support the wheel of fortune that is awarded every month to customers.</p>"},{"location":"entities/wheel_of_fortune/#electricity-spins","title":"Electricity Spins","text":"<p><code>sensor.octopus_energy_{{ACCOUNT_ID}}_wheel_of_fortune_spins_electricity</code></p> <p>The number of spins remaining for electricity supply</p>"},{"location":"entities/wheel_of_fortune/#gas-spins","title":"Gas Spins","text":"<p><code>sensor.octopus_energy_{{ACCOUNT_ID}}_wheel_of_fortune_spins_gas</code></p> <p>The number of spins remaining for gas supply</p>"},{"location":"entities/wheel_of_fortune/#services","title":"Services","text":"<p>There are some services available relating to these entities that you might find useful. They can be found in the services docs.</p>"},{"location":"migrations/target_timeframes/","title":"Migrating Target Rate Sensors To Target Timeframes","text":"<p>It has been proposed that the target rate feature of the integration be deprecated and removed in favour of a new external integration, Target Timeframes. The full reasoning can be found in the proposal.</p> <p>This guide explains how to migrate your target rate sensors to the new integration.</p>"},{"location":"migrations/target_timeframes/#installing-the-integration","title":"Installing the integration","text":"<p>The first thing you need to do is install the new integration. Full instructions can be found on the website.</p>"},{"location":"migrations/target_timeframes/#setting-up-data-sources","title":"Setting up data sources","text":"<p>Once installed, you'll need to configure the integration by setting up a data source that represents data coming from this integration. This can be done by following the link or navigating to your integrations view, clicking 'Add integration' and searching for 'Target Timeframes'. You'll need a data source for each of your meters you want to create target rate sensors for (e.g. one for import and one for export).</p> <p>The recommended name is <code>Octopus Energy Import</code> and the recommended source id is <code>octopus_energy_import</code>, but you can pick whatever you want as long as it's unique within the integration.</p> <p></p>"},{"location":"migrations/target_timeframes/#configuring-octopus-energy-data","title":"Configuring Octopus Energy data","text":"<p>Next, we'll need to get data from the Octopus Energy integration into the Target Timeframes integration. The recommended approach is an automation based on one of the available blueprints. </p> <p>There are different blueprints available depending upon whether you want your target rate sensors to take account of just carbon intensity, just Octopus rates, or both. For target rate sensors that use Octopus rates there are different blueprints depending upon whether you want to take account of Octopus free electricity sessions or not.</p> <p>Select the blueprint you want to use and click 'Install blueprint'.  You will get a prompt to open a page in Home Assistant, click 'Open link', you'll get a second prompt to confirm you want to import the blueprint, click 'Preview blueprint' then 'Import blueprint' and the blueprint will be installed in your Home Assistant.</p> <p>Next you need to create an automation using the blueprint you just imported.  The automation will track when the rate entities within the Octopus Energy integration are updated and will then transform the rate data into the shape required by Target Timeframes and use the available service to add the rate data with the data source we just created. Each <code>value</code> in Target Timeframes will represent our rate in pounds/pence.</p> <p>Click the name of the blueprint you just imported.  You'll be prompted to configure the blueprint with the names of your Octopus Integration sensors. Use the dropdowns to select the appropriate Home Assistant sensor or event name:</p> <p></p> <p>Make sure you select the right Octopus Integration events for your target timeframe data source sensor, e.g. 'previous day rates' for an import sensor, not 'previous day rates export'.</p> <p>Once you have completed the blueprint configuration click Save and this will create the automation for you, fully populated with the sensor and event names you configured.  You have the option to rename the automation, add a description, category, etc if you want to.</p> <p>Having setup the automation you'll need to then wait for one of the Octopus integration events to update (when the automation will then automatically run), or manually run the automation to populate the data source.</p>"},{"location":"migrations/target_timeframes/#setting-up-target-rate-sensors","title":"Setting up Target Rate sensors","text":"<p>Now we have our data source representing Octopus Energy and data coming from this integration into Target Timeframes, it's time to now port across our target rate and rolling target rate sensors. Each type of sensor are added as a sub entry to our data source. Either click the appropriate Add button, or the three dots and choose the add option.</p> <p></p> <p>For porting a target rate sensor, you would select target timeframe and for porting a rolling target rate sensor, you would select rolling target timeframe.</p> <p>All options within the sensors should feel familiar, as they represent what's available within this integration. Below are some noticeable differences</p> <ul> <li> <p><code>Invert targeted rates</code> in the Octopus Energy integration is represented by <code>Find highest values</code> in Target Timeframes. If <code>Invert targeted rates</code> is checked, for sensors using data sources targeting import meters, <code>Find highest values</code> should be checked. If <code>Invert targeted rates</code> is checked, for sensors using data sources targeting export meters, <code>Find highest values</code> should be checked.</p> </li> <li> <p>Note that the <code>cost</code> attributes of the Octopus Integration target rate binary sensors are renamed as <code>value</code> attributes in the Target Timeframes integration target rate binary sensors.  So <code>overall min cost</code> is now <code>overall min value</code>, <code>next average cost</code> is now <code>next average value</code>, etc.  If you display any of these attributes on a dashboard or use them in your own automation you will need to adjust accordingly.</p> </li> </ul> <p>Warning</p> <p>There is currently a bug in HA where you'll need to reload the data source when a target rate sensor is added/updated in order to see the new target rate sensor.</p> <p>Info</p> <p>If you are wanting to minimise updates of automations, once the target timeframe sensor has been created and you delete the old sensor from the Octopus Energy integration, you can rename the entity id to have the name of the old sensor. For example, if you have a target sensor with the entity id of <code>sensor.target_timeframe_octopus_energy_import_dishwasher</code>, your could rename it to <code>sensor.octopus_energy_target_dishwasher</code>.</p>"},{"location":"migrations/target_timeframes/#available-services","title":"Available services","text":"<p>The following list of related services and their counterparts.</p> OE Service Target Timeframes Service octopus_energy.update_target_config target_timeframes.update_target_timeframe_config octopus_energy.update_rolling_target_config target_timeframes.update_rolling_target_timeframe_config octopus_energy.register_rate_weightings Data is now loaded as part of target_timeframes.update_target_timeframe_data_source. Therefore data can be manipulated before this service is called. A blueprint is available as an example."},{"location":"repairs/account_not_found/","title":"Repairs - Account not found","text":"<p>If you receive the fixable warning around your account information not being found, there are two possible causes and solutions</p>"},{"location":"repairs/account_not_found/#api-key-is-invalid","title":"API Key is invalid","text":"<p>The simplest cause is that your API key has become invalid. This can happen if you have recently reset your API key in your Octopus Energy dashboard.</p> <p>To fix 1. Navigate to Octopus Energy integrations 2. Find the entry marked with your account id (e.g. <code>A-AAAA1111</code>) and click on 'Configure' 1. Update your API key with your new one displayed on your Octopus Energy dashboard. 2. Click 'Submit'</p>"},{"location":"repairs/account_not_found/#account-id-is-invalid","title":"Account id is invalid","text":"<p>If you have setup the integration with an account that is no longer valid, you will need to manually remove all entries for the integration.</p> <p>To fix 1. Navigate to Octopus Energy integrations 2. For each entry, click on the three dots and then click on 'Delete'</p> <p>Once done, you can then add the integration fresh with your new account.</p>"},{"location":"repairs/cost_override_obsolete/","title":"Repairs - Cost override deprecated","text":"<p>If you receive this fixable warning, it means that you are using the cost tariff override sensors. These default sensors are going away in favour of opting in via the integrations page.</p> <p>To fix 1. Navigate to your cost tariff override sensors and reset the tariff to your current tariff (this will remove the repair warning) 2. Follow the tariff comparison instructions to setup the new entities that replace these entities.</p>"},{"location":"repairs/invalid_target_rate/","title":"Repairs - Invalid Target Rate","text":"<p>If you receive this error, it means that one or more of your target rate sensors have gone into an invalid state. This can happen for a number of reasons</p> <ol> <li>More validation has been added, which your target rate sensor(s) are in violation of or</li> <li>You have switched tariffs and so your target rate sensor(s) are looking in a timeframe that is not possible.</li> </ol> <p>To solve this</p> <ol> <li>Go to your integration</li> <li>Click configure against the target rate sensor that is in violation</li> <li>Update the config and save your changes</li> </ol> <p>If you are still having issues, feel free to raise a discussion.</p>"},{"location":"repairs/meter_removed/","title":"Repairs - Meter removed","text":"<p>The integration regularly updates the account information. As part of this update, it checks if meters have changed since the last update. A meter can be deemed as \"removed\" for one of two reasons.</p> <ol> <li>The meter is no longer part of your account</li> <li>The meter no longer has an active tariff associated with it</li> </ol> <p>If this is expected (e.g. you've had your meter replaced), then you can ignore this notification. If this is not expected, then continue.</p>"},{"location":"repairs/meter_removed/#troubleshooting-removed-meter","title":"Troubleshooting removed meter","text":"<p>The best way to determine why this has occurred is to download the diagnostics for your meter. Once downloaded, it will look something like the following</p> <pre><code>{\n  ...\n  \"data\": {\n    \"timestamp_captured\": \"2025-08-31T06:48:05.188073+01:00\",\n    \"account\": {\n      \"id\": \"**REDACTED**\",\n      \"octoplus_enrolled\": true,\n      \"heat_pump_ids\": [],\n      \"electricity_meter_points\": [\n        {\n          \"mpan\": 2,\n          \"meters\": [\n            {\n              \"active_from\": {\n                \"__type\": \"&lt;class 'datetime.date'&gt;\",\n                \"isoformat\": \"2000-01-01\"\n              },\n              \"active_to\": null,\n              \"serial_number\": 1,\n              \"is_export\": false,\n              \"is_smart_meter\": true,\n              \"device_id\": \"**REDACTED**\",\n              \"manufacturer\": \"xxx\",\n              \"model\": \"xxx\",\n              \"firmware\": \"xxx\",\n              \"latest_consumption\": \"2025-08-30T00:00:00+00:00\",\n              \"device\": {\n                \"total_consumption\": 31221.6,\n                \"consumption\": 0.1,\n                \"demand\": 251.0,\n                \"start\": \"2025-08-31T05:30:00+00:00\",\n                \"end\": \"2025-08-31T06:00:00+00:00\"\n              }\n            }\n          ],\n          \"agreements\": [\n            {\n              \"start\": \"2000-01-01T23:00:00+00:00\",\n              \"end\": \"2001-01-01T23:00:00+00:00\",\n              \"tariff_code\": \"E-1R-SUPER-GREEN-24M-21-07-30-L\",\n              \"product_code\": \"SUPER-GREEN-24M-21-07-30\"\n            },\n            ...\n          ]\n        }\n      ],\n      \"gas_meter_points\": [\n        {\n          \"mprn\": 4,\n          \"meters\": [\n            {\n              \"active_from\": {\n                \"__type\": \"&lt;class 'datetime.date'&gt;\",\n                \"isoformat\": \"2021-08-16\"\n              },\n              \"active_to\": null,\n              \"serial_number\": 3,\n              \"consumption_units\": \"m\\u00b3\",\n              \"is_smart_meter\": true,\n              \"device_id\": \"**REDACTED**\",\n              \"manufacturer\": \"xxx\",\n              \"model\": \"xxx\",\n              \"firmware\": \"xxx\",\n              \"latest_consumption\": \"2025-08-30T00:00:00+00:00\",\n              \"device\": {\n                \"total_consumption\": 150664.71746,\n                \"consumption\": 0.0,\n                \"demand\": null,\n                \"start\": \"2025-08-31T05:30:00+00:00\",\n                \"end\": \"2025-08-31T06:00:00+00:00\"\n              }\n            }\n          ],\n          \"agreements\": [\n            {\n              \"start\": \"2000-01-01T23:00:00+00:00\",\n              \"end\": \"2001-01-01T23:00:00+00:00\",\n              \"tariff_code\": \"G-1R-SUPER-GREEN-24M-21-07-30-L\",\n              \"product_code\": \"SUPER-GREEN-24M-21-07-30\"\n            },\n            ...\n          ]\n        }\n      ]\n    },\n    \"using_cached_account_data\": true,\n    ...\n  },\n  ...\n}\n</code></pre> <p>The meter MPAN/MPRN and Serial numbers are automatically changed to numbers for PII purposes, so you will need to find you meter either by it's active date or the manufacturer/model.</p> <p>If the meter is no longer present or there is no active agreement, then you'll need to contact Octopus Energy to get this fixed. Otherwise, please raise an issue with the diagnostic data and any associated errors in your logs to try and fix the problem.</p>"},{"location":"repairs/no_active_tariff/","title":"Repairs - No active tariff","text":"<p>If you receive this repair notice it means that no active tariff was found for one or more of your meters. There are a few reasons why this might be the case.</p> <ol> <li>You are in the middle of switching tariffs. There can sometimes be a gap in your tariff information coming through when your existing tariff ends and your new tariff begins.</li> <li>You have had a meter swap. When your meter is replaced, it can take time for systems to fully update, leaving a gap in tariff information until this is complete.</li> <li>You are new to OE and your tariff hasn't begun yet. Once your tariff starts, the integration will pick it up and should start working.</li> <li>There is a configuration issue with your account. In this scenario, you'll need to contact Octopus Energy support to get this rectified.</li> </ol> <p>All of the above scenarios can be confirmed within your diagnostic data. This will contain your account data including your meters. Under each of your meters, you'll have a list of tariff agreements. For each meter, you should have an agreement with a start date in the past and an end date either in the future or with no end date.</p>"},{"location":"repairs/octopus_mini_not_valid/","title":"Repairs - Octopus Mini not valid","text":"<p>If you receive this warning, then it is because you have configured the integration to have Octopus Mini enabled, but one or more of your sensors do not have the details available for your Octopus Mini.</p> <p>This could be perfectly valid for one of your meters (e.g. one of your meters isn't available via Octopus Mini), in which case you can ignore the repair notice. If this is not the case, then you should either</p> <ol> <li>Update the config of your specified account and turn off Octopus Mini support or </li> <li>You should raise an issue with Octopus Energy stating the data isn't coming through your account data.</li> </ol>"},{"location":"repairs/tariff_rates_empty/","title":"Repairs - Tariff Rates Empty","text":"<p>If you have received this repair notice, it means you have one or more meters associated with a tariff that no longer appears to be returning up to date rate information. </p> <p>This can be confirmed by looking at the rate feed. For example if you have tariff 'G-1R-SILVER-25-09-02-M' and product 'SILVER-25-09-02', then for electricity you can find the rates at https://api.octopus.energy/v1/products/SILVER-25-09-02/electricity-tariffs/E-1R-SILVER-25-09-02-A/standard-unit-rates/ and for gas you can find the rates at https://api.octopus.energy/v1/products/SILVER-25-09-02/gas-tariffs/G-1R-SILVER-25-09-02-A/standard-unit-rates/. If the first record has an \"valid_to\" value that isn't \"null\" and in the past, then new rates are no longer being published.</p> <p>This can occur for a number of reasons</p> <ol> <li>Your tariff has finished but you haven't been moved to a new tariff for some reason.</li> <li>There is an issue with the rate feed. This might be a short term issue with the Octopus Energy servers, so waiting my rectify the issue.</li> </ol> <p>To rectify all of these issues, you will need to contact Octopus Energy to fix this issue.</p>"},{"location":"repairs/unknown_intelligent_provider/","title":"Repairs - Unknown intelligent provider","text":"<p>Not all intelligent providers are created equally, so each provider needs to be manually configured around what features are available. For example, <code>OHME</code> doesn't have bump charging enabled as it's all managed by <code>OHME</code> instead of Octopus Energy.</p> <p>Please first update to the latest version of the integration as the provider might be supported in a newer version. </p> <p>If it's still not available, check to see if anyone else has already raised a support issue. </p> <p>If no one else has raised an issue around the unknown intelligent provider, then raise a support issue as an <code>Unknown intelligent provider</code> to fix this repair notice and potentially enable more functionality for your intelligent provider.</p>"},{"location":"repairs/unknown_product/","title":"Repairs - Unknown product","text":"<p>If you receive this error around one or more of your tariffs, it's because the Octopus Energy API can not find the product associated with your tariff. This usually occurs if you're on a tariff which is currently internal and has not been exposed. In this scenario, you should raise an issue with the tariff code and your meter information, which can be obtained by following the FAQ.</p>"},{"location":"setup/account/","title":"Account","text":"<p>Setup is done entirely via the integration UI.</p>"},{"location":"setup/account/#home-mini","title":"Home Mini","text":"<p>If you are lucky enough to own an Octopus Home Mini (you can request one via this link), you can now receive this data within Home Assistant. When setting up (or editing) your account within Home Assistant, you will need to check the box next to <code>I have a Home Mini</code>. This will gain the following entities which can be added to the energy dashboard:</p> <p>Info</p> <p>You will only have the same data exposed in the integration that is available within the app. There has been reports of gas not appearing within the app (and integration) straight away, so you might have to wait a few days for this to appear. Once it's available within the app, if you reload the integration (or restart Home Assistant) then the entities should become available.</p> <p>Warning</p> <p>Export sensors are not provided as the data is not available</p> <p>See electricity entities and gas entities for more information.</p>"},{"location":"setup/account/#refresh-rate-in-minutes","title":"Refresh Rate In Minutes","text":"<p>This determines how often data related to your Home Mini is retrieved from Octopus Energy. The Octopus Energy APIs have a rate limit of 100 calls per hour, which is shared among all calls including through the app. The defaults are usually enough for one electricity and one gas meter's data to be retrieved. However, if you are using other integrations, have more meters being tracked or want the app to not be effected you may want to increase this rate.</p> <p>You can adjust these independently between gas and electricity.</p>"},{"location":"setup/account/#calorific-value","title":"Calorific Value","text":"<p>When calculating gas costs, a calorific value is included in the calculation. Unfortunately this changes from region to region and is not provided by the Octopus Energy API. The default value of this is <code>40</code>, but if you check your latest bill you should be able to find the value for you. This will give you a more accurate consumption and cost calculation when your meter reports in <code>m3</code>.</p> <p>Info</p> <p>Changing this will change future calculations. It will not change calculations that have been made in the past.</p>"},{"location":"setup/account/#pricing-caps","title":"Pricing Caps","text":"<p>There has been inconsistencies across tariffs on whether government pricing caps are included or not. Therefore the ability to configure pricing caps has been added within you account. This is configured in pounds and pence format (e.g. 0.12 for 12p).</p> <p>Info</p> <p>While rates are reflected straight away, consumption based sensors may take up to 24 hours to reflect. This is due to how they look at data and cannot be changed.</p>"},{"location":"setup/account/#favour-direct-debit-rates","title":"Favour direct debit rates","text":"<p>There are some tariffs where direct debit and non direct debit rates are available. This toggle determines which rate to use in these situations.</p> <p>Info</p> <p>It might take a couple of minutes for these changes to reflect once changed.</p>"},{"location":"setup/account/#manually-refresh-intelligent-dispatches","title":"Manually refresh intelligent dispatches","text":"<p>By default, intelligent dispatches are retrieved periodically. This is fine for most scenarios, but this can be a little slow depending on what else you're doing off the back of the dispatches. If you have other ways of knowing when new dispatches should be available (e.g. your charger changes to a charging state or a manual button in your HA dashboard), then you can turn on <code>Manually refresh intelligent dispatches</code>. This will disable the periodic refreshing and expose a service which can be called to refresh the dispatches.</p>"},{"location":"setup/account/#intelligent-rates-mode","title":"Intelligent rates mode","text":"<p>If you are on an intelligent tariff then it's possible for you to get cheaper rates outside of your normal off peak periods if Octopus Energy schedules the charges and your car accepts the charges. The rate information provides by Octopus Energy doesn't take these periods into account, so the integration has to use the planned/completed dispatch information to adjust the rates appropriately. Due to the quality of the available data, this can be off sometimes. This feature allows how the rate information is adjusted in these scenarios.</p>"},{"location":"setup/account/#planned-and-started-dispatches-will-turn-into-off-peak-rates","title":"Planned and started dispatches will turn into off peak rates","text":"<p>This is the default behaviour. In this scenario, all planned dispatches will be assumed to be converted into successful off peak charges by the car and therefore all rates during these periods will be converted into the off peak rate. This will be indicated by the <code>is_intelligent_adjusted</code> property against the rate. This is useful when planning other devices to turn on in the future during these cheap periods (e.g. by using a target rate sensor).</p> <p>Please see the FAQ for information on what started dispatches are.</p> <p>Warning</p> <p>One side effect of this is around cost sensors, where if a planned dispatch does not turn into a started dispatch, the cost sensor can increase in value when the planned dispatch is removed.</p>"},{"location":"setup/account/#only-started-dispatches-will-turn-into-off-peak-rates","title":"Only started dispatches will turn into off peak rates","text":"<p>In this scenario only started dispatches will be taken into account for adjustments meaning all rates during only started dispatch periods will be converted into the off peak rate. This will be indicated by the <code>is_intelligent_adjusted</code> property. This means no future planning can be made to take advantage of these cheap periods by rates alone.</p> <p>Please see the FAQ for information on what started dispatches are.</p> <p>Warning</p> <p>One side effect of this is around cost sensors, where when a started dispatch arrives the cost sensor will decrease in value.</p>"},{"location":"setup/account/#home-pro","title":"Home Pro","text":"<p>If you are lucky enough to own an Octopus Home Pro (note that is is no longer possible to obtain one), you can now receive this data locally from within Home Assistant.</p> <p>Warning</p> <p>Integrating with the Octopus Home Pro is currently experimental. Use at your own risk.</p>"},{"location":"setup/account/#prerequisites","title":"Prerequisites","text":"<p>Info</p> <p>The Octopus Home Pro has a local API which is used to get consumption and demand data. If this is all you need, then you can jump straight to the settings.</p> <p>However, there is also an internal API for setting the display which is not currently exposed. In order to make this available for consumption by this integration you will need to expose a custom API on your device by following the instructions below</p> <p>Warning</p> <p>This custom API can only be configured with the default Home Pro setup. If you set up Home Assistant on your Home Pro device, then it won't be possible to expose this custom API.</p> <ol> <li>Follow the instructions to connect to your Octopus Home Pro via SSH</li> <li>Run the command <code>wget -O setup_ha.sh https://raw.githubusercontent.com/BottlecapDave/HomeAssistant-OctopusEnergy/main/home_pro_server/setup.sh</code> to download the installation script</li> <li>Run the command <code>chmod +x setup_ha.sh</code> to make the script executable</li> <li>Run the command <code>./setup_ha.sh</code> to run the installation script</li> <li>Edit <code>startup.sh</code> and add the following before the line <code># Start the ssh server</code></li> </ol> <pre><code>export SERVER_AUTH_TOKEN=thisisasecrettoken # Replace with your own unique string. This can be anything you wish. \n(cd /root/bottlecapdave_homeassistant_octopus_energy &amp;&amp; ./start_server.sh)\n</code></pre> <p>At the time of writing, your <code>startup.sh</code> should now look something like the following</p> <pre><code>#!/bin/bash\n\n# Ensure our main env shows up in ssh sessions\n# we're passing on API host info\nenv | grep _ &gt;&gt; /etc/environment\n\nexport SERVER_AUTH_TOKEN=thisisasecrettoken # Replace with your own unique string. This can be anything you wish.\n(cd /root/bottlecapdave_homeassistant_octopus_energy &amp;&amp; ./start_server.sh)\n\n# Start the ssh server\n/usr/sbin/sshd -D\n</code></pre> <p>Once saved, restart your Octopus Home Pro to boot up the custom API on start.</p>"},{"location":"setup/account/#settings","title":"Settings","text":"<p>Once the API has been configured, you will need to set the address to the IP address of your Octopus Home Pro (e.g. <code>http://192.168.1.2</code>).</p> <p>If you have setup the custom API, then you will need to set api key to the value you set <code>SERVER_AUTH_TOKEN</code> to.</p>"},{"location":"setup/account/#entities","title":"Entities","text":"<p>See entities for more information.</p>"},{"location":"setup/cost_tracker/","title":"Cost Tracker Sensor(s)","text":"<p>Ever wondered how much your individual appliances are costing you? You can create a cost tracker that monitors the consumption of an existing sensor and calculates the daily cost based on your tariff. You can also use these sensors to track the money you're making potentially from exports.</p> <p>Info</p> <p>The cost is only calculated when the monitored sensor changes. Therefore the accuracy of the cost tracker sensors is dependent on the frequency the monitored entity updates.</p>"},{"location":"setup/cost_tracker/#setup","title":"Setup","text":"<p>After you've configured your account, you'll be able to configure cost tracker sensors. These are configured by adding subsequent instances of the integration going through the normal flow, and selecting <code>Cost Tracker</code> in the provided menu.</p>"},{"location":"setup/cost_tracker/#name","title":"Name","text":"<p>This is the unique name for the cost trackers</p>"},{"location":"setup/cost_tracker/#meter","title":"Meter","text":"<p>This is the meter whose tariff will determine the rate the entity consumption is calculated at. This can be either an import or export based meter, meaning that you can track the money you're potentially making from your exports. </p>"},{"location":"setup/cost_tracker/#entity","title":"Entity","text":"<p>This is the entity whose consumption should be tracked and the cost calculated against. This entity will be assumed to be reporting <code>kwh</code>, unless stated otherwise.</p>"},{"location":"setup/cost_tracker/#tracked-entity-state-is-accumulative","title":"Tracked entity state is accumulative","text":"<p>This should be true if the tracked entity's state increases over time (true) or if it's the raw value (false).</p> <p>Info</p> <p>If you are tracking a \"total_increasing\" sensor, then based on HA documentation any decrease in value will be treated as a reset and the new state will be recorded as is. </p> <p>However, there have been reports of some sensors misbehaving. To counteract this, if there is less than a 10% decrease, then the difference between the new and old state will be recorded.</p>"},{"location":"setup/cost_tracker/#dont-automatically-reset-the-cost-sensor","title":"Don't automatically reset the cost sensor","text":"<p>By default, the sensor will automatically reset when a new reading has been received and it's a different day to the previous reading. There may be times that you want to track costs for something over this threshold (e.g. how much it last cost you to charge your car). In these scenarios, you can turn off the automatic resets. In this scenario, you are in charge of resetting the core sensor via it's available service.</p> <p>Info</p> <p>The weekly and monthly sensors will reset as normal with this settings turned on.</p> <p>Warning</p> <p>Not resetting this sensor for long periods of time can cause Home Assistant warnings around recording of state. This results in the attributes of the sensor not being persisted to the database for long term storage. This is a known limitation of the feature and cannot be fixed due to how the sensor tracks cost.</p>"},{"location":"setup/cost_tracker/#week-sensor-day-reset","title":"Week sensor day reset","text":"<p>This is the day of the week the accumulative week sensor should reset. This defaults to Monday.</p>"},{"location":"setup/cost_tracker/#month-sensor-day-reset","title":"Month sensor day reset","text":"<p>This is the day of the month the accumulative month sensor should reset. This must be between 1 and 28 (inclusively). This defaults to the 1st.</p>"},{"location":"setup/cost_tracker/#handling-exporting","title":"Handling Exporting","text":"<p>Due to everyone's HA setup being different for how they track importing/exporting, the sensors themselves assume that all consumption changes should be tracked and the cost calculated. However, you may wish to turn off tracking when you're exporting. This can be done via the related services.</p>"},{"location":"setup/cost_tracker/#entities","title":"Entities","text":""},{"location":"setup/cost_tracker/#cost-sensor","title":"Cost sensor","text":"<p><code>sensor.octopus_energy_cost_tracker_{{COST_TRACKER_NAME}}</code></p> <p>This is the total cost of the tracked entity for the current day.</p> <p>This is in pounds and pence (e.g. 1.01 = \u00a31.01).</p> Attribute Type Description <code>name</code> <code>string</code> The base name of the cost tracker (based on config) <code>mpan</code> <code>string</code> The mpan of the meter that determines how the cost is calculated (based on config) <code>target_entity_id</code> <code>string</code> The entity whose consumption data is being tracked (based on config) <code>entity_accumulative_value</code> <code>boolean</code> Determines if the tracked entity has accumulative data (based on config) <code>account_id</code> <code>string</code> The id of the account the cost tracker is for (based on config) <code>is_manual</code> <code>boolean</code> Determines if the tracker only resets when manually reset via the available service <code>is_tracking</code> <code>boolean</code> Determines if the tracker is currently tracking consumption/cost data <code>tracked_changes</code> <code>array</code> The collection of tracked entity changes where the costs have been tracked in 30 minute increments <code>untracked_changes</code> <code>array</code> The collection of tracked entity changes where the costs have not been tracked in 30 minute increments <code>total_consumption</code> <code>float</code> The total consumption that has been tracked for the current day <p>Each item within the <code>tracked_changes</code> and <code>untracked_changes</code> have the following attributes</p> Attribute Type Description <code>start</code> <code>datetime</code> The date/time when the consumption starts <code>end</code> <code>datetime</code> The date/time when the consumption ends <code>rate</code> <code>float</code> The rate the consumption is charged at. This is in pounds and pence (e.g. 1.01 = \u00a31.01) <code>consumption</code> <code>float</code> The consumption value of the specified period. This will be in <code>kwh</code>. <code>cost</code> <code>float</code> The cost of the consumption at the specified rate. This is in pounds and pence (e.g. 1.01 = \u00a31.01) <code>cost_raw</code> <code>float</code> The raw cost of the consumption at the specified rate. This is in pounds and pence, but not rounded. This is to account for low cost devices"},{"location":"setup/cost_tracker/#variants","title":"Variants","text":"<p>The following variants of the Cost Sensor are available.</p>"},{"location":"setup/cost_tracker/#off-peak","title":"Off Peak","text":"<p><code>sensor.octopus_energy_cost_tracker_{{COST_TRACKER_NAME}}_off_peak</code></p> <p>This is the total cost of the tracked entity for the current day during off peak hours (the lowest available rate).</p> <p>Note</p> <p>This is only available when on a tariff with 2 or 3 unique rates during a given day. </p> <p>If you switch to a tariff that meets this criteria, you will need to reload the integration to gain access to this entity.</p> <p>If you switch to a tariff that no longer meets this criteria, the entity will no longer be updated. When you reload the integration, this entity will no longer be available.</p> <p>This is disabled by default.</p> <p>Warning</p> <p>If you are on intelligent and are using a provider where planned_dispatches are not supported, then charges outside of your normal off peak periods will be counted at peak. This is because Octopus Energy doesn't provide enough information to determine if a completed dispatch was a bump charge or a planned charge.</p>"},{"location":"setup/cost_tracker/#standard","title":"Standard","text":"<p><code>sensor.octopus_energy_cost_tracker_{{COST_TRACKER_NAME}}_standard</code></p> <p>This is the total cost of the tracked entity for the current day during standard hours (the middle rate).</p> <p>Note</p> <p>This is only available when on a tariff with 2 or 3 unique rates during a given day. </p> <p>If you switch to a tariff that meets this criteria, you will need to reload the integration to gain access to this entity.</p> <p>If you switch to a tariff that no longer meets this criteria, the entity will no longer be updated. When you reload the integration, this entity will no longer be available.</p> <p>This is disabled by default.</p>"},{"location":"setup/cost_tracker/#peak","title":"Peak","text":"<p><code>sensor.octopus_energy_cost_tracker_{{COST_TRACKER_NAME}}_peak</code></p> <p>This is the total cost of the tracked entity for the current day during peak hours (the highest available rate).</p> <p>Note</p> <p>This is only available when on a tariff with 2 or 3 unique rates during a given day. </p> <p>If you switch to a tariff that meets this criteria, you will need to reload the integration to gain access to this entity.</p> <p>If you switch to a tariff that no longer meets this criteria, the entity will no longer be updated. When you reload the integration, this entity will no longer be available.</p> <p>This is disabled by default.</p>"},{"location":"setup/cost_tracker/#week-cost-sensor","title":"Week cost sensor","text":"<p><code>sensor.octopus_energy_cost_tracker_{{COST_TRACKER_NAME}}_week</code></p> <p>This is the total cost of the tracked entity for the current week. This will reset on the configured day.</p> <p>This is in pounds and pence (e.g. 1.01 = \u00a31.01).</p> Attribute Type Description <code>name</code> <code>string</code> The base name of the cost tracker (based on config) <code>mpan</code> <code>string</code> The mpan of the meter that determines how the cost is calculated (based on config) <code>target_entity_id</code> <code>string</code> The entity whose consumption data is being tracked (based on config) <code>entity_accumulative_value</code> <code>boolean</code> Determines if the tracked entity has accumulative data (based on config) <code>account_id</code> <code>string</code> The id of the account the cost tracker is for (based on config) <code>accumulated_data</code> <code>array</code> The collection of accumulated cost in daily increments <code>total_consumption</code> <code>float</code> The total consumption that has been tracked for the current week <p>Each item within the <code>accumulated_data</code> has the following attributes</p> Attribute Type Description <code>start</code> <code>datetime</code> The date/time when the consumption starts <code>end</code> <code>datetime</code> The date/time when the consumption ends <code>consumption</code> <code>float</code> The consumption value of the specified period. This will be in <code>kwh</code>. <code>cost</code> <code>float</code> The cost of the consumption at the specified rate. This is in pounds and pence (e.g. 1.01 = \u00a31.01)"},{"location":"setup/cost_tracker/#variants_1","title":"Variants","text":"<p>The following variants of the Week Cost Sensor are available.</p>"},{"location":"setup/cost_tracker/#off-peak_1","title":"Off Peak","text":"<p><code>sensor.octopus_energy_cost_tracker_{{COST_TRACKER_NAME}}_week_off_peak</code></p> <p>This is the total cost of the tracked entity for the current week during off peak hours (the lowest available rate).</p> <p>Note</p> <p>This is only available when on a tariff with 2 or 3 unique rates during a given day. </p> <p>If you switch to a tariff that meets this criteria, you will need to reload the integration to gain access to this entity.</p> <p>If you switch to a tariff that no longer meets this criteria, the entity will no longer be updated. When you reload the integration, this entity will no longer be available.</p> <p>This is disabled by default.</p> <p>Warning</p> <p>If you are on intelligent and are using a provider where planned_dispatches are not supported, then charges outside of your normal off peak periods will be counted at peak. This is because Octopus Energy doesn't provide enough information to determine if a completed dispatch was a bump charge or a planned charge.</p>"},{"location":"setup/cost_tracker/#standard_1","title":"Standard","text":"<p><code>sensor.octopus_energy_cost_tracker_{{COST_TRACKER_NAME}}_week_standard</code></p> <p>This is the total cost of the tracked entity for the current week during standard hours (the middle rate).</p> <p>Note</p> <p>This is only available when on a tariff with 2 or 3 unique rates during a given day. </p> <p>If you switch to a tariff that meets this criteria, you will need to reload the integration to gain access to this entity.</p> <p>If you switch to a tariff that no longer meets this criteria, the entity will no longer be updated. When you reload the integration, this entity will no longer be available.</p> <p>This is disabled by default.</p>"},{"location":"setup/cost_tracker/#peak_1","title":"Peak","text":"<p><code>sensor.octopus_energy_cost_tracker_{{COST_TRACKER_NAME}}_week_peak</code></p> <p>This is the total cost of the tracked entity for the current week during peak hours (the highest available rate).</p> <p>Note</p> <p>This is only available when on a tariff with 2 or 3 unique rates during a given day. </p> <p>If you switch to a tariff that meets this criteria, you will need to reload the integration to gain access to this entity.</p> <p>If you switch to a tariff that no longer meets this criteria, the entity will no longer be updated. When you reload the integration, this entity will no longer be available.</p> <p>This is disabled by default.</p>"},{"location":"setup/cost_tracker/#month-cost-sensor","title":"Month cost sensor","text":"<p><code>sensor.octopus_energy_cost_tracker_{{COST_TRACKER_NAME}}_month</code></p> <p>This is the total cost of the tracked entity for the current month. This will reset on the configured day.</p> <p>This is in pounds and pence (e.g. 1.01 = \u00a31.01).</p> Attribute Type Description <code>name</code> <code>string</code> The base name of the cost tracker (based on config) <code>mpan</code> <code>string</code> The mpan of the meter that determines how the cost is calculated (based on config) <code>target_entity_id</code> <code>string</code> The entity whose consumption data is being tracked (based on config) <code>entity_accumulative_value</code> <code>boolean</code> Determines if the tracked entity has accumulative data (based on config) <code>account_id</code> <code>string</code> The id of the account the cost tracker is for (based on config) <code>accumulated_data</code> <code>array</code> The collection of accumulated cost in daily increments <code>total_consumption</code> <code>float</code> The total consumption that has been tracked for the current month <p>Each item within the <code>accumulated_data</code> has the following attributes</p> Attribute Type Description <code>start</code> <code>datetime</code> The date/time when the consumption starts <code>end</code> <code>datetime</code> The date/time when the consumption ends <code>consumption</code> <code>float</code> The consumption value of the specified period. This will be in <code>kwh</code>. <code>cost</code> <code>float</code> The cost of the consumption at the specified rate. This is in pounds and pence (e.g. 1.01 = \u00a31.01)"},{"location":"setup/cost_tracker/#variants_2","title":"Variants","text":"<p>The following variants of the Month Cost Sensor are available.</p>"},{"location":"setup/cost_tracker/#off-peak_2","title":"Off Peak","text":"<p><code>sensor.octopus_energy_cost_tracker_{{COST_TRACKER_NAME}}_month_off_peak</code></p> <p>This is the total cost of the tracked entity for the current month during off peak hours (the lowest available rate).</p> <p>Note</p> <p>This is only available when on a tariff with 2 or 3 unique rates during a given day. </p> <p>If you switch to a tariff that meets this criteria, you will need to reload the integration to gain access to this entity.</p> <p>If you switch to a tariff that no longer meets this criteria, the entity will no longer be updated. When you reload the integration, this entity will no longer be available.</p> <p>This is disabled by default.</p> <p>Warning</p> <p>If you are on intelligent and are using a provider where planned_dispatches are not supported, then charges outside of your normal off peak periods will be counted at peak. This is because Octopus Energy doesn't provide enough information to determine if a completed dispatch was a bump charge or a planned charge.</p>"},{"location":"setup/cost_tracker/#standard_2","title":"Standard","text":"<p><code>sensor.octopus_energy_cost_tracker_{{COST_TRACKER_NAME}}_month_standard</code></p> <p>This is the total cost of the tracked entity for the current month during standard hours (the middle rate).</p> <p>Note</p> <p>This is only available when on a tariff with 2 or 3 unique rates during a given day. </p> <p>If you switch to a tariff that meets this criteria, you will need to reload the integration to gain access to this entity.</p> <p>If you switch to a tariff that no longer meets this criteria, the entity will no longer be updated. When you reload the integration, this entity will no longer be available.</p> <p>This is disabled by default.</p>"},{"location":"setup/cost_tracker/#peak_2","title":"Peak","text":"<p><code>sensor.octopus_energy_cost_tracker_{{COST_TRACKER_NAME}}_month_peak</code></p> <p>This is the total cost of the tracked entity for the current month during peak hours (the highest available rate).</p> <p>Note</p> <p>This is only available when on a tariff with 2 or 3 unique rates during a given day. </p> <p>If you switch to a tariff that meets this criteria, you will need to reload the integration to gain access to this entity.</p> <p>If you switch to a tariff that no longer meets this criteria, the entity will no longer be updated. When you reload the integration, this entity will no longer be available.</p> <p>This is disabled by default.</p>"},{"location":"setup/cost_tracker/#services","title":"Services","text":"<p>There are services available associated with cost tracker sensors. Please review them in the services doc.</p>"},{"location":"setup/energy_dashboard/","title":"Energy Dashboard","text":""},{"location":"setup/energy_dashboard/#current-consumption","title":"Current Consumption","text":""},{"location":"setup/energy_dashboard/#for-electricity","title":"For Electricity","text":"<p>You can only record current (i.e. today's) consumption in the Energy dashboard if you have a way of measuring live consumption in your home.</p>"},{"location":"setup/energy_dashboard/#octopus-home-mini","title":"Octopus Home Mini","text":"<p>If you have an Octopus Home Mini and a smart electricity meter you can obtain live meter reading data into Home Assistant:</p> <ol> <li>Go to your energy dashboard configuration</li> <li>Click <code>Add Consumption</code> under <code>Electricity grid</code></li> <li>For <code>Consumed energy</code> you want <code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_current_accumulative_consumption</code></li> <li>Choose the <code>Use an entity tracking the total costs</code> option and the entity is <code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_current_accumulative_cost</code></li> </ol> <p></p> <p>Note</p> <p>Data will only appear in the energy dashboard from the point you configure the Home Mini within the integration. It doesn't backport any data.</p>"},{"location":"setup/energy_dashboard/#octopus-home-pro","title":"Octopus Home Pro","text":"<p>If you have an Octopus Home Pro and a smart electricity meter you can obtain live meter reading data into Home Assistant:</p> <ol> <li>Go to your energy dashboard configuration</li> <li>Click <code>Add Consumption</code> under <code>Electricity grid</code></li> <li>For <code>Consumed energy</code> you want <code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_current_total_consumption</code></li> <li>Choose the <code>Use an entity with current price</code> option and the entity is <code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_current_rate</code></li> </ol> <p></p> <p>Note</p> <p>Data will only appear in the energy dashboard from the point you configure the Home Pro within the integration. It doesn't backport any data.</p>"},{"location":"setup/energy_dashboard/#alternative-methods-to-measure-current-home-consumption","title":"Alternative methods to measure current Home Consumption","text":"<p>If you don't have an Octopus Home mini you may have another way to get live or near-live daily consumption into Home Assistant such as a Hildebrand Glow In Home Display, an Energy CT Clamp such as the Shelly EM on the incoming supply cable, or your existing Solar/Battery inverter may have a sensor that provides Grid import information that you can use in the Energy dashboard.</p> <p>Do be aware that as you are not directly capturing the smart meter readings in Home Assistant the consumption does not include the standing charge and there will always be a small measurement difference from what Octopus energy say you have used, but in practice the difference is likely to be quite small.</p> <ol> <li>Create a utility meter that resets daily to store the consumption sensor information in, e.g. called <code>Grid Import Today</code></li> <li>The utility meter should point to the sensor that is measuring your grid import. e.g. for a Hildebrand Glow it could be <code>sensor.smart_meter_electricity_energy_import</code>; a Shelly EM will be <code>sensor.&lt;EM channel name&gt;_energy_total</code>; for a GivEnergy inverter using the GivTCP integration it will be <code>sensor.givtcp_XXyywwXnnn_import_energy_today_kwh</code></li> <li>Then add the consumption information to the Energy dashboard as per the steps for Octopus Home Mini above.  For step 3, <code>consumed energy</code>, you want the utility meter you have just created above, e.g. <code>sensor.grid_import_today</code> and for step 4, choose <code>Use an entity with current price</code> and the entity is <code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_current_rate</code></li> </ol>"},{"location":"setup/energy_dashboard/#for-gas","title":"For Gas","text":""},{"location":"setup/energy_dashboard/#octopus-home-mini_1","title":"Octopus Home Mini","text":"<p>If you have an Octopus Home Mini and a smart electricity meter you can obtain live meter reading data into Home Assistant:</p> <ol> <li>Go to your energy dashboard configuration</li> <li>Click <code>Add Gas Source</code> under <code>Gas consumption</code></li> <li>For <code>Gas usage</code> you want <code>sensor.octopus_energy_gas_{{METER_SERIAL_NUMBER}}_{{MPRN_NUMBER}}_current_accumulative_consumption_kwh</code></li> <li>For <code>Use an entity tracking the total costs</code> option you want <code>sensor.octopus_energy_gas_{{METER_SERIAL_NUMBER}}_{{MPRN_NUMBER}}_current_accumulative_cost</code> </li> </ol> <p></p> <p>Note</p> <p>Data will only appear in the energy dashboard from the point you configure the Home Mini within the integration. It doesn't backport any data.</p>"},{"location":"setup/energy_dashboard/#octopus-home-pro_1","title":"Octopus Home Pro","text":"<p>If you have an Octopus Home Pro and a smart gas meter you can obtain live meter reading data into Home Assistant:</p> <ol> <li>Go to your energy dashboard configuration</li> <li>Click <code>Add Consumption</code> under <code>Electricity grid</code></li> <li>For <code>Consumed energy</code> you want <code>sensor.octopus_energy_gas_{{METER_SERIAL_NUMBER}}_{{MPRN_NUMBER}}_current_total_consumption_kwh</code></li> <li>Choose the <code>Use an entity with current price</code> option and the entity is <code>sensor.octopus_energy_gas_{{METER_SERIAL_NUMBER}}_{{MPRN_NUMBER}}_current_rate</code></li> </ol> <p></p> <p>Note</p> <p>Data will only appear in the energy dashboard from the point you configure the Home Pro within the integration. It doesn't backport any data.</p>"},{"location":"setup/energy_dashboard/#previous-day-consumption","title":"Previous Day Consumption","text":"<p>If none of the methods above for feeding Current Day Consumption information into the Energy dashboard are suitable, you can add <code>previous consumption</code> information to the dashboard, using information retrieved via the Octopus API. Note that the consumption information is only available on the following day so \"today's\" Energy dashboard will show zero values, but \"yesterday's\", \"day before\", etc will show the correct consumption for each day.</p> <p>Warning</p> <p>Beware: Whilst you can add the previous consumption sensors directly to the Energy dashboard, they will be associated with the wrong day. This is because the Energy dashboard uses the timestamp of when the sensor updates to determine which day the data should belong to.</p> <p>Instead, you must use external statistics that are exported by the <code>previous consumption</code> sensors, which are broken down into hourly chunks. </p> <p>Info</p> <p>It can take up to 24 hours for the external statistics to appear.</p> <p>Note</p> <p>I'm still investigating having hourly breakdowns imported on the entity themselves rather than as external statistics, but currently in doing so it's still including the spikes on the day of retrieval. I've opened a forum post but awaiting answers.</p>"},{"location":"setup/energy_dashboard/#for-electricity_1","title":"For Electricity","text":"<ol> <li>Go to your energy dashboard configuration</li> <li>Click <code>Add Consumption</code> under <code>Electricity Grid</code></li> <li>For <code>consumed energy</code> you want one of the following:</li> <li><code>octopus_energy:</code><code>electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_previous_accumulative_consumption</code> - The total consumption reported by the meter for the previous day.  Please note the different name to the standard entity, do NOT choose sensor.electricity_{{METER}}_{{MPAN}}_previous_accumulative_consumption.</li> <li><code>octopus_energy:</code><code>electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_previous_accumulative_consumption_peak</code> - The total consumption reported by the meter during peak hours for the previous day. This will only be populated if you're on a tariff with two available rates and is disabled by default. Please note the different name to the standard entity, do NOT choose sensor.electricity_{{METER}}_{{MPAN}}_previous_accumulative_consumption_peak.</li> <li><code>octopus_energy:</code><code>electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_previous_accumulative_consumption_off_peak</code> - The total consumption reported by the meter during off-peak hours for the previous day. This will only be populated if you're on a tariff with two available rates and is disabled by default. Please note the different name to the standard entity, do NOT choose sensor.electricity_{{METER}}_{{MPAN}}_previous_accumulative_consumption_off_peak.</li> <li>For <code>Use an entity tracking the total costs</code> option you want one of the following:</li> <li><code>octopus_energy:electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_previous_accumulative_cost</code> - The total cost for the previous day. Please note the different name to the standard entity, do NOT choose sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_previous_accumulative_cost.</li> <li><code>octopus_energy:electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_previous_accumulative_cost_peak</code> - The total cost for the previous day that applied during peak hours. This will only be populated if you're on a tariff with two available rates and is disabled by default. Please note the different name to the standard entity, do NOT choose sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_previous_accumulative_cost_peak.</li> <li><code>octopus_energy:electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_previous_accumulative_cost_off_peak</code> - The total cost for the previous day that applied during off-peak hours. This will only be populated if you're on a tariff with two available rates and is disabled by default. Please note the different name to the standard entity, do NOT choose sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_previous_accumulative_cost_off_peak.</li> </ol>"},{"location":"setup/energy_dashboard/#for-gas_1","title":"For Gas","text":"<ol> <li>Go to your energy dashboard configuration</li> <li>Click <code>Add Gas Source</code> under <code>Gas Consumption</code></li> <li>For <code>consumed energy</code> you want one of the following</li> <li><code>octopus_energy:gas_{{METER_SERIAL_NUMBER}}_{{MPRN_NUMBER}}_previous_accumulative_consumption</code> - The total consumption reported by the meter for the previous day in m3. If your meter reports in m3, then this will be an accurate value reported by Octopus, otherwise it will be a calculated/estimated value. Please note the different name to the standard entity, do NOT choose sensor.octopus_energy_gas_{{METER_SERIAL_NUMBER}}_{{MPRN_NUMBER}}_previous_accumulative_consumption.</li> <li><code>octopus_energy:gas_{{METER_SERIAL_NUMBER}}_{{MPRN_NUMBER}}_previous_accumulative_consumption_kwh</code> - The total consumption reported by the meter for the previous day in kwh. If your meter reports in kwh, then this will be an accurate value reported by Octopus, otherwise it will be a calculated/estimated value. Please note the different name to the standard entity, do NOT choose sensor.octopus_energy_gas_{{METER_SERIAL_NUMBER}}_{{MPRN_NUMBER}}_previous_accumulative_consumption_kwh.</li> <li>For <code>Use an entity tracking the total costs</code> option you want the following</li> <li><code>octopus_energy:gas_{{METER_SERIAL_NUMBER}}_{{MPRN_NUMBER}}_previous_accumulative_cost</code> - The total cost for the previous day. Please note the different name to the standard entity, do NOT choose sensor.octopus_energy_gas_{{METER_SERIAL_NUMBER}}_{{MPRN_NUMBER}}_previous_accumulative_cost.</li> </ol>"},{"location":"setup/rolling_target_rate/","title":"Rolling Target Rate Sensor(s)","text":"<p>Warning</p> <p>It has been proposed that the rolling target rate feature of the integration be deprecated and removed in favour of a new external integration, Target Timeframes. The full reasoning can be found in the proposal.</p> <p>A migration guide is available for migrating rolling target rate sensors to the new integration.</p> <p>After you've configured your account, you'll be able to configure rolling target rate sensors. These are configured by adding subsequent instances of the integration going through the normal flow, and selecting <code>Rolling Target Rate</code> in the provided menu.</p> <p>These sensors calculate the lowest continuous or intermittent rates within the next available <code>x</code> hours, where <code>x</code> is configurable via the sensor, and turn on when these periods are active. If you are targeting an export meter, then the sensors will calculate the highest continuous or intermittent rates within the next available <code>x</code> hours and turn on when these periods are active. If you are wanting to evaluate on a fixed basis (e.g. every 24 hours), you might be interested in the standard target rate sensors</p> <p>These sensors can then be used in automations to turn on/off devices that save you (and the planet) energy and money. You can go through this flow as many times as you need rolling target rate sensors.</p> <p>Each sensor will be in the form <code>binary_sensor.octopus_energy_rolling_target_{{TARGET_RATE_NAME}}</code>.</p>"},{"location":"setup/rolling_target_rate/#setup","title":"Setup","text":""},{"location":"setup/rolling_target_rate/#hours","title":"Hours","text":"<p>The hours that you require for the sensor to find. This should be in decimal format and represent 30 minute increments. For example 30 minutes would be <code>0.5</code>, 1 hour would be <code>1</code> or <code>1.0</code>, 1 hour and 30 minutes would be <code>1.5</code>, etc.</p>"},{"location":"setup/rolling_target_rate/#hours-mode","title":"Hours Mode","text":"<p>There are three different modes that the target rate sensor can be set to, which determines how the specified hours should be interpreted</p>"},{"location":"setup/rolling_target_rate/#exact-default","title":"Exact (default)","text":"<p>The target rate sensor will try to find the best times for the specified hours. If less than the target hours are discovered, the sensor will not come on at all. If there are more hours than required that meet the specified requirements (e.g. below a certain rate), then it will come on for the cheapest available times up to the specified hours.</p> <p>For instance if the cheapest period is between <code>2023-01-01T00:30</code> and <code>2023-01-01T05:00</code> and your target rate is for 1 hour, then it will come on between  <code>2023-01-01T00:30</code> and <code>2023-01-01T01:30</code>. If the available times are between <code>2023-01-01T00:30</code> and <code>2023-01-01T01:00</code>, then the sensor will not come on at all.</p>"},{"location":"setup/rolling_target_rate/#minimum","title":"Minimum","text":"<p>The target rate sensor will try to find the best times for the specified hours. If less than the target hours are discovered, the sensor will not come on at all. If there are more hours than required that meet the specified requirements (e.g. below a certain rate), then it will come on for all discovered times.</p> <p>For instance if the cheapest period is between <code>2023-01-01T00:30</code> and <code>2023-01-01T05:00</code> and your target rate is for 1 hour, then it will come on between  <code>2023-01-01T00:30</code> and <code>2023-01-01T05:00</code>. If the available times are between <code>2023-01-01T00:30</code> and <code>2023-01-01T01:00</code>, then the sensor will not come on at all.</p>"},{"location":"setup/rolling_target_rate/#maximum","title":"Maximum","text":"<p>The target rate sensor will try to find the best times for the specified hours. If less than the target hours are discovered, the sensor will come on for all times that are discovered. If there are more hours than required that meet the specified requirements (e.g. below a certain rate), then it will come on for the cheapest available times up to the specified hours.</p> <p>For instance if the cheapest period is between <code>2023-01-01T00:30</code> and <code>2023-01-01T05:00</code> and your target rate is for 1 hour, then it will come on between  <code>2023-01-01T00:30</code> and <code>2023-01-01T01:30</code>. If the available times are between <code>2023-01-01T00:30</code> and <code>2023-01-01T01:00</code>, then the sensor will come on between  <code>2023-01-01T00:30</code> and <code>2023-01-01T01:00</code>.</p>"},{"location":"setup/rolling_target_rate/#look-ahead-hours","title":"Look Ahead Hours","text":"<p>This is the number of hours to look ahead for the best time periods. This will include the current time period. For instance, if it's <code>2023-01-01T00:15</code> and you have your look ahead hours set to <code>8</code>, then it will look for the best times between <code>2023-01-01T00:00</code> and <code>2023-01-01T08:00</code>.</p>"},{"location":"setup/rolling_target_rate/#evaluation-mode","title":"Evaluation mode","text":"<p>Because the time frame that is being evaluated is currently moving, you might want to set how/when the target times are evaluated in order to make the selected times more or less dynamic.</p>"},{"location":"setup/rolling_target_rate/#all-existing-target-rates-are-in-the-past","title":"All existing target rates are in the past","text":"<p>This is the default way of evaluating target times. This will only evaluate new target times if no target times have been calculated or all existing target times are in the past.</p>"},{"location":"setup/rolling_target_rate/#existing-target-rates-havent-started-or-finished","title":"Existing target rates haven't started or finished","text":"<p>This will only evaluate target times if no target times have been calculated or all existing target times are either in the future or all existing target times are in the past. </p> <p>For example, lets say we have a continuous rolling target which looks ahead for <code>8</code> hours and has existing target times from <code>2023-01-02T01:00</code> to <code>2023-01-02T02:00</code>. </p> <ul> <li>If the current time is <code>2023-01-02T00:59</code>, then the target times will be re-evaluated and might change if the new rolling target period (i.e. <code>2023-01-02T00:30</code> to <code>2023-01-02T08:30</code>) has better times than the existing target times.</li> <li>If the current time is <code>2023-01-02T01:00</code>, the the target times will not be re-evaluated because we've entered our current target times, even if the new rolling target period has cheaper times. </li> <li>If the current time is <code>2023-01-02T02:01</code>, the the target times will be re-evaluated because our existing target times are in the past and will find the best times in the new rolling target period (i.e. <code>2023-01-02T02:00</code> to <code>2023-01-02T10:00</code>). </li> </ul>"},{"location":"setup/rolling_target_rate/#always","title":"Always","text":"<p>This will always evaluate the best target times for the rolling target period, even if the sensor is in the middle of an existing target time period.</p> <p>For example, lets say we have a continuous rolling target which looks ahead for <code>8</code> hours and has existing target times from <code>2023-01-02T01:00</code> to <code>2023-01-02T02:00</code>. </p> <ul> <li>If the current time is <code>2023-01-02T00:59</code>, then the target times will be re-evaluated and might change if the new rolling target period (i.e. <code>2023-01-02T00:30</code> to <code>2023-01-02T08:30</code>) has better times than the existing target times.</li> <li>If the current time is <code>2023-01-02T01:31</code>, then the target times will be re-evaluated and might change if the new rolling target period (i.e. <code>2023-01-02T01:30</code> to <code>2023-01-02T09:30</code>) has better times than the existing target times.</li> <li>If the current time is <code>2023-01-02T02:01</code>, the the target times will be re-evaluated because our existing target times are in the past and will find the best times in the new rolling target period (i.e. <code>2023-01-02T02:00</code> to <code>2023-01-02T10:00</code>). </li> </ul> <p>Warning</p> <p>This setting means that you could end up with the sensor not turning on for the fully requested hours as the target times might be moved ahead half way through the picked times. It also could mean that the sensor doesn't come on at all during the requested look ahead hours (e.g. 8) because the cheapest period kept moving back. </p>"},{"location":"setup/rolling_target_rate/#offset","title":"Offset","text":"<p>You may want your target rate sensors to turn on a period of time before the optimum discovered period. For example, you may be turning on a robot vacuum cleaner for a 30 minute clean and want it to charge during the optimum period. For this, you'd use the <code>offset</code> field and set it to <code>-00:30:00</code>, which can be both positive and negative and go up to a maximum of 24 hours. This will shift when the sensor turns on relative to the optimum period. For example, if the optimum period is between <code>2023-01-18T10:00</code> and <code>2023-01-18T11:00</code> with an offset of <code>-00:30:00</code>, the sensor will turn on between <code>2023-01-18T09:30</code> and <code>2023-01-18T10:30</code>.</p>"},{"location":"setup/rolling_target_rate/#latest-period","title":"Latest Period","text":"<p>Depending on how you're going to use the sensor, you might want the best period at the latest possible time. For example, you might be using the sensor to turn on an immersion heater which you'll want to come on at the end of the cheapest found period. </p> <p>For instance if you turn this on and the cheapest period is between <code>2023-01-01T00:30</code> and <code>2023-01-01T05:00</code> and your target rate is for 1 hour, then it will come on between <code>2023-01-01T04:00</code> and <code>2023-01-01T05:00</code> instead of <code>2023-01-01T00:30</code> and <code>2023-01-01T01:30</code>.</p> <p>This feature is toggled on by the <code>Find last applicable rates</code> checkbox.</p>"},{"location":"setup/rolling_target_rate/#invert-target-rates","title":"Invert Target Rates","text":"<p>If this is checked, then the normal behaviour of the sensor will be reversed. This means if you target an import sensor, with this checked it will find the most expensive rates. Similarly if you target an export meter, with this checked it will find the cheapest rates.</p>"},{"location":"setup/rolling_target_rate/#minimummaximum-rates","title":"Minimum/Maximum Rates","text":"<p>There may be times that you want the target rate sensors to not take into account rates that are above or below a certain value (e.g. you don't want the sensor to turn on when rates go crazy or where it would be more beneficial to export). This is configured in pounds and pence format (e.g. 0.12 for 12p).</p> <p>Info</p> <p>If hours mode is set to minimum, then a minimum and/or maximum rate must be specified in order for the target rate sensor to know what the cut off is for discovered times.</p>"},{"location":"setup/rolling_target_rate/#weighting","title":"Weighting","text":"<p>Info</p> <p>This is only available for continuous target rate sensors in exact hours mode.</p> <p>There may be times when the device you're wanting the target rate sensor to turn on doesn't have a consistent power draw. You can specify a weighting which can be applied to each discovered 30 minute slot. This can be specified in a few different ways. Take the following example weighting for a required 2 hours.</p> <ul> <li><code>1,1,2,1</code> - This applies a weighting of 1 to the first, second and forth slot and a weighting of 2 to the third slot. This will try and make the cheapest slot fall on the third slot, as long as the surrounding slots are cheaper than other continuous slots.</li> <li><code>*,2,1</code> - This applies a weighting of 1 to the first, second and forth slot and a weighting of 2 to the third slot. The <code>*</code> can be used as a placeholder for the standard weighting of 1 for all slots before the ones specified.</li> <li><code>1,1,2,*</code> - This applies a weighting of 1 to the first, second and forth slot and a weighting of 2 to the third slot. The <code>*</code> can be used as a placeholder for the standard weighting of 1 for all slots after the ones specified.</li> <li><code>2,*,2</code> - This applies a weighting of 2 to the first and forth slot and a weighting of 1 to all slots in between. The <code>*</code> can be used as a placeholder for the standard weighting of 1 for all slots in between the specified slots.</li> </ul> <p>Each slot weighting must be a whole number or decimal number and be positive.</p> <p>You can also use weightings to ignore slots. This can be done by assigning a value of 0 for the desired slot.</p>"},{"location":"setup/rolling_target_rate/#free-electricity-weighting","title":"Free Electricity Weighting","text":"<p>If you subscribed to Octopus Energy's free electricity sessions, then you might want your sensor to favour the hours that these are available, but potentially still favour other times if they're cheaper by a larger portion. Here is where you can have a weighting applied to the rate during free electricity sessions to have them favour them in certain scenarios.</p> <p>For example, if we have the following rates</p> Start End Rate Is Free Electricity Period <code>2024-11-26 10:00:00</code> <code>2024-11-26 10:30:00</code> 0.1p N <code>2024-11-26 10:30:00</code> <code>2024-11-26 11:00:00</code> 0.1p N <code>2024-11-26 11:00:00</code> <code>2024-11-26 11:30:00</code> 0.2p Y <code>2024-11-26 11:30:00</code> <code>2024-11-26 12:00:00</code> 0.2p Y <code>2024-11-26 12:00:00</code> <code>2024-11-26 12:30:00</code> 0.3p N <code>2024-11-26 12:30:00</code> <code>2024-11-26 13:00:00</code> 0.3p N <p>If we had a target rate sensor of 1 hour, the following would occur with the following weightings</p> <p>| Weighting | Period | Reason | | 1 | <code>2024-11-26 10:00:00</code>-<code>2024-11-26 11:00:00</code> | Cheapest period | | 0.5 | <code>2024-11-26 10:00:00</code>-<code>2024-11-26 11:00:00</code> | Cheapest period would be 0.1p, free electricity period would be 0.1p. By default, target rates favour the earliest sessions. | | 0.2 | <code>2024-11-26 11:00:00</code>-<code>2024-11-26 12:00:00</code> | Cheapest period would be 0.1p, free electricity period would be 0.02p. | | 0 | <code>2024-11-26 11:00:00</code>-<code>2024-11-26 12:00:00</code> | Cheapest period would be 0.1p, free electricity period would be 0p. This will always go for free electricity sessions if available. |</p>"},{"location":"setup/rolling_target_rate/#external-rate-weightings","title":"External Rate Weightings","text":"<p>There may be times when you want to calculate the best times using factors that are external to data available via the integration, like grid carbon intensity or solar forecasts. This is where external rate weightings come in. Using the Register Rate Weightings service, you can configured weightings against given rates which are then multiplied against the associated rate. For example if you have a weighting of <code>2</code> set and a rate of <code>0.20</code>, then the rate will be interpreted as <code>0.40</code> during calculation. </p> <p>These weightings are used in addition to any weightings configured against the sensor and free electricity weightings. For example if you have rate weight of <code>2</code>, a rate of <code>0.20</code>, a sensor weight of <code>3</code> and free electricity weight of <code>0.5</code>, then rate will be interpreted as <code>0.6</code> (2 * 0.20 * 3 * 0.5).</p>"},{"location":"setup/rolling_target_rate/#attributes","title":"Attributes","text":"<p>The following attributes are available on each sensor</p> Attribute Type Description <code>name</code> <code>string</code> The name of the sensor. <code>hours</code> <code>string</code> The total hours are being discovered. <code>type</code> <code>string</code> The type/mode for the target rate sensor. This will be either <code>continuous</code> or <code>intermittent</code>. <code>mpan</code> <code>string</code> The <code>mpan</code> of the meter being used to determine the rates. <code>look_ahead_hours</code> <code>float</code> The number of hours the sensor should look ahead for the best time period <code>target_times_evaluation_mode</code> <code>string</code> The mode that determines when/how target times are picked <code>last_rates</code> <code>boolean</code> Determines if <code>Find last applicable rates</code> is turned off for the sensor. <code>offset</code> <code>string</code> The offset configured for the sensor. <code>is_target_export</code> <code>boolean</code> Determines if the meter being targeted is exporting energy. This will change the behaviour of the sensor to look for the highest rates. <code>rates_incomplete</code> <code>boolean</code> True if rate information is incomplete and therefore target times cannot be calculated; False otherwise. <code>target_times</code> <code>array</code> The discovered times and rates the sensor will come on for. <code>overall_average_cost</code> <code>float</code> The average cost/rate of all discovered times during the current 24 hour period. <code>overall_min_cost</code> <code>float</code> The minimum cost/rate of all discovered times during the current 24 hour period. <code>overall_max_cost</code> <code>float</code> The maximum cost/rate of all discovered times during the current 24 hour period. <code>current_duration_in_hours</code> <code>float</code> The duration the sensor will be on for, for the current continuous discovered period. For <code>continuous</code> sensors, this will be the entire period. For <code>intermittent</code> sensors, this could be the entire period or a portion of it, depending on the discovered times. This could be <code>none</code>/<code>unknown</code> if the sensor is not currently in a discovered period. <code>current_average_cost</code> <code>float</code> The average cost/rate for the current continuous discovered period. This could be <code>none</code>/<code>unknown</code> if the sensor is not currently in a discovered period. <code>current_min_cost</code> <code>float</code> The min cost/rate for the current continuous discovered period. This could be <code>none</code>/<code>unknown</code> if the sensor is not currently in a discovered period. <code>current_max_cost</code> <code>float</code> The max cost/rate for the current continuous discovered period. This could be <code>none</code>/<code>unknown</code> if the sensor is not currently in a discovered period. <code>next_time</code> <code>datetime</code> The next date/time the sensor will come on. This will only be populated if <code>target_times</code> has been calculated and at least one period/block is in the future. <code>next_duration_in_hours</code> <code>float</code> The duration the sensor will be on for, for the next continuous discovered period. For <code>continuous</code> sensors, this will be the entire period. For <code>intermittent</code> sensors, this could be the entire period or a portion of it, depending on the discovered times. This will only be populated if <code>target_times</code> has been calculated and at least one period/block is in the future. <code>next_average_cost</code> <code>float</code> The average cost/rate for the next continuous discovered period. For <code>continuous</code> sensors, this will be the entire period. For <code>intermittent</code> sensors, this could be the entire period or a portion of it, depending on the discovered times. This will only be populated if <code>target_times</code> has been calculated and at least one period/block is in the future. <code>next_min_cost</code> <code>float</code> The average cost/rate for the next continuous discovered period. This will only be populated if <code>target_times</code> has been calculated and at least one period/block is in the future. <code>next_max_cost</code> <code>float</code> The average cost/rate for the next continuous discovered period. This will only be populated if <code>target_times</code> has been calculated and at least one period/block is in the future. <code>target_times_last_evaluated</code> datetime The datetime the target times collection was last evaluated. This will occur if all previous target times are in the past and all rates are available for the requested future time period. For example, if you are targeting 16:00 (day 1) to 16:00 (day 2), and you only have rates up to 23:00 (day 1), then the target rates won't be calculated."},{"location":"setup/rolling_target_rate/#services","title":"Services","text":"<p>There are services available associated with target rate sensors. Please review them in the services doc.</p>"},{"location":"setup/target_rate/","title":"Target Rate Sensor(s)","text":"<p>Warning</p> <p>It has been proposed that the target rate feature of the integration be deprecated and removed in favour of a new external integration, Target Timeframes. The full reasoning can be found in the proposal.</p> <p>A migration guide is available for migrating target rate sensors to the new integration.</p> <p>After you've configured your account, you'll be able to configure target rate sensors. These are configured by adding subsequent instances of the integration going through the normal flow, and selecting <code>Target Rate</code> in the provided menu.</p> <p>These sensors calculate the lowest continuous or intermittent rates within a 24 hour period and turn on when these periods are active. If you are targeting an export meter, then the sensors will calculate the highest continuous or intermittent rates within a 24 hour period and turn on when these periods are active. If you are wanting to evaluate on a rolling basis, you might be interested in the rolling target rate sensors</p> <p>These sensors can then be used in automations to turn on/off devices that save you (and the planet) energy and money. You can go through this flow as many times as you need target rate sensors.</p> <p>Each sensor will be in the form <code>binary_sensor.octopus_energy_target_{{TARGET_RATE_NAME}}</code>.</p>"},{"location":"setup/target_rate/#setup","title":"Setup","text":""},{"location":"setup/target_rate/#target-timeframe","title":"Target Timeframe","text":"<p>If you're wanting your devices to come on during a certain timeframe, for example while you're at work, you can set the minimum and/or maximum times for your target rate sensor. These are specified in 24 hour clock format and will attempt to find the optimum discovered period during these times.</p> <p>The <code>from/start</code> time can be set in the field <code>The minimum time to start the device</code> and the <code>to/end</code> time can be set in the field <code>The maximum time to stop the device</code>.</p> <p>If not specified, these default from <code>00:00:00</code> to <code>00:00:00</code> the following day.</p> <p>If for example you want to look at prices overnight you could set the minimum time to something like <code>20:00</code> and your maximum time to something like <code>05:00</code>. If the minimum time is \"after\" the maximum time, then it will treat the maximum time as the time for the following day.</p> <p>Info</p> <p>The target rate will not be evaluated until all rates are available for the specified timeframe. Therefore if we're looking between <code>00:00</code> and <code>00:00</code>, full rate information must exist between this time. Whereas if times are between <code>10:00</code> and <code>16:00</code>, then rate information is only needed between these times before it can be calculated.</p>"},{"location":"setup/target_rate/#agile-users","title":"Agile Users","text":"<p>If you are an agile user, then agile prices are available from 11pm to 11pm UK time and published between <code>16:00</code> and <code>20:00</code> UK time. </p> <p>Therefore, you cannot specify a timeframe that starts before <code>16:00</code> and ends after <code>23:00</code> because the target rate(s) will not be able to be calculated until part way through the specified timeframe as this is when the full set of rate information will become available. This is best illustrated with the following example, where lets say you wanted a target rate sensor to look at between <code>00:00</code> and <code>00:00</code> the next day (24 hours). Your initial available data would potentially look like the following</p> start end value <code>2023-01-01T00:00</code> <code>2023-01-01T00:30</code> 6 <code>2023-01-01T00:30</code> <code>2023-01-01T05:00</code> 12 <code>2023-01-01T05:00</code> <code>2023-01-01T05:30</code> 7 <code>2023-01-01T05:30</code> <code>2023-01-01T18:00</code> 20 <code>2023-01-01T18:00</code> <code>2023-01-01T23:00</code> 34 <p>Where the last hour of data isn't available (because agile doesn't provide this data in the initial batch), which means the target rate sensor can't calculate the best time because it doesn't have the full data set available. If agile rate data for the next 24 hour period then became available at <code>16:30</code> and looked like the following</p> start end value <code>2023-01-01T23:00</code> <code>2023-01-02T00:00</code> 19 <p>We now have the full data set available for the target rate sensor to calculate the best time, which would be done close to when the agile data became available (e.g. around <code>16:30</code>). The result would be the target rate sensor would pick <code>2023-01-01T00:00</code> to <code>2023-01-01T00:30</code> or <code>2023-01-01T05:00</code> to <code>2023-01-01T05:30</code> because these are the cheapest times. However, these times are in the past because we're now at <code>16:30</code> and so our target rate sensor will never turn on. If a time in the future was picked to counteract this, then people would question why it didn't turn on during the cheapest times.</p> <p>Therefore, we recommend you set your timeframes to <code>16:00</code>/<code>16:00</code> or <code>23:00</code>/<code>23:00</code> if you're wanting to target a full 24 hours, however other valid times might include</p> from/start to/end Notes <code>10:00</code> <code>23:00</code> our start time is before 4pm, but our end time is not after 11pm. <code>16:30</code> <code>23:30</code> our start time is after 4pm, so our end time can be after 11pm. <code>17:00</code> <code>14:00</code> our start time is after 4pm and our end time is before our start time so therefore for the next day. Doing this might delay when the target rate sensor is calculated depending on when the rates are made available for the next day (e.g. if they're late for publishing). <p>This is not automatically done by the integration as I didn't want to cause confusion for users when they didn't set anything nor did I want behaviour to implicitly change when users switch tariffs.</p> <p>See the examples below for how this can be used and how rates will be selected.</p>"},{"location":"setup/target_rate/#hours","title":"Hours","text":"<p>The hours that you require for the sensor to find. This should be in decimal format and represent 30 minute increments. For example 30 minutes would be <code>0.5</code>, 1 hour would be <code>1</code> or <code>1.0</code>, 1 hour and 30 minutes would be <code>1.5</code>, etc.</p>"},{"location":"setup/target_rate/#hours-mode","title":"Hours Mode","text":"<p>There are three different modes that the target rate sensor can be set to, which determines how the specified hours should be interpreted</p>"},{"location":"setup/target_rate/#exact-default","title":"Exact (default)","text":"<p>The target rate sensor will try to find the best times for the specified hours. If less than the target hours are discovered, the sensor will not come on at all. If there are more hours than required that meet the specified requirements (e.g. below a certain rate), then it will come on for the cheapest available times up to the specified hours.</p> <p>For instance if the cheapest period is between <code>2023-01-01T00:30</code> and <code>2023-01-01T05:00</code> and your target rate is for 1 hour, then it will come on between  <code>2023-01-01T00:30</code> and <code>2023-01-01T01:30</code>. If the available times are between <code>2023-01-01T00:30</code> and <code>2023-01-01T01:00</code>, then the sensor will not come on at all.</p>"},{"location":"setup/target_rate/#minimum","title":"Minimum","text":"<p>The target rate sensor will try to find the best times for the specified hours. If less than the target hours are discovered, the sensor will not come on at all. If there are more hours than required that meet the specified requirements (e.g. below a certain rate), then it will come on for all discovered times.</p> <p>For instance if the cheapest period is between <code>2023-01-01T00:30</code> and <code>2023-01-01T05:00</code> and your target rate is for 1 hour, then it will come on between  <code>2023-01-01T00:30</code> and <code>2023-01-01T05:00</code>. If the available times are between <code>2023-01-01T00:30</code> and <code>2023-01-01T01:00</code>, then the sensor will not come on at all.</p>"},{"location":"setup/target_rate/#maximum","title":"Maximum","text":"<p>The target rate sensor will try to find the best times for the specified hours. If less than the target hours are discovered, the sensor will come on for all times that are discovered. If there are more hours than required that meet the specified requirements (e.g. below a certain rate), then it will come on for the cheapest available times up to the specified hours.</p> <p>For instance if the cheapest period is between <code>2023-01-01T00:30</code> and <code>2023-01-01T05:00</code> and your target rate is for 1 hour, then it will come on between  <code>2023-01-01T00:30</code> and <code>2023-01-01T01:30</code>. If the available times are between <code>2023-01-01T00:30</code> and <code>2023-01-01T01:00</code>, then the sensor will come on between  <code>2023-01-01T00:30</code> and <code>2023-01-01T01:00</code>.</p>"},{"location":"setup/target_rate/#evaluation-mode","title":"Evaluation mode","text":"<p>Because the time frame that is being evaluated could have external factors change the underlying data (e.g. if you're using external rate weightings), you might want to set how/when the target times are evaluated in order to make the selected times more or less dynamic.</p>"},{"location":"setup/target_rate/#all-existing-target-rates-are-in-the-past","title":"All existing target rates are in the past","text":"<p>This is the default way of evaluating target times. This will only evaluate new target times if no target times have been calculated or all existing target times are in the past.</p>"},{"location":"setup/target_rate/#existing-target-rates-havent-started-or-finished","title":"Existing target rates haven't started or finished","text":"<p>This will only evaluate target times if no target times have been calculated or all existing target times are either in the future or all existing target times are in the past. </p> <p>For example, lets say we have a continuous target which looks between <code>00:00</code> and <code>08:00</code> has existing target times from <code>2023-01-02T01:00</code> to <code>2023-01-02T02:00</code>. </p> <ul> <li>If the current time is <code>2023-01-02T00:59</code>, then the target times will be re-evaluated and might change if the target period (i.e. <code>2023-01-02T00:30</code> to <code>2023-01-02T08:30</code>) has better rates than the existing target times (e.g. the external weightings have changed).</li> <li>If the current time is <code>2023-01-02T01:00</code>, the the target times will not be re-evaluated because we've entered our current target times, even if the evaluation period has cheaper times. </li> <li>If the current time is <code>2023-01-02T02:01</code>, the the target times will be re-evaluated because our existing target times are in the past and will find the best times in the new rolling target period (i.e. <code>2023-01-02T02:00</code> to <code>2023-01-02T10:00</code>). </li> </ul>"},{"location":"setup/target_rate/#offset","title":"Offset","text":"<p>You may want your target rate sensors to turn on a period of time before the optimum discovered period. For example, you may be turning on a robot vacuum cleaner for a 30 minute clean and want it to charge during the optimum period. For this, you'd use the <code>offset</code> field and set it to <code>-00:30:00</code>, which can be both positive and negative and go up to a maximum of 24 hours. This will shift when the sensor turns on relative to the optimum period. For example, if the optimum period is between <code>2023-01-18T10:00</code> and <code>2023-01-18T11:00</code> with an offset of <code>-00:30:00</code>, the sensor will turn on between <code>2023-01-18T09:30</code> and <code>2023-01-18T10:30</code>.</p>"},{"location":"setup/target_rate/#re-evaluate-within-time-frame","title":"Re-evaluate within time frame","text":"<p>Depending on how you're going to use the sensor, you might want the best period to be found throughout the day so it's always available. For example, you might be using the sensor to turn on a washing machine which you might want to come on at the best time regardless of when you use the washing machine. You can activate this behaviour by setting the <code>Re-evaluate multiple times a day</code> checkbox.</p> <p>Warning</p> <p>Using this can result in the sensor coming on more than the target hours, and therefore should be used in conjunction with other sensors. Depending on how long your target timeframe is, upon each re-evaluation the picked times will get steadily worse.</p> <p>However, you might also only want the target time to occur once during each timeframe so once the best time for that day has passed it won't turn on again until the next timeframe. For example, you might be using the sensor to turn on something that isn't time critical and could wait till the next timeframe like a charger. This is the default behaviour and is done by not setting the <code>Re-evaluate multiple times a day</code> checkbox.</p> <p>Info</p> <p>The next set of target times will not be calculated until all target times are in the past. This will have an effect on the <code>next</code> set of attributes on the sensor.</p>"},{"location":"setup/target_rate/#latest-period","title":"Latest Period","text":"<p>Depending on how you're going to use the sensor, you might want the best period at the latest possible time. For example, you might be using the sensor to turn on an immersion heater which you'll want to come on at the end of the cheapest found period. </p> <p>For instance if you turn this on and the cheapest period is between <code>2023-01-01T00:30</code> and <code>2023-01-01T05:00</code> and your target rate is for 1 hour, then it will come on between <code>2023-01-01T04:00</code> and <code>2023-01-01T05:00</code> instead of <code>2023-01-01T00:30</code> and <code>2023-01-01T01:30</code>.</p> <p>This feature is toggled on by the <code>Find last applicable rates</code> checkbox.</p>"},{"location":"setup/target_rate/#invert-target-rates","title":"Invert Target Rates","text":"<p>If this is checked, then the normal behaviour of the sensor will be reversed. This means if you target an import sensor, with this checked it will find the most expensive rates. Similarly if you target an export meter, with this checked it will find the cheapest rates.</p>"},{"location":"setup/target_rate/#minimummaximum-rates","title":"Minimum/Maximum Rates","text":"<p>There may be times that you want the target rate sensors to not take into account rates that are above or below a certain value (e.g. you don't want the sensor to turn on when rates go crazy or where it would be more beneficial to export). This is configured in pounds and pence format (e.g. 0.12 for 12p).</p> <p>Info</p> <p>If hours mode is set to minimum, then a minimum and/or maximum rate must be specified in order for the target rate sensor to know what the cut off is for discovered times.</p>"},{"location":"setup/target_rate/#weighting","title":"Weighting","text":"<p>Info</p> <p>This is only available for continuous target rate sensors in exact hours mode.</p> <p>There may be times when the device you're wanting the target rate sensor to turn on doesn't have a consistent power draw. You can specify a weighting which can be applied to each discovered 30 minute slot. This can be specified in a few different ways. Take the following example weighting for a required 2 hours.</p> <ul> <li><code>1,1,2,1</code> - This applies a weighting of 1 to the first, second and forth slot and a weighting of 2 to the third slot. This will try and make the cheapest slot fall on the third slot, as long as the surrounding slots are cheaper than other continuous slots.</li> <li><code>*,2,1</code> - This applies a weighting of 1 to the first, second and forth slot and a weighting of 2 to the third slot. The <code>*</code> can be used as a placeholder for the standard weighting of 1 for all slots before the ones specified.</li> <li><code>1,1,2,*</code> - This applies a weighting of 1 to the first, second and forth slot and a weighting of 2 to the third slot. The <code>*</code> can be used as a placeholder for the standard weighting of 1 for all slots after the ones specified.</li> <li><code>2,*,2</code> - This applies a weighting of 2 to the first and forth slot and a weighting of 1 to all slots in between. The <code>*</code> can be used as a placeholder for the standard weighting of 1 for all slots in between the specified slots.</li> </ul> <p>Each slot weighting must be a whole number or decimal number and be positive.</p> <p>You can also use weightings to ignore slots. This can be done by assigning a value of 0 for the desired slot.</p>"},{"location":"setup/target_rate/#free-electricity-weighting","title":"Free Electricity Weighting","text":"<p>If you subscribed to Octopus Energy's free electricity sessions, then you might want your sensor to favour the hours that these are available, but potentially still favour other times if they're cheaper by a larger portion. Here is where you can have a weighting applied to the rate during free electricity sessions to have them favour them in certain scenarios.</p> <p>For example, if we have the following rates</p> Start End Rate Is Free Electricity Period <code>2024-11-26 10:00:00</code> <code>2024-11-26 10:30:00</code> 0.1p N <code>2024-11-26 10:30:00</code> <code>2024-11-26 11:00:00</code> 0.1p N <code>2024-11-26 11:00:00</code> <code>2024-11-26 11:30:00</code> 0.2p Y <code>2024-11-26 11:30:00</code> <code>2024-11-26 12:00:00</code> 0.2p Y <code>2024-11-26 12:00:00</code> <code>2024-11-26 12:30:00</code> 0.3p N <code>2024-11-26 12:30:00</code> <code>2024-11-26 13:00:00</code> 0.3p N <p>If we had a target rate sensor of 1 hour, the following would occur with the following weightings</p> <p>| Weighting | Period | Reason | | 1 | <code>2024-11-26 10:00:00</code>-<code>2024-11-26 11:00:00</code> | Cheapest period | | 0.5 | <code>2024-11-26 10:00:00</code>-<code>2024-11-26 11:00:00</code> | Cheapest period would be 0.1p, free electricity period would be 0.1p. By default, target rates favour the earliest sessions. | | 0.2 | <code>2024-11-26 11:00:00</code>-<code>2024-11-26 12:00:00</code> | Cheapest period would be 0.1p, free electricity period would be 0.02p. | | 0 | <code>2024-11-26 11:00:00</code>-<code>2024-11-26 12:00:00</code> | Cheapest period would be 0.1p, free electricity period would be 0p. This will always go for free electricity sessions if available. |</p>"},{"location":"setup/target_rate/#external-rate-weightings","title":"External Rate Weightings","text":"<p>There may be times when you want to calculate the best times using factors that are external to data available via the integration, like grid carbon intensity or solar forecasts. This is where external rate weightings come in. Using the Register Rate Weightings service, you can configured weightings against given rates which are then multiplied against the associated rate. For example if you have a weighting of <code>2</code> set and a rate of <code>0.20</code>, then the rate will be interpreted as <code>0.40</code> during calculation. </p> <p>These weightings are used in addition to any weightings configured against the sensor and free electricity weightings. For example if you have rate weight of <code>2</code>, a rate of <code>0.20</code>, a sensor weight of <code>3</code> and free electricity weight of <code>0.5</code>, then rate will be interpreted as <code>0.6</code> (2 * 0.20 * 3 * 0.5).</p>"},{"location":"setup/target_rate/#attributes","title":"Attributes","text":"<p>The following attributes are available on each sensor</p> Attribute Type Description <code>name</code> <code>string</code> The name of the sensor. <code>hours</code> <code>string</code> The total hours are being discovered. <code>type</code> <code>string</code> The type/mode for the target rate sensor. This will be either <code>continuous</code> or <code>intermittent</code>. <code>mpan</code> <code>string</code> The <code>mpan</code> of the meter being used to determine the rates. <code>target_times_evaluation_mode</code> <code>string</code> The mode that determines when/how target times are picked <code>rolling_target</code> <code>boolean</code> Determines if <code>Re-evaluate multiple times a day</code> is turned on for the sensor. <code>last_rates</code> <code>boolean</code> Determines if <code>Find last applicable rates</code> is turned off for the sensor. <code>offset</code> <code>string</code> The offset configured for the sensor. <code>start_time</code> <code>string</code> The start time configured for the sensor. <code>end_time</code> <code>string</code> The end time configured for the sensor. <code>is_target_export</code> <code>boolean</code> Determines if the meter being targeted is exporting energy. This will change the behaviour of the sensor to look for the highest rates. <code>rates_incomplete</code> <code>boolean</code> True if rate information is incomplete and therefore target times cannot be calculated; False otherwise. <code>target_times</code> <code>array</code> The discovered times and rates the sensor will come on for. <code>overall_average_cost</code> <code>float</code> The average cost/rate of all discovered times during the current 24 hour period. <code>overall_min_cost</code> <code>float</code> The minimum cost/rate of all discovered times during the current 24 hour period. <code>overall_max_cost</code> <code>float</code> The maximum cost/rate of all discovered times during the current 24 hour period. <code>current_duration_in_hours</code> <code>float</code> The duration the sensor will be on for, for the current continuous discovered period. For <code>continuous</code> sensors, this will be the entire period. For <code>intermittent</code> sensors, this could be the entire period or a portion of it, depending on the discovered times. This could be <code>none</code>/<code>unknown</code> if the sensor is not currently in a discovered period. <code>current_average_cost</code> <code>float</code> The average cost/rate for the current continuous discovered period. This could be <code>none</code>/<code>unknown</code> if the sensor is not currently in a discovered period. <code>current_min_cost</code> <code>float</code> The min cost/rate for the current continuous discovered period. This could be <code>none</code>/<code>unknown</code> if the sensor is not currently in a discovered period. <code>current_max_cost</code> <code>float</code> The max cost/rate for the current continuous discovered period. This could be <code>none</code>/<code>unknown</code> if the sensor is not currently in a discovered period. <code>next_time</code> <code>datetime</code> The next date/time the sensor will come on. This will only be populated if <code>target_times</code> has been calculated and at least one period/block is in the future. <code>next_duration_in_hours</code> <code>float</code> The duration the sensor will be on for, for the next continuous discovered period. For <code>continuous</code> sensors, this will be the entire period. For <code>intermittent</code> sensors, this could be the entire period or a portion of it, depending on the discovered times. This will only be populated if <code>target_times</code> has been calculated and at least one period/block is in the future. <code>next_average_cost</code> <code>float</code> The average cost/rate for the next continuous discovered period. For <code>continuous</code> sensors, this will be the entire period. For <code>intermittent</code> sensors, this could be the entire period or a portion of it, depending on the discovered times. This will only be populated if <code>target_times</code> has been calculated and at least one period/block is in the future. <code>next_min_cost</code> <code>float</code> The average cost/rate for the next continuous discovered period. This will only be populated if <code>target_times</code> has been calculated and at least one period/block is in the future. <code>next_max_cost</code> <code>float</code> The average cost/rate for the next continuous discovered period. This will only be populated if <code>target_times</code> has been calculated and at least one period/block is in the future. <code>target_times_last_evaluated</code> datetime The datetime the target times collection was last evaluated. This will occur if all previous target times are in the past and all rates are available for the requested future time period. For example, if you are targeting 16:00 (day 1) to 16:00 (day 2), and you only have rates up to 23:00 (day 1), then the target rates won't be calculated."},{"location":"setup/target_rate/#services","title":"Services","text":"<p>There are services available associated with target rate sensors. Please review them in the services doc.</p>"},{"location":"setup/target_rate/#examples","title":"Examples","text":"<p>Let's look at a few examples. Let's say we have the the following (unrealistic) set of rates:</p> start end value <code>2023-01-01T00:00</code> <code>2023-01-01T00:30</code> 6 <code>2023-01-01T00:30</code> <code>2023-01-01T05:00</code> 12 <code>2023-01-01T05:00</code> <code>2023-01-01T05:30</code> 7 <code>2023-01-01T05:30</code> <code>2023-01-01T18:00</code> 20 <code>2023-01-01T18:00</code> <code>2023-01-01T23:30</code> 34 <code>2023-01-01T23:30</code> <code>2023-01-02T00:30</code> 5 <code>2023-01-02T00:30</code> <code>2023-01-02T05:00</code> 12 <code>2023-01-02T05:00</code> <code>2023-01-02T05:30</code> 7 <code>2023-01-02T05:30</code> <code>2023-01-02T18:00</code> 20 <code>2023-01-02T18:00</code> <code>2023-01-02T23:00</code> 34 <code>2023-01-02T23:30</code> <code>2023-01-03T00:00</code> 6"},{"location":"setup/target_rate/#continuous","title":"Continuous","text":"<p>If we look at a continuous sensor that we want on for 1 hour.</p> <p>If we set no from/to times, then our 24 hour period being looked at ranges from <code>00:00:00</code> to <code>23:59:59</code>.</p> <p>The following table shows what this would be like.</p> current date/time period <code>Re-evaluate multiple times a day</code> reasoning <code>2023-01-01T00:00</code> <code>2023-01-01T00:00</code> - <code>2023-01-01T01:00</code> <code>false</code> While 5 is our lowest rate within the current 24 hour period, it doesn't cover our whole 1 hour and is next to a high 34 rate. A rate of 6 is the next available rate with a low following rate. <code>2023-01-01T01:00</code> <code>2023-01-02T00:00</code> - <code>2023-01-02T01:00</code> <code>false</code> Our lowest period is in the past, so we have to wait until our target period has passed to look at the next evaluation period. <code>2023-01-01T01:00</code> <code>2023-01-01T04:30</code> - <code>2023-01-01T05:30</code> <code>true</code> The rate of 6 is in the past, so 7 is our next lowest rate. 12 is smaller rate than 20 so we start in the rate period before to fill our desired hour. <code>2023-01-01T23:30</code> None <code>true</code> There is no longer enough time available in the current 24 hour period, so we have to wait until our target period has passed to look at the next evaluation period. <p>If we set our from/to times for <code>05:00</code> to <code>19:00</code>, we then limit the period that we look at. The following table shows what this would be like.</p> current date/time period <code>Re-evaluate multiple times a day</code> reasoning <code>2023-01-01T00:00</code> <code>2023-01-01T05:00</code> - <code>2023-01-01T06:00</code> <code>false</code> The rate of 12 is no longer available as it's outside of our <code>from</code> time. <code>2023-01-01T06:30</code> <code>2023-01-02T05:00</code> - <code>2023-01-02T06:00</code> <code>false</code> Our lowest period is in the past, so we have to wait until our target period has passed to look at the next evaluation period. <code>2023-01-01T06:30</code> <code>2023-01-01T06:30</code> - <code>2023-01-01T07:30</code> <code>true</code> The rate of 7 is in the past, so we must look for the next lowest combined rate. <code>2023-01-01T18:00</code> <code>2023-01-01T18:00</code> - <code>2023-01-01T19:00</code> <code>true</code> The rate of 20 is in the past, so we must look for the next lowest combined rate which is 34. <code>2023-01-01T18:30</code> None <code>true</code> There is no longer enough time available within our restricted time, so we have to wait until our target period has passed to look at the next evaluation period. <p>If we set our from/to times to look over two days, from <code>20:00</code> to <code>06:00</code>, we then limit the period that we look at to overnight. The following table shows what this would be like.</p> current date/time period <code>Re-evaluate multiple times a day</code> reasoning <code>2023-01-01T20:00</code> <code>2023-01-01T23:30</code> - <code>2023-01-02T01:30</code> <code>false</code> Our lowest rate of 5 now falls between our overnight time period so is available. <code>2023-01-02T02:00</code> <code>2023-01-01T23:30</code> - <code>2023-01-02T01:30</code> <code>false</code> Our lowest period is in the past, so we have to wait until our target period has passed to look at the next evaluation period. <code>2023-01-02T02:00</code> <code>2023-01-02T04:30</code> - <code>2023-01-02T05:30</code> <code>true</code> The rate of 5 is in the past, so we must look for the next lowest combined rate, which includes our half hour rate at 7. <code>2023-01-02T05:30</code> None <code>true</code> There is no longer enough time available within our restricted time, so we have to wait until our target period has passed to look at the next evaluation period. <p>If we set an offset of <code>-00:30:00</code>, then while the times might be the same, the target rate sensor will turn on 30 minutes before the select rate period starts. Any set time restrictions will not include the offset.</p>"},{"location":"setup/target_rate/#intermittent","title":"Intermittent","text":"<p>If we look at an intermittent sensor that we want on for 1 hour total (but not necessarily together).</p> <p>If we set no from/to times, then our 24 hour period being looked at ranges from <code>00:00:00</code> to <code>23:59:59</code>.</p> <p>The following table shows what this would be like.</p> current date/time period <code>Re-evaluate multiple times a day</code> reasoning <code>2023-01-01T00:00</code> <code>2023-01-01T00:00</code> - <code>2023-01-01T00:30</code>, <code>2023-01-01T23:30</code> - <code>2023-01-02T00:00</code> <code>false</code> Our sensor will go on for 30 minutes at the cheapest rate, then 30 minutes at the next cheapest rate. <code>2023-01-01T01:00</code> <code>2023-01-01T00:00</code> - <code>2023-01-01T00:30</code>, <code>2023-01-01T23:30</code> - <code>2023-01-02T00:00</code> <code>false</code> Our sensor will go on for 30 minutes at the cheapest rate, which will be in the past, then 30 minutes at the next cheapest rate. <code>2023-01-01T01:00</code> <code>2023-01-01T05:00</code> - <code>2023-01-01T05:30</code>, <code>2023-01-01T23:30</code> - <code>2023-01-02T00:00</code> <code>true</code> Our sensor will go on for 30 minutes at the second cheapest rate, then 30 minutes at the third cheapest rate. <code>2023-01-01T23:30</code> None <code>true</code> There is no longer enough time available in the current 24 hour period, so we have to wait until our target period has passed to look at the next evaluation period. <p>If we set our from/to times for <code>05:00</code> to <code>19:00</code>, we then limit the period that we look at. The following table shows what this would be like.</p> current date/time period <code>Re-evaluate multiple times a day</code> reasoning <code>2023-01-01T00:00</code> <code>2023-01-01T05:00</code> - <code>2023-01-01T05:30</code>, <code>2023-01-01T05:30</code> - <code>2023-01-01T06:00</code> <code>false</code> Our cheapest rates are outside our target range, so we need to look at the next cheapest. Luckily on our scenario the two cheapest rates are next to each other. <code>2023-01-01T06:30</code> <code>2023-01-01T05:00</code> - <code>2023-01-01T05:30</code>, <code>2023-01-01T05:30</code> - <code>2023-01-01T06:00</code> <code>false</code> Both of our cheapest rates in the target range are in the past. <code>2023-01-01T06:30</code> <code>2023-01-01T06:30</code> - <code>2023-01-01T07:00</code>, <code>2023-01-01T07:00</code> - <code>2023-01-01T07:30</code> <code>true</code> Both of our cheapest rates in the target range are in the past, so we must look for the next lowest combined rate. <code>2023-01-01T18:30</code> None <code>true</code> There is no longer enough time available within our restricted time, so we have to wait until our target period has passed to look at the next evaluation period. <p>If we set our from/to times to look over two days, from <code>20:00</code> to <code>06:00</code>, we then limit the period that we look at to overnight. The following table shows what this would be like.</p> current date/time period <code>Re-evaluate multiple times a day</code> reasoning <code>2023-01-01T20:00</code> <code>2023-01-01T23:30</code> - <code>2023-01-02T00:30</code>, <code>2023-01-02T05:00</code> - <code>2023-01-02T05:30</code> <code>false</code> Our lowest rate of 5 now falls between our overnight time period so is available. <code>2023-01-02T02:00</code> <code>2023-01-01T23:30</code> - <code>2023-01-02T00:30</code>, <code>2023-01-02T05:00</code> - <code>2023-01-02T05:30</code> <code>false</code> Our lowest period is in the past, but we still have a rate in the future so our sensor will only come on once. <code>2023-01-02T02:00</code> <code>2023-01-02T02:00</code> - <code>2023-01-02T02:30</code>, <code>2023-01-02T05:00</code> - <code>2023-01-02T05:30</code> <code>true</code> The rate of 5 is in the past, so we must look for the next lowest combined rate, which includes our half hour rate at 7. <code>2023-01-02T05:30</code> None <code>true</code> There is no longer enough time available within our restricted time, so we have to wait until our target period has passed to look at the next evaluation period. <p>If we set an offset of <code>-00:30:00</code>, then while the times might be the same, the target rate sensor will turn on 30 minutes before the select rate period starts. Any set time restrictions will not include the offset.</p>"},{"location":"setup/tariff_comparison/","title":"Tariff Comparison","text":"<p>There will probably be times when you'll want to know if you're on the right tariff for you financially.</p> <p>The tariff comparison allows you to elect a new tariff which will generate some additional sensors which will show the cost of your elected meter against that tariff.</p> <p>After you've configured your account, you'll be able to configure tariff comparison sensors. These are configured by adding subsequent instances of the integration going through the normal flow, and selecting <code>Tariff Comparison</code> in the provided menu.</p> <p>Note</p> <p>This will only look and provide data inline with previous consumption data. There are no plans to provide data for any other time frame (e.g. \"today\"). This is for two reasons.</p> <ol> <li> <p>I personally don't see the point of tracking this information against the current consumption as the value of the data will be larger in scope to just today (e.g. you're probably not going to switch tariffs because this morning is cheaper on another tariff) and while a tariff might be cheaper at one point during the day, it might be more expensive at another point. The value, to me, is in the historic trend of the data and knowing this a few hours early isn't going to save much.</p> </li> <li> <p>I only want the integration to retrieve data that is required for functionality to stay in the good books with OE</p> </li> </ol> <p>Info</p> <p>When updating the tariff depending on what previous consumption data is available, it can take up to 24 hours to update the cost. This will be improved in the future.</p>"},{"location":"setup/tariff_comparison/#setup","title":"Setup","text":""},{"location":"setup/tariff_comparison/#meter","title":"Meter","text":"<p>This is the meter whose consumption will be used as the basis for the calculation.</p>"},{"location":"setup/tariff_comparison/#product-code","title":"Product Code","text":"<p>To find the product code, you can use the Octopus Energy API to search for current home or business products. Once your target product has been found, you will want to set this value to the value of the <code>code</code> property in the list of products.</p> <p>For example if I wanted to check <code>Flexible Octopus November 2022 v1</code>. I would look up all of the products and look for my target under <code>full_name</code> or <code>display_name</code>.</p> <p></p> <p>I would then set my product code to <code>VAR-22-11-01</code>.</p>"},{"location":"setup/tariff_comparison/#tariff-code","title":"Tariff Code","text":"<p>To find the tariff code, you can use the Octopus Energy API to search for the available tariffs for your target product.</p> <p>For example if I wanted to check <code>Flexible Octopus November 2022 v1</code>. I would look up all of the products and look for my target under <code>full_name</code> or <code>display_name</code>. I would then look up the product by taking the value specified in the <code>code</code> field and putting it at the end of the products url. Alternatively, you can follow the link that is present in the product listing.</p> <p></p> <p>In this scenario, the <code>code</code> is <code>VAR-22-11-01</code> and so the product url is https://api.octopus.energy/v1/products/VAR-22-11-01. From this list, I would then look up the tariff for my region (e.g. <code>A</code> defined at the end of my current tariff) which is defined in the <code>code</code> field. Once your target tariff has been found, you will want to set this property in the configuration to the value of the <code>code</code> property. In this example, I want the duel electricity tariff version, so will pick <code>E-2R-VAR-22-11-01-A</code>.</p> <p></p>"},{"location":"setup/tariff_comparison/#entities","title":"Entities","text":"<p>The following entities will be available for each entry</p>"},{"location":"setup/tariff_comparison/#cost-override","title":"Cost Override","text":"<p><code>sensor.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_previous_accumulative_cost_{{TARIFF COMPARISON NAME}}</code> for electricity based meters; <code>sensor.octopus_energy_gas_{{METER_SERIAL_NUMBER}}_{{MPRN_NUMBER}}_previous_accumulative_cost_{{TARIFF COMPARISON NAME}}</code> for gas based meters.</p> <p>This will display the cost of your previous accumulative consumption against the elected tariff.</p> <p>Info</p> <p>These sensors will compare the same time period as the electricity previous accumulative consumption or gas previous accumulative consumption.</p>"},{"location":"setup/tariff_comparison/#previous-consumption-override-day-rates","title":"Previous Consumption Override Day Rates","text":"<p><code>event.octopus_energy_electricity_{{METER_SERIAL_NUMBER}}_{{MPAN_NUMBER}}_previous_consumption_rates_{{TARIFF COMPARISON NAME}}</code> for electricity based meters; <code>event.octopus_energy_gas_{{METER_SERIAL_NUMBER}}_{{MPRN_NUMBER}}_previous_consumption_rates_{{TARIFF COMPARISON NAME}}</code> for gas based meters.</p> <p>The state of this sensor states when the previous consumption tariff comparison rates were last updated. The attributes of this sensor exposes the previous consumption tariff comparison rates. </p> <p>Note</p> <p>This is disabled by default.</p> <p>Info</p> <p>These sensors will provide rates for the same time period as the electricity previous accumulative consumption or gas previous accumulative consumption.</p> Attribute Type Description <code>rates</code> <code>array</code> The list of rates applicable for the previous consumption tariff comparison <code>product_code</code> <code>string</code> The product code associated with previous consumption tariff comparison rates <code>tariff_code</code> <code>string</code> The tariff code associated with previous consumption tariff comparison rates <p>Each rate item has the following attributes</p> Attribute Type Description <code>start</code> <code>datetime</code> The date/time when the rate starts <code>end</code> <code>datetime</code> The date/time when the rate ends <code>value_inc_vat</code> <code>float</code> The value of the rate including VAT. This is in pounds and pence (e.g. 1.01 = \u00a31.01) <code>is_capped</code> <code>boolean</code> Indicates if the rate has been capped by a configured price cap <code>is_intelligent_adjusted</code> <code>boolean</code> Indicates if the rate has been adjusted due to a dispatch organised by an intelligent tariff"}]}